[05/29 17:05:16] detectron2 INFO: Rank of current process: 0. World size: 1
[05/29 17:05:18] detectron2 INFO: Environment info:
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.17 | packaged by conda-forge | (main, Apr 10 2025, 22:19:12) [GCC 13.3.0]
numpy                            1.26.4
detectron2                       0.6 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2
detectron2._C                    not built correctly: /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/_C.cpython-310-x86_64-linux-gnu.so: undefined symbol: _ZNK3c105Error4whatEv
Compiler ($CXX)                  c++ (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
CUDA compiler                    Not found
detectron2 arch flags            /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/_C.cpython-310-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.1.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA RTX A6000 (arch=8.6)
Driver version                   535.183.01
CUDA_HOME                        /usr/local/cuda - invalid!
Pillow                           11.1.0
torchvision                      0.16.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torchvision
torchvision arch flags           /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.11.0
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.9.2
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=8.9.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[05/29 17:05:18] detectron2 INFO: Command line arguments: Namespace(config_file='configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml', resume=False, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50158', opts=[])
[05/29 17:05:18] detectron2 INFO: Contents of args.config_file=configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml:
[38;5;245m# MaskFormer config for Climatenet-based AR semantic segmentation[39m

[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormer[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m1.5530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m0.2541[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m100814.0726[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m19.2185[39m[38;5;15m][39m[38;5;15m   [39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m8.2976[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m6.2316[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m1461.2256[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m15.8173[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_resnet_backbone[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;245m# âœ… ì¶”ê°€[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormerHead[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m[38;5;15m  [39m[38;5;245m# 0=background, 1=AR[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGN[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mnetcdf_semantic[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(768,)[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_train",)[39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_test",)[39m

[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m

[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mWarmupPolyLR[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mADAMW[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mfull_model[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m

[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/climatenet_v2[39m[38;5;186m"[39m

[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[05/29 17:05:18] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mREPEAT_SQRT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_test[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_train[39m
[38;5;204mFLOAT32_PRECISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCOLOR_AUG_SSD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSINGLE_CATEGORY_MAX_AREA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnetcdf_semantic[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRGB[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_resnet_backbone[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mENFORCE_INPUT_PROJ[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mOBJECT_MASK_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mPANOPTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m      [39m[38;5;204mSEM_SEG_POSTPROCESSING_BEFORE_INFERENCE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormer[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.553[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.2541[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100814.0726[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m19.2185[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m8.2976[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6.2316[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1461.2256[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.8173[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_MULTI_GRID[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdeeplab[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m18[39m
[38;5;15m    [39m[38;5;204mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mLOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhard_pixel_mining[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormerHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mPIXEL_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBasePixelDecoder[39m
[38;5;15m    [39m[38;5;204mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m    [39m[38;5;204mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_ENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSWIN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mAPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mATTN_DROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mDEPTHS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mDROP_PATH_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;204mDROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m96[39m
[38;5;15m    [39m[38;5;204mMLP_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4.0[39m
[38;5;15m    [39m[38;5;204mNUM_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m24[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mPATCH_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mPATCH_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRETRAIN_IMG_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m224[39m
[38;5;15m    [39m[38;5;204mQKV_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mQK_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mWINDOW_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/climatenet_v2[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfull_model[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupPolyLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mADAMW[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_CONSTANT_ENDING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30000[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[05/29 17:05:18] detectron2 INFO: Full config saved to ./output/climatenet_v2/config.yaml
[05/29 17:05:18] d2.utils.env INFO: Using a generated random seed 20574968
[05/29 17:05:19] d2.engine.defaults INFO: Model:
MaskFormer(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        4, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
  )
  (sem_seg_head): MaskFormerHead(
    (pixel_decoder): BasePixelDecoder(
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_2): Conv2d(
        512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_3): Conv2d(
        1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_4): Conv2d(
        2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (mask_features): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (predictor): TransformerPredictor(
      (pe_layer): PositionEmbeddingSine()
      (transformer): Transformer(
        (encoder): TransformerEncoder(
          (layers): ModuleList()
        )
        (decoder): TransformerDecoder(
          (layers): ModuleList(
            (0-5): 6 x TransformerDecoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (linear1): Linear(in_features=256, out_features=2048, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
              (linear2): Linear(in_features=2048, out_features=256, bias=True)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.1, inplace=False)
              (dropout2): Dropout(p=0.1, inplace=False)
              (dropout3): Dropout(p=0.1, inplace=False)
            )
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (query_embed): Embedding(100, 256)
      (input_proj): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
      (class_embed): Linear(in_features=256, out_features=3, bias=True)
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
    )
  )
  (criterion): SetCriterion(
    (matcher): Matcher HungarianMatcher
        cost_class: 1
        cost_mask: 20.0
        cost_dice: 1.0
  )
)
[05/29 17:05:41] d2.data.build INFO: Using training sampler TrainingSampler
[05/29 17:05:41] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/29 17:05:41] d2.data.common INFO: Serializing 398 elements to byte tensors and concatenating them all ...
[05/29 17:06:12] d2.data.common INFO: Serialized dataset takes 8039.39 MiB
[05/29 17:06:12] d2.data.build INFO: Making batched data loader with batch_size=8
[05/29 17:06:12] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[05/29 17:06:12] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/aix23606/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[05/29 17:06:12] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[05/29 17:06:12] d2.checkpoint.c2_model_loading WARNING: Shape of stem.conv1.weight in checkpoint is torch.Size([64, 3, 7, 7]), while shape of backbone.stem.conv1.weight in model is torch.Size([64, 4, 7, 7]).
[05/29 17:06:12] d2.checkpoint.c2_model_loading WARNING: stem.conv1.weight will not be loaded. Please double check and see if this is desired.
[05/29 17:06:12] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone - Total num: 53
[05/29 17:06:12] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.stem.conv1.weight[0m
[34mcriterion.empty_weight[0m
[34msem_seg_head.pixel_decoder.adapter_1.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_1.weight[0m
[34msem_seg_head.pixel_decoder.adapter_2.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_2.weight[0m
[34msem_seg_head.pixel_decoder.adapter_3.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_3.weight[0m
[34msem_seg_head.pixel_decoder.layer_1.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_1.weight[0m
[34msem_seg_head.pixel_decoder.layer_2.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_2.weight[0m
[34msem_seg_head.pixel_decoder.layer_3.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_3.weight[0m
[34msem_seg_head.pixel_decoder.layer_4.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_4.weight[0m
[34msem_seg_head.pixel_decoder.mask_features.{bias, weight}[0m
[34msem_seg_head.predictor.class_embed.{bias, weight}[0m
[34msem_seg_head.predictor.input_proj.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.0.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.1.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.2.{bias, weight}[0m
[34msem_seg_head.predictor.query_embed.weight[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.norm.{bias, weight}[0m
[05/29 17:06:12] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.{bias, weight}[0m
[05/29 17:06:12] d2.engine.train_loop INFO: Starting training from iteration 0
[05/29 17:06:29] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/engine/train_loop.py", line 155, in train
    self.run_step()
  File "/home/aix23606/soyeon/ar/MaskFormer/train_net.py", line 256, in run_step
    self._trainer.run_step()
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/engine/train_loop.py", line 297, in run_step
    data = next(self._data_loader_iter)
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/data/common.py", line 329, in __iter__
    for d in self.dataset:
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 630, in __next__
    data = self._next_data()
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 1325, in _next_data
    return self._process_data(data)
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 1371, in _process_data
    data.reraise()
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch/_utils.py", line 694, in reraise
    raise exception
TypeError: Caught TypeError in DataLoader worker process 2.
Original Traceback (most recent call last):
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch/utils/data/_utils/worker.py", line 308, in _worker_loop
    data = fetcher.fetch(index)
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 32, in fetch
    data.append(next(self.dataset_iter))
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/data/common.py", line 296, in __iter__
    yield self.dataset[idx]
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/data/common.py", line 125, in __getitem__
    data = self._map_func(self._dataset[cur_idx])
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/utils/serialize.py", line 26, in __call__
    return self._obj(*args, **kwargs)
  File "/home/aix23606/soyeon/ar/MaskFormer/mask_former/data/dataset_mappers/netcdf_semantic_mapper.py", line 18, in __call__
    image = dataset_dict["image"]  # (C, H, W)
TypeError: 'NoneType' object is not subscriptable

[05/29 17:06:29] d2.engine.hooks INFO: Overall training speed: 16 iterations in 0:00:13 (0.8670 s / it)
[05/29 17:06:29] d2.engine.hooks INFO: Total training time: 0:00:13 (0:00:00 on hooks)
[05/29 17:06:29] d2.utils.events INFO:  eta: 2:24:33  iter: 18  total_loss: 13.72  loss_ce: 0.9204  loss_mask: 0.7607  loss_dice: 0.5975  loss_ce_0: 0.69  loss_mask_0: 0.8573  loss_dice_0: 0.6154  loss_ce_1: 0.6828  loss_mask_1: 0.8199  loss_dice_1: 0.59  loss_ce_2: 0.7422  loss_mask_2: 0.8255  loss_dice_2: 0.6021  loss_ce_3: 0.654  loss_mask_3: 0.8897  loss_dice_3: 0.5871  loss_ce_4: 1.451  loss_mask_4: 0.8859  loss_dice_4: 0.5998    time: 0.8665  last_time: 0.8728  data_time: 0.0650  last_data_time: 0.0414   lr: 1.7057e-05  max_mem: 11483M
[05/29 17:09:19] detectron2 INFO: Rank of current process: 0. World size: 1
[05/29 17:09:21] detectron2 INFO: Environment info:
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.17 | packaged by conda-forge | (main, Apr 10 2025, 22:19:12) [GCC 13.3.0]
numpy                            1.26.4
detectron2                       0.6 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2
detectron2._C                    not built correctly: /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/_C.cpython-310-x86_64-linux-gnu.so: undefined symbol: _ZNK3c105Error4whatEv
Compiler ($CXX)                  c++ (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
CUDA compiler                    Build cuda_12.2.r12.2/compiler.32965470_0
detectron2 arch flags            8.6
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.1.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA RTX A6000 (arch=8.6)
Driver version                   535.183.01
CUDA_HOME                        /usr/local/cuda-12.2
Pillow                           11.1.0
torchvision                      0.16.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.11.0
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.9.2
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=8.9.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[05/29 17:09:21] detectron2 INFO: Command line arguments: Namespace(config_file='configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml', resume=False, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50158', opts=[])
[05/29 17:09:21] detectron2 INFO: Contents of args.config_file=configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml:
[38;5;245m# MaskFormer config for Climatenet-based AR semantic segmentation[39m

[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormer[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m1.5530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m0.2541[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m100814.0726[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m19.2185[39m[38;5;15m][39m[38;5;15m   [39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m8.2976[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m6.2316[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m1461.2256[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m15.8173[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_resnet_backbone[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;245m# âœ… ì¶”ê°€[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormerHead[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m[38;5;15m  [39m[38;5;245m# 0=background, 1=AR[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGN[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mnetcdf_semantic[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(768,)[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_train",)[39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_test",)[39m

[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m

[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mWarmupPolyLR[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mADAMW[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mfull_model[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m

[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/climatenet_v2[39m[38;5;186m"[39m

[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[05/29 17:09:21] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mREPEAT_SQRT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_test[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_train[39m
[38;5;204mFLOAT32_PRECISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCOLOR_AUG_SSD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSINGLE_CATEGORY_MAX_AREA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnetcdf_semantic[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRGB[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_resnet_backbone[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mENFORCE_INPUT_PROJ[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mOBJECT_MASK_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mPANOPTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m      [39m[38;5;204mSEM_SEG_POSTPROCESSING_BEFORE_INFERENCE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormer[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.553[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.2541[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100814.0726[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m19.2185[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m8.2976[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6.2316[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1461.2256[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.8173[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_MULTI_GRID[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdeeplab[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m18[39m
[38;5;15m    [39m[38;5;204mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mLOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhard_pixel_mining[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormerHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mPIXEL_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBasePixelDecoder[39m
[38;5;15m    [39m[38;5;204mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m    [39m[38;5;204mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_ENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSWIN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mAPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mATTN_DROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mDEPTHS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mDROP_PATH_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;204mDROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m96[39m
[38;5;15m    [39m[38;5;204mMLP_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4.0[39m
[38;5;15m    [39m[38;5;204mNUM_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m24[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mPATCH_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mPATCH_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRETRAIN_IMG_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m224[39m
[38;5;15m    [39m[38;5;204mQKV_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mQK_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mWINDOW_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/climatenet_v2[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfull_model[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupPolyLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mADAMW[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_CONSTANT_ENDING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30000[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[05/29 17:09:21] detectron2 INFO: Full config saved to ./output/climatenet_v2/config.yaml
[05/29 17:09:21] d2.utils.env INFO: Using a generated random seed 23688110
[05/29 17:09:22] d2.engine.defaults INFO: Model:
MaskFormer(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        4, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
  )
  (sem_seg_head): MaskFormerHead(
    (pixel_decoder): BasePixelDecoder(
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_2): Conv2d(
        512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_3): Conv2d(
        1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_4): Conv2d(
        2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (mask_features): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (predictor): TransformerPredictor(
      (pe_layer): PositionEmbeddingSine()
      (transformer): Transformer(
        (encoder): TransformerEncoder(
          (layers): ModuleList()
        )
        (decoder): TransformerDecoder(
          (layers): ModuleList(
            (0-5): 6 x TransformerDecoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (linear1): Linear(in_features=256, out_features=2048, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
              (linear2): Linear(in_features=2048, out_features=256, bias=True)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.1, inplace=False)
              (dropout2): Dropout(p=0.1, inplace=False)
              (dropout3): Dropout(p=0.1, inplace=False)
            )
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (query_embed): Embedding(100, 256)
      (input_proj): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
      (class_embed): Linear(in_features=256, out_features=3, bias=True)
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
    )
  )
  (criterion): SetCriterion(
    (matcher): Matcher HungarianMatcher
        cost_class: 1
        cost_mask: 20.0
        cost_dice: 1.0
  )
)
[05/29 17:09:45] d2.data.build INFO: Using training sampler TrainingSampler
[05/29 17:09:45] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/29 17:09:45] d2.data.common INFO: Serializing 398 elements to byte tensors and concatenating them all ...
[05/29 17:09:57] d2.data.common INFO: Serialized dataset takes 8039.39 MiB
[05/29 17:09:57] d2.data.build INFO: Making batched data loader with batch_size=8
[05/29 17:09:57] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[05/29 17:09:57] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/aix23606/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[05/29 17:09:57] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[05/29 17:09:57] d2.checkpoint.c2_model_loading WARNING: Shape of stem.conv1.weight in checkpoint is torch.Size([64, 3, 7, 7]), while shape of backbone.stem.conv1.weight in model is torch.Size([64, 4, 7, 7]).
[05/29 17:09:57] d2.checkpoint.c2_model_loading WARNING: stem.conv1.weight will not be loaded. Please double check and see if this is desired.
[05/29 17:09:57] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone - Total num: 53
[05/29 17:09:57] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.stem.conv1.weight[0m
[34mcriterion.empty_weight[0m
[34msem_seg_head.pixel_decoder.adapter_1.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_1.weight[0m
[34msem_seg_head.pixel_decoder.adapter_2.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_2.weight[0m
[34msem_seg_head.pixel_decoder.adapter_3.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_3.weight[0m
[34msem_seg_head.pixel_decoder.layer_1.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_1.weight[0m
[34msem_seg_head.pixel_decoder.layer_2.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_2.weight[0m
[34msem_seg_head.pixel_decoder.layer_3.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_3.weight[0m
[34msem_seg_head.pixel_decoder.layer_4.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_4.weight[0m
[34msem_seg_head.pixel_decoder.mask_features.{bias, weight}[0m
[34msem_seg_head.predictor.class_embed.{bias, weight}[0m
[34msem_seg_head.predictor.input_proj.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.0.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.1.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.2.{bias, weight}[0m
[34msem_seg_head.predictor.query_embed.weight[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.norm.{bias, weight}[0m
[05/29 17:09:57] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.{bias, weight}[0m
[05/29 17:09:57] d2.engine.train_loop INFO: Starting training from iteration 0
[05/29 17:10:16] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/engine/train_loop.py", line 155, in train
    self.run_step()
  File "/home/aix23606/soyeon/ar/MaskFormer/train_net.py", line 256, in run_step
    self._trainer.run_step()
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/engine/train_loop.py", line 297, in run_step
    data = next(self._data_loader_iter)
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/data/common.py", line 329, in __iter__
    for d in self.dataset:
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 630, in __next__
    data = self._next_data()
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 1325, in _next_data
    return self._process_data(data)
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 1371, in _process_data
    data.reraise()
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch/_utils.py", line 694, in reraise
    raise exception
TypeError: Caught TypeError in DataLoader worker process 2.
Original Traceback (most recent call last):
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch/utils/data/_utils/worker.py", line 308, in _worker_loop
    data = fetcher.fetch(index)
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 32, in fetch
    data.append(next(self.dataset_iter))
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/data/common.py", line 296, in __iter__
    yield self.dataset[idx]
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/data/common.py", line 125, in __getitem__
    data = self._map_func(self._dataset[cur_idx])
  File "/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/utils/serialize.py", line 26, in __call__
    return self._obj(*args, **kwargs)
  File "/home/aix23606/soyeon/ar/MaskFormer/mask_former/data/dataset_mappers/netcdf_semantic_mapper.py", line 18, in __call__
    image = dataset_dict["image"]  # (C, H, W)
TypeError: 'NoneType' object is not subscriptable

[05/29 17:10:16] d2.engine.hooks INFO: Overall training speed: 16 iterations in 0:00:14 (0.9198 s / it)
[05/29 17:10:16] d2.engine.hooks INFO: Total training time: 0:00:14 (0:00:00 on hooks)
[05/29 17:10:16] d2.utils.events INFO:  eta: 2:33:22  iter: 18  total_loss: 12.73  loss_ce: 0.8376  loss_mask: 0.6738  loss_dice: 0.6008  loss_ce_0: 1.03  loss_mask_0: 0.7384  loss_dice_0: 0.6094  loss_ce_1: 0.9805  loss_mask_1: 0.5963  loss_dice_1: 0.5708  loss_ce_2: 0.6974  loss_mask_2: 0.6044  loss_dice_2: 0.5689  loss_ce_3: 0.6119  loss_mask_3: 0.6731  loss_dice_3: 0.5908  loss_ce_4: 0.6952  loss_mask_4: 0.6318  loss_dice_4: 0.5731    time: 0.9179  last_time: 0.9253  data_time: 0.1050  last_data_time: 0.0810   lr: 1.7057e-05  max_mem: 11483M
[05/29 17:31:04] detectron2 INFO: Rank of current process: 0. World size: 1
[05/29 17:31:06] detectron2 INFO: Environment info:
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.17 | packaged by conda-forge | (main, Apr 10 2025, 22:19:12) [GCC 13.3.0]
numpy                            1.26.4
detectron2                       0.6 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2
detectron2._C                    not built correctly: /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/_C.cpython-310-x86_64-linux-gnu.so: undefined symbol: _ZNK3c105Error4whatEv
Compiler ($CXX)                  c++ (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
CUDA compiler                    Not found
detectron2 arch flags            /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/_C.cpython-310-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.1.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA RTX A6000 (arch=8.6)
Driver version                   535.183.01
CUDA_HOME                        /usr/local/cuda - invalid!
Pillow                           11.1.0
torchvision                      0.16.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torchvision
torchvision arch flags           /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.11.0
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.9.2
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=8.9.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[05/29 17:31:06] detectron2 INFO: Command line arguments: Namespace(config_file='configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml', resume=False, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50158', opts=[])
[05/29 17:31:06] detectron2 INFO: Contents of args.config_file=configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml:
[38;5;245m# MaskFormer config for Climatenet-based AR semantic segmentation[39m

[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormer[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m1.5530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m0.2541[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m100814.0726[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m19.2185[39m[38;5;15m][39m[38;5;15m   [39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m8.2976[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m6.2316[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m1461.2256[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m15.8173[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_resnet_backbone[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;245m# âœ… ì¶”ê°€[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormerHead[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m[38;5;15m  [39m[38;5;245m# 0=background, 1=AR[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGN[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mnetcdf_semantic[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(768,)[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_train",)[39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_test",)[39m

[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m

[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mWarmupPolyLR[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mADAMW[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mfull_model[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m

[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/climatenet_v2[39m[38;5;186m"[39m

[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[05/29 17:31:06] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mREPEAT_SQRT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_test[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_train[39m
[38;5;204mFLOAT32_PRECISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCOLOR_AUG_SSD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSINGLE_CATEGORY_MAX_AREA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnetcdf_semantic[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRGB[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_resnet_backbone[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mENFORCE_INPUT_PROJ[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mOBJECT_MASK_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mPANOPTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m      [39m[38;5;204mSEM_SEG_POSTPROCESSING_BEFORE_INFERENCE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormer[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.553[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.2541[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100814.0726[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m19.2185[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m8.2976[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6.2316[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1461.2256[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.8173[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_MULTI_GRID[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdeeplab[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m18[39m
[38;5;15m    [39m[38;5;204mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mLOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhard_pixel_mining[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormerHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mPIXEL_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBasePixelDecoder[39m
[38;5;15m    [39m[38;5;204mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m    [39m[38;5;204mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_ENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSWIN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mAPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mATTN_DROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mDEPTHS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mDROP_PATH_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;204mDROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m96[39m
[38;5;15m    [39m[38;5;204mMLP_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4.0[39m
[38;5;15m    [39m[38;5;204mNUM_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m24[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mPATCH_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mPATCH_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRETRAIN_IMG_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m224[39m
[38;5;15m    [39m[38;5;204mQKV_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mQK_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mWINDOW_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/climatenet_v2[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfull_model[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupPolyLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mADAMW[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_CONSTANT_ENDING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30000[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[05/29 17:31:06] detectron2 INFO: Full config saved to ./output/climatenet_v2/config.yaml
[05/29 17:31:06] d2.utils.env INFO: Using a generated random seed 8901818
[05/29 17:31:07] d2.engine.defaults INFO: Model:
MaskFormer(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        4, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
  )
  (sem_seg_head): MaskFormerHead(
    (pixel_decoder): BasePixelDecoder(
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_2): Conv2d(
        512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_3): Conv2d(
        1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_4): Conv2d(
        2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (mask_features): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (predictor): TransformerPredictor(
      (pe_layer): PositionEmbeddingSine()
      (transformer): Transformer(
        (encoder): TransformerEncoder(
          (layers): ModuleList()
        )
        (decoder): TransformerDecoder(
          (layers): ModuleList(
            (0-5): 6 x TransformerDecoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (linear1): Linear(in_features=256, out_features=2048, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
              (linear2): Linear(in_features=2048, out_features=256, bias=True)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.1, inplace=False)
              (dropout2): Dropout(p=0.1, inplace=False)
              (dropout3): Dropout(p=0.1, inplace=False)
            )
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (query_embed): Embedding(100, 256)
      (input_proj): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
      (class_embed): Linear(in_features=256, out_features=3, bias=True)
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
    )
  )
  (criterion): SetCriterion(
    (matcher): Matcher HungarianMatcher
        cost_class: 1
        cost_mask: 20.0
        cost_dice: 1.0
  )
)
[05/29 17:31:33] d2.data.build INFO: Using training sampler TrainingSampler
[05/29 17:31:33] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/29 17:31:33] d2.data.common INFO: Serializing 397 elements to byte tensors and concatenating them all ...
[05/29 17:31:59] d2.data.common INFO: Serialized dataset takes 8039.39 MiB
[05/29 17:31:59] d2.data.build INFO: Making batched data loader with batch_size=8
[05/29 17:31:59] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[05/29 17:31:59] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/aix23606/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[05/29 17:31:59] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[05/29 17:31:59] d2.checkpoint.c2_model_loading WARNING: Shape of stem.conv1.weight in checkpoint is torch.Size([64, 3, 7, 7]), while shape of backbone.stem.conv1.weight in model is torch.Size([64, 4, 7, 7]).
[05/29 17:31:59] d2.checkpoint.c2_model_loading WARNING: stem.conv1.weight will not be loaded. Please double check and see if this is desired.
[05/29 17:31:59] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone - Total num: 53
[05/29 17:31:59] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.stem.conv1.weight[0m
[34mcriterion.empty_weight[0m
[34msem_seg_head.pixel_decoder.adapter_1.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_1.weight[0m
[34msem_seg_head.pixel_decoder.adapter_2.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_2.weight[0m
[34msem_seg_head.pixel_decoder.adapter_3.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_3.weight[0m
[34msem_seg_head.pixel_decoder.layer_1.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_1.weight[0m
[34msem_seg_head.pixel_decoder.layer_2.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_2.weight[0m
[34msem_seg_head.pixel_decoder.layer_3.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_3.weight[0m
[34msem_seg_head.pixel_decoder.layer_4.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_4.weight[0m
[34msem_seg_head.pixel_decoder.mask_features.{bias, weight}[0m
[34msem_seg_head.predictor.class_embed.{bias, weight}[0m
[34msem_seg_head.predictor.input_proj.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.0.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.1.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.2.{bias, weight}[0m
[34msem_seg_head.predictor.query_embed.weight[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.norm.{bias, weight}[0m
[05/29 17:31:59] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.{bias, weight}[0m
[05/29 17:31:59] d2.engine.train_loop INFO: Starting training from iteration 0
[05/29 17:32:19] d2.utils.events INFO:  eta: 2:25:55  iter: 19  total_loss: 13.48  loss_ce: 0.6231  loss_mask: 0.7392  loss_dice: 0.5851  loss_ce_0: 0.677  loss_mask_0: 0.6707  loss_dice_0: 0.5694  loss_ce_1: 0.6525  loss_mask_1: 0.8086  loss_dice_1: 0.5711  loss_ce_2: 0.991  loss_mask_2: 0.7874  loss_dice_2: 0.5702  loss_ce_3: 0.9331  loss_mask_3: 0.7909  loss_dice_3: 0.5677  loss_ce_4: 0.6461  loss_mask_4: 0.7322  loss_dice_4: 0.5719    time: 0.8782  last_time: 0.8723  data_time: 0.0668  last_data_time: 0.0396   lr: 1.9048e-05  max_mem: 11483M
[05/29 17:32:39] d2.utils.events INFO:  eta: 2:25:25  iter: 39  total_loss: 9.958  loss_ce: 0.5402  loss_mask: 0.5931  loss_dice: 0.5635  loss_ce_0: 0.5399  loss_mask_0: 0.5718  loss_dice_0: 0.5604  loss_ce_1: 0.5546  loss_mask_1: 0.566  loss_dice_1: 0.5607  loss_ce_2: 0.5495  loss_mask_2: 0.5558  loss_dice_2: 0.5619  loss_ce_3: 0.5487  loss_mask_3: 0.5596  loss_dice_3: 0.5603  loss_ce_4: 0.5398  loss_mask_4: 0.5566  loss_dice_4: 0.5593    time: 0.8742  last_time: 0.8456  data_time: 0.0548  last_data_time: 0.0354   lr: 3.8924e-05  max_mem: 11483M
[05/29 17:32:56] d2.utils.events INFO:  eta: 2:25:21  iter: 59  total_loss: 9.513  loss_ce: 0.522  loss_mask: 0.5359  loss_dice: 0.5606  loss_ce_0: 0.4921  loss_mask_0: 0.5312  loss_dice_0: 0.5514  loss_ce_1: 0.4967  loss_mask_1: 0.5394  loss_dice_1: 0.5561  loss_ce_2: 0.515  loss_mask_2: 0.5196  loss_dice_2: 0.5519  loss_ce_3: 0.5069  loss_mask_3: 0.5327  loss_dice_3: 0.5532  loss_ce_4: 0.4837  loss_mask_4: 0.5252  loss_dice_4: 0.5539    time: 0.8779  last_time: 0.8912  data_time: 0.0536  last_data_time: 0.0486   lr: 5.8727e-05  max_mem: 11484M
[05/29 17:33:14] d2.utils.events INFO:  eta: 2:24:58  iter: 79  total_loss: 8.947  loss_ce: 0.4826  loss_mask: 0.5202  loss_dice: 0.5499  loss_ce_0: 0.4534  loss_mask_0: 0.5136  loss_dice_0: 0.5433  loss_ce_1: 0.432  loss_mask_1: 0.5271  loss_dice_1: 0.5495  loss_ce_2: 0.4612  loss_mask_2: 0.5054  loss_dice_2: 0.5415  loss_ce_3: 0.4614  loss_mask_3: 0.5237  loss_dice_3: 0.5455  loss_ce_4: 0.4417  loss_mask_4: 0.5201  loss_dice_4: 0.5492    time: 0.8774  last_time: 0.8739  data_time: 0.0512  last_data_time: 0.0419   lr: 7.8459e-05  max_mem: 11484M
[05/29 17:33:31] d2.utils.events INFO:  eta: 2:24:30  iter: 99  total_loss: 8.235  loss_ce: 0.402  loss_mask: 0.5089  loss_dice: 0.5373  loss_ce_0: 0.3268  loss_mask_0: 0.5049  loss_dice_0: 0.5327  loss_ce_1: 0.2424  loss_mask_1: 0.5185  loss_dice_1: 0.5388  loss_ce_2: 0.3779  loss_mask_2: 0.4977  loss_dice_2: 0.5323  loss_ce_3: 0.3593  loss_mask_3: 0.513  loss_dice_3: 0.5381  loss_ce_4: 0.3724  loss_mask_4: 0.5069  loss_dice_4: 0.5372    time: 0.8763  last_time: 0.8675  data_time: 0.0500  last_data_time: 0.0554   lr: 9.8118e-05  max_mem: 11484M
[05/29 17:33:49] d2.utils.events INFO:  eta: 2:24:11  iter: 119  total_loss: 7.116  loss_ce: 0.2349  loss_mask: 0.4978  loss_dice: 0.5316  loss_ce_0: 0.2094  loss_mask_0: 0.4902  loss_dice_0: 0.5266  loss_ce_1: 0.09332  loss_mask_1: 0.5055  loss_dice_1: 0.5315  loss_ce_2: 0.1967  loss_mask_2: 0.4901  loss_dice_2: 0.5264  loss_ce_3: 0.1404  loss_mask_3: 0.5016  loss_dice_3: 0.531  loss_ce_4: 0.2029  loss_mask_4: 0.4964  loss_dice_4: 0.529    time: 0.8763  last_time: 0.8749  data_time: 0.0492  last_data_time: 0.0406   lr: 9.8928e-05  max_mem: 11484M
[05/29 17:34:07] d2.utils.events INFO:  eta: 2:23:59  iter: 139  total_loss: 6.763  loss_ce: 0.117  loss_mask: 0.4884  loss_dice: 0.5218  loss_ce_0: 0.124  loss_mask_0: 0.4847  loss_dice_0: 0.5209  loss_ce_1: 0.04109  loss_mask_1: 0.4952  loss_dice_1: 0.5225  loss_ce_2: 0.1002  loss_mask_2: 0.482  loss_dice_2: 0.5224  loss_ce_3: 0.08428  loss_mask_3: 0.4922  loss_dice_3: 0.5254  loss_ce_4: 0.122  loss_mask_4: 0.4896  loss_dice_4: 0.5229    time: 0.8772  last_time: 0.8846  data_time: 0.0492  last_data_time: 0.0474   lr: 9.8748e-05  max_mem: 11485M
[05/29 17:34:24] d2.utils.events INFO:  eta: 2:23:42  iter: 159  total_loss: 6.449  loss_ce: 0.04592  loss_mask: 0.4771  loss_dice: 0.515  loss_ce_0: 0.0805  loss_mask_0: 0.4748  loss_dice_0: 0.5133  loss_ce_1: 0.02603  loss_mask_1: 0.4779  loss_dice_1: 0.5151  loss_ce_2: 0.06147  loss_mask_2: 0.4747  loss_dice_2: 0.5182  loss_ce_3: 0.05022  loss_mask_3: 0.4759  loss_dice_3: 0.515  loss_ce_4: 0.08844  loss_mask_4: 0.4752  loss_dice_4: 0.5151    time: 0.8772  last_time: 0.8775  data_time: 0.0486  last_data_time: 0.0450   lr: 9.8568e-05  max_mem: 11485M
[05/29 17:34:42] d2.utils.events INFO:  eta: 2:23:25  iter: 179  total_loss: 6.166  loss_ce: 0.02407  loss_mask: 0.4702  loss_dice: 0.5097  loss_ce_0: 0.0598  loss_mask_0: 0.4663  loss_dice_0: 0.5089  loss_ce_1: 0.01892  loss_mask_1: 0.47  loss_dice_1: 0.5086  loss_ce_2: 0.04748  loss_mask_2: 0.4656  loss_dice_2: 0.5084  loss_ce_3: 0.0369  loss_mask_3: 0.4722  loss_dice_3: 0.5092  loss_ce_4: 0.05003  loss_mask_4: 0.4699  loss_dice_4: 0.5103    time: 0.8772  last_time: 0.8783  data_time: 0.0482  last_data_time: 0.0472   lr: 9.8388e-05  max_mem: 11485M
[05/29 17:34:59] d2.utils.events INFO:  eta: 2:23:08  iter: 199  total_loss: 6.014  loss_ce: 0.01371  loss_mask: 0.4555  loss_dice: 0.5058  loss_ce_0: 0.04441  loss_mask_0: 0.4539  loss_dice_0: 0.5063  loss_ce_1: 0.01497  loss_mask_1: 0.4623  loss_dice_1: 0.5052  loss_ce_2: 0.02775  loss_mask_2: 0.4566  loss_dice_2: 0.5029  loss_ce_3: 0.02458  loss_mask_3: 0.4634  loss_dice_3: 0.5037  loss_ce_4: 0.02472  loss_mask_4: 0.4622  loss_dice_4: 0.5053    time: 0.8776  last_time: 0.9091  data_time: 0.0480  last_data_time: 0.0717   lr: 9.8207e-05  max_mem: 11485M
[05/29 17:35:18] d2.utils.events INFO:  eta: 2:23:03  iter: 219  total_loss: 5.914  loss_ce: 0.008602  loss_mask: 0.4447  loss_dice: 0.5013  loss_ce_0: 0.02384  loss_mask_0: 0.4463  loss_dice_0: 0.503  loss_ce_1: 0.01178  loss_mask_1: 0.4534  loss_dice_1: 0.5006  loss_ce_2: 0.02115  loss_mask_2: 0.451  loss_dice_2: 0.4995  loss_ce_3: 0.01585  loss_mask_3: 0.4493  loss_dice_3: 0.4997  loss_ce_4: 0.0205  loss_mask_4: 0.4505  loss_dice_4: 0.4995    time: 0.8804  last_time: 0.8832  data_time: 0.0494  last_data_time: 0.0405   lr: 9.8027e-05  max_mem: 11485M
[05/29 17:35:36] d2.utils.events INFO:  eta: 2:22:56  iter: 239  total_loss: 5.773  loss_ce: 0.005785  loss_mask: 0.4381  loss_dice: 0.4967  loss_ce_0: 0.01377  loss_mask_0: 0.438  loss_dice_0: 0.4977  loss_ce_1: 0.008007  loss_mask_1: 0.4418  loss_dice_1: 0.4964  loss_ce_2: 0.01792  loss_mask_2: 0.446  loss_dice_2: 0.496  loss_ce_3: 0.01296  loss_mask_3: 0.4444  loss_dice_3: 0.4964  loss_ce_4: 0.01404  loss_mask_4: 0.4432  loss_dice_4: 0.4957    time: 0.8832  last_time: 0.9329  data_time: 0.0516  last_data_time: 0.0583   lr: 9.7846e-05  max_mem: 11485M
[05/29 17:35:54] d2.utils.events INFO:  eta: 2:22:47  iter: 259  total_loss: 5.641  loss_ce: 0.004888  loss_mask: 0.429  loss_dice: 0.4943  loss_ce_0: 0.008314  loss_mask_0: 0.4325  loss_dice_0: 0.4956  loss_ce_1: 0.006185  loss_mask_1: 0.436  loss_dice_1: 0.4938  loss_ce_2: 0.01239  loss_mask_2: 0.437  loss_dice_2: 0.4939  loss_ce_3: 0.01021  loss_mask_3: 0.4351  loss_dice_3: 0.4914  loss_ce_4: 0.01151  loss_mask_4: 0.4335  loss_dice_4: 0.4927    time: 0.8865  last_time: 0.9304  data_time: 0.0535  last_data_time: 0.0735   lr: 9.7666e-05  max_mem: 11485M
[05/29 17:36:13] d2.utils.events INFO:  eta: 2:22:48  iter: 279  total_loss: 5.527  loss_ce: 0.003384  loss_mask: 0.4241  loss_dice: 0.4909  loss_ce_0: 0.004762  loss_mask_0: 0.4281  loss_dice_0: 0.4897  loss_ce_1: 0.005259  loss_mask_1: 0.4291  loss_dice_1: 0.4901  loss_ce_2: 0.006659  loss_mask_2: 0.4298  loss_dice_2: 0.4911  loss_ce_3: 0.00812  loss_mask_3: 0.4285  loss_dice_3: 0.4879  loss_ce_4: 0.008469  loss_mask_4: 0.4303  loss_dice_4: 0.4905    time: 0.8891  last_time: 0.9061  data_time: 0.0552  last_data_time: 0.0507   lr: 9.7485e-05  max_mem: 11485M
[05/29 17:36:31] d2.utils.events INFO:  eta: 2:22:29  iter: 299  total_loss: 5.481  loss_ce: 0.002974  loss_mask: 0.4211  loss_dice: 0.4878  loss_ce_0: 0.00389  loss_mask_0: 0.4243  loss_dice_0: 0.4864  loss_ce_1: 0.004867  loss_mask_1: 0.4246  loss_dice_1: 0.4874  loss_ce_2: 0.006062  loss_mask_2: 0.4236  loss_dice_2: 0.4878  loss_ce_3: 0.006079  loss_mask_3: 0.424  loss_dice_3: 0.4846  loss_ce_4: 0.00609  loss_mask_4: 0.4259  loss_dice_4: 0.4886    time: 0.8889  last_time: 0.8677  data_time: 0.0553  last_data_time: 0.0406   lr: 9.7305e-05  max_mem: 11485M
[05/29 17:36:48] d2.utils.events INFO:  eta: 2:21:56  iter: 319  total_loss: 5.424  loss_ce: 0.002811  loss_mask: 0.4154  loss_dice: 0.4832  loss_ce_0: 0.003574  loss_mask_0: 0.4206  loss_dice_0: 0.4827  loss_ce_1: 0.003968  loss_mask_1: 0.4187  loss_dice_1: 0.4831  loss_ce_2: 0.005203  loss_mask_2: 0.4187  loss_dice_2: 0.4839  loss_ce_3: 0.005395  loss_mask_3: 0.4212  loss_dice_3: 0.4816  loss_ce_4: 0.005432  loss_mask_4: 0.4231  loss_dice_4: 0.4844    time: 0.8879  last_time: 0.8929  data_time: 0.0546  last_data_time: 0.0543   lr: 9.7124e-05  max_mem: 11485M
[05/29 17:37:06] d2.utils.events INFO:  eta: 2:21:31  iter: 339  total_loss: 5.395  loss_ce: 0.002617  loss_mask: 0.4122  loss_dice: 0.4798  loss_ce_0: 0.003228  loss_mask_0: 0.415  loss_dice_0: 0.4777  loss_ce_1: 0.003573  loss_mask_1: 0.4139  loss_dice_1: 0.4785  loss_ce_2: 0.004442  loss_mask_2: 0.4153  loss_dice_2: 0.4779  loss_ce_3: 0.004831  loss_mask_3: 0.4184  loss_dice_3: 0.4766  loss_ce_4: 0.004662  loss_mask_4: 0.4194  loss_dice_4: 0.4798    time: 0.8869  last_time: 0.8637  data_time: 0.0538  last_data_time: 0.0394   lr: 9.6944e-05  max_mem: 11485M
[05/29 17:37:23] d2.utils.events INFO:  eta: 2:21:13  iter: 359  total_loss: 5.342  loss_ce: 0.002108  loss_mask: 0.4088  loss_dice: 0.4754  loss_ce_0: 0.002994  loss_mask_0: 0.4104  loss_dice_0: 0.4734  loss_ce_1: 0.003087  loss_mask_1: 0.4105  loss_dice_1: 0.4742  loss_ce_2: 0.00416  loss_mask_2: 0.4108  loss_dice_2: 0.4734  loss_ce_3: 0.004524  loss_mask_3: 0.4144  loss_dice_3: 0.4734  loss_ce_4: 0.004215  loss_mask_4: 0.412  loss_dice_4: 0.4754    time: 0.8865  last_time: 0.9019  data_time: 0.0537  last_data_time: 0.0584   lr: 9.6763e-05  max_mem: 11485M
[05/29 17:37:41] d2.utils.events INFO:  eta: 2:20:55  iter: 379  total_loss: 5.295  loss_ce: 0.001983  loss_mask: 0.4059  loss_dice: 0.4721  loss_ce_0: 0.002717  loss_mask_0: 0.4072  loss_dice_0: 0.4712  loss_ce_1: 0.002813  loss_mask_1: 0.4088  loss_dice_1: 0.4715  loss_ce_2: 0.003875  loss_mask_2: 0.4056  loss_dice_2: 0.4711  loss_ce_3: 0.004063  loss_mask_3: 0.4091  loss_dice_3: 0.4695  loss_ce_4: 0.004004  loss_mask_4: 0.4085  loss_dice_4: 0.4723    time: 0.8868  last_time: 0.8547  data_time: 0.0538  last_data_time: 0.0396   lr: 9.6582e-05  max_mem: 11485M
[05/29 17:37:58] d2.utils.events INFO:  eta: 2:20:32  iter: 399  total_loss: 5.27  loss_ce: 0.001819  loss_mask: 0.402  loss_dice: 0.4695  loss_ce_0: 0.002543  loss_mask_0: 0.4031  loss_dice_0: 0.469  loss_ce_1: 0.002421  loss_mask_1: 0.4034  loss_dice_1: 0.4689  loss_ce_2: 0.003758  loss_mask_2: 0.4013  loss_dice_2: 0.4698  loss_ce_3: 0.003929  loss_mask_3: 0.4028  loss_dice_3: 0.4679  loss_ce_4: 0.003828  loss_mask_4: 0.4037  loss_dice_4: 0.47    time: 0.8856  last_time: 0.8718  data_time: 0.0531  last_data_time: 0.0408   lr: 9.6402e-05  max_mem: 11485M
[05/29 17:38:16] d2.utils.events INFO:  eta: 2:20:08  iter: 419  total_loss: 5.214  loss_ce: 0.001686  loss_mask: 0.4003  loss_dice: 0.4668  loss_ce_0: 0.002404  loss_mask_0: 0.4006  loss_dice_0: 0.4656  loss_ce_1: 0.002294  loss_mask_1: 0.4002  loss_dice_1: 0.4659  loss_ce_2: 0.003494  loss_mask_2: 0.3981  loss_dice_2: 0.4674  loss_ce_3: 0.003786  loss_mask_3: 0.4017  loss_dice_3: 0.466  loss_ce_4: 0.003677  loss_mask_4: 0.4025  loss_dice_4: 0.4676    time: 0.8849  last_time: 0.8806  data_time: 0.0526  last_data_time: 0.0407   lr: 9.6221e-05  max_mem: 11485M
[05/29 17:38:33] d2.utils.events INFO:  eta: 2:19:52  iter: 439  total_loss: 5.174  loss_ce: 0.001555  loss_mask: 0.394  loss_dice: 0.464  loss_ce_0: 0.002215  loss_mask_0: 0.3949  loss_dice_0: 0.4619  loss_ce_1: 0.002125  loss_mask_1: 0.393  loss_dice_1: 0.4633  loss_ce_2: 0.003287  loss_mask_2: 0.3929  loss_dice_2: 0.4654  loss_ce_3: 0.003499  loss_mask_3: 0.3973  loss_dice_3: 0.4642  loss_ce_4: 0.003195  loss_mask_4: 0.3983  loss_dice_4: 0.4661    time: 0.8846  last_time: 0.8822  data_time: 0.0523  last_data_time: 0.0427   lr: 9.604e-05  max_mem: 11485M
[05/29 17:38:51] d2.utils.events INFO:  eta: 2:19:33  iter: 459  total_loss: 5.128  loss_ce: 0.001484  loss_mask: 0.3897  loss_dice: 0.46  loss_ce_0: 0.002109  loss_mask_0: 0.3907  loss_dice_0: 0.4602  loss_ce_1: 0.00201  loss_mask_1: 0.3888  loss_dice_1: 0.4611  loss_ce_2: 0.003149  loss_mask_2: 0.3907  loss_dice_2: 0.4623  loss_ce_3: 0.003333  loss_mask_3: 0.3916  loss_dice_3: 0.4604  loss_ce_4: 0.00285  loss_mask_4: 0.3915  loss_dice_4: 0.4625    time: 0.8841  last_time: 0.8686  data_time: 0.0519  last_data_time: 0.0461   lr: 9.5859e-05  max_mem: 11485M
[05/29 17:39:09] d2.utils.events INFO:  eta: 2:19:18  iter: 479  total_loss: 5.104  loss_ce: 0.001391  loss_mask: 0.387  loss_dice: 0.4582  loss_ce_0: 0.001957  loss_mask_0: 0.3888  loss_dice_0: 0.4588  loss_ce_1: 0.001827  loss_mask_1: 0.3874  loss_dice_1: 0.4592  loss_ce_2: 0.002908  loss_mask_2: 0.3873  loss_dice_2: 0.4595  loss_ce_3: 0.002963  loss_mask_3: 0.3896  loss_dice_3: 0.458  loss_ce_4: 0.002695  loss_mask_4: 0.3876  loss_dice_4: 0.4596    time: 0.8850  last_time: 0.8802  data_time: 0.0521  last_data_time: 0.0411   lr: 9.5678e-05  max_mem: 11485M
[05/29 17:39:26] d2.utils.events INFO:  eta: 2:18:58  iter: 499  total_loss: 5.073  loss_ce: 0.001329  loss_mask: 0.3855  loss_dice: 0.4565  loss_ce_0: 0.001863  loss_mask_0: 0.3854  loss_dice_0: 0.4562  loss_ce_1: 0.001782  loss_mask_1: 0.3856  loss_dice_1: 0.4572  loss_ce_2: 0.002743  loss_mask_2: 0.385  loss_dice_2: 0.4575  loss_ce_3: 0.002707  loss_mask_3: 0.3867  loss_dice_3: 0.4562  loss_ce_4: 0.002616  loss_mask_4: 0.3852  loss_dice_4: 0.4579    time: 0.8844  last_time: 0.8676  data_time: 0.0518  last_data_time: 0.0416   lr: 9.5498e-05  max_mem: 11485M
[05/29 17:39:44] d2.utils.events INFO:  eta: 2:18:40  iter: 519  total_loss: 5.04  loss_ce: 0.001245  loss_mask: 0.3833  loss_dice: 0.4544  loss_ce_0: 0.001763  loss_mask_0: 0.3841  loss_dice_0: 0.4552  loss_ce_1: 0.001699  loss_mask_1: 0.3842  loss_dice_1: 0.4549  loss_ce_2: 0.002655  loss_mask_2: 0.3834  loss_dice_2: 0.4547  loss_ce_3: 0.002527  loss_mask_3: 0.3848  loss_dice_3: 0.4543  loss_ce_4: 0.002525  loss_mask_4: 0.3825  loss_dice_4: 0.4562    time: 0.8842  last_time: 0.8751  data_time: 0.0515  last_data_time: 0.0423   lr: 9.5317e-05  max_mem: 11485M
[05/29 17:40:02] d2.utils.events INFO:  eta: 2:18:25  iter: 539  total_loss: 4.983  loss_ce: 0.001178  loss_mask: 0.3811  loss_dice: 0.4532  loss_ce_0: 0.001704  loss_mask_0: 0.382  loss_dice_0: 0.4529  loss_ce_1: 0.001632  loss_mask_1: 0.3824  loss_dice_1: 0.4524  loss_ce_2: 0.00252  loss_mask_2: 0.3807  loss_dice_2: 0.4529  loss_ce_3: 0.002329  loss_mask_3: 0.3825  loss_dice_3: 0.4514  loss_ce_4: 0.002287  loss_mask_4: 0.3807  loss_dice_4: 0.4532    time: 0.8843  last_time: 0.9178  data_time: 0.0516  last_data_time: 0.0790   lr: 9.5136e-05  max_mem: 11485M
[05/29 17:40:19] d2.utils.events INFO:  eta: 2:18:06  iter: 559  total_loss: 4.945  loss_ce: 0.001131  loss_mask: 0.3766  loss_dice: 0.4514  loss_ce_0: 0.001641  loss_mask_0: 0.3785  loss_dice_0: 0.4505  loss_ce_1: 0.001596  loss_mask_1: 0.3793  loss_dice_1: 0.4498  loss_ce_2: 0.002393  loss_mask_2: 0.3786  loss_dice_2: 0.4509  loss_ce_3: 0.002219  loss_mask_3: 0.38  loss_dice_3: 0.4502  loss_ce_4: 0.002102  loss_mask_4: 0.3767  loss_dice_4: 0.4507    time: 0.8842  last_time: 0.8786  data_time: 0.0515  last_data_time: 0.0404   lr: 9.4955e-05  max_mem: 11485M
[05/29 17:40:37] d2.utils.events INFO:  eta: 2:17:48  iter: 579  total_loss: 4.93  loss_ce: 0.001103  loss_mask: 0.3753  loss_dice: 0.4499  loss_ce_0: 0.001599  loss_mask_0: 0.3747  loss_dice_0: 0.4488  loss_ce_1: 0.001577  loss_mask_1: 0.3759  loss_dice_1: 0.4471  loss_ce_2: 0.002299  loss_mask_2: 0.3769  loss_dice_2: 0.4483  loss_ce_3: 0.002147  loss_mask_3: 0.3791  loss_dice_3: 0.4488  loss_ce_4: 0.001978  loss_mask_4: 0.3755  loss_dice_4: 0.4484    time: 0.8837  last_time: 0.8711  data_time: 0.0512  last_data_time: 0.0397   lr: 9.4774e-05  max_mem: 11485M
[05/29 17:40:54] d2.utils.events INFO:  eta: 2:17:32  iter: 599  total_loss: 4.905  loss_ce: 0.001034  loss_mask: 0.3737  loss_dice: 0.4473  loss_ce_0: 0.001556  loss_mask_0: 0.3722  loss_dice_0: 0.447  loss_ce_1: 0.001564  loss_mask_1: 0.3741  loss_dice_1: 0.4454  loss_ce_2: 0.002115  loss_mask_2: 0.3741  loss_dice_2: 0.4464  loss_ce_3: 0.002065  loss_mask_3: 0.3748  loss_dice_3: 0.4465  loss_ce_4: 0.001889  loss_mask_4: 0.373  loss_dice_4: 0.4464    time: 0.8835  last_time: 0.8735  data_time: 0.0510  last_data_time: 0.0475   lr: 9.4592e-05  max_mem: 11485M
[05/29 17:41:13] d2.utils.events INFO:  eta: 2:17:17  iter: 619  total_loss: 4.898  loss_ce: 0.00109  loss_mask: 0.3741  loss_dice: 0.4456  loss_ce_0: 0.001556  loss_mask_0: 0.373  loss_dice_0: 0.4456  loss_ce_1: 0.001567  loss_mask_1: 0.3749  loss_dice_1: 0.4447  loss_ce_2: 0.002021  loss_mask_2: 0.3759  loss_dice_2: 0.4459  loss_ce_3: 0.002027  loss_mask_3: 0.3773  loss_dice_3: 0.4448  loss_ce_4: 0.001868  loss_mask_4: 0.3738  loss_dice_4: 0.4454    time: 0.8844  last_time: 0.9170  data_time: 0.0514  last_data_time: 0.0764   lr: 9.4411e-05  max_mem: 11485M
[05/29 17:41:30] d2.utils.events INFO:  eta: 2:16:59  iter: 639  total_loss: 4.885  loss_ce: 0.00108  loss_mask: 0.3718  loss_dice: 0.4449  loss_ce_0: 0.001543  loss_mask_0: 0.3706  loss_dice_0: 0.4435  loss_ce_1: 0.001541  loss_mask_1: 0.3733  loss_dice_1: 0.4433  loss_ce_2: 0.001953  loss_mask_2: 0.3717  loss_dice_2: 0.4437  loss_ce_3: 0.001946  loss_mask_3: 0.3721  loss_dice_3: 0.4432  loss_ce_4: 0.001803  loss_mask_4: 0.3716  loss_dice_4: 0.4445    time: 0.8842  last_time: 0.8711  data_time: 0.0512  last_data_time: 0.0394   lr: 9.423e-05  max_mem: 11485M
[05/29 17:41:48] d2.utils.events INFO:  eta: 2:16:43  iter: 659  total_loss: 4.87  loss_ce: 0.001014  loss_mask: 0.3692  loss_dice: 0.4422  loss_ce_0: 0.0015  loss_mask_0: 0.3688  loss_dice_0: 0.4418  loss_ce_1: 0.001486  loss_mask_1: 0.3711  loss_dice_1: 0.4426  loss_ce_2: 0.001854  loss_mask_2: 0.3684  loss_dice_2: 0.4422  loss_ce_3: 0.001851  loss_mask_3: 0.3697  loss_dice_3: 0.4423  loss_ce_4: 0.00174  loss_mask_4: 0.3692  loss_dice_4: 0.4417    time: 0.8842  last_time: 0.8906  data_time: 0.0512  last_data_time: 0.0562   lr: 9.4049e-05  max_mem: 11485M
[05/29 17:42:06] d2.utils.events INFO:  eta: 2:16:26  iter: 679  total_loss: 4.856  loss_ce: 0.0009913  loss_mask: 0.3679  loss_dice: 0.4401  loss_ce_0: 0.001466  loss_mask_0: 0.368  loss_dice_0: 0.4408  loss_ce_1: 0.001475  loss_mask_1: 0.3701  loss_dice_1: 0.4407  loss_ce_2: 0.00181  loss_mask_2: 0.3674  loss_dice_2: 0.4409  loss_ce_3: 0.001815  loss_mask_3: 0.3683  loss_dice_3: 0.4401  loss_ce_4: 0.00171  loss_mask_4: 0.3681  loss_dice_4: 0.4408    time: 0.8842  last_time: 0.8971  data_time: 0.0511  last_data_time: 0.0606   lr: 9.3868e-05  max_mem: 11485M
[05/29 17:42:23] d2.utils.events INFO:  eta: 2:16:09  iter: 699  total_loss: 4.844  loss_ce: 0.0009846  loss_mask: 0.365  loss_dice: 0.4392  loss_ce_0: 0.001461  loss_mask_0: 0.3655  loss_dice_0: 0.4395  loss_ce_1: 0.001505  loss_mask_1: 0.3665  loss_dice_1: 0.4393  loss_ce_2: 0.001706  loss_mask_2: 0.3654  loss_dice_2: 0.4399  loss_ce_3: 0.001753  loss_mask_3: 0.3665  loss_dice_3: 0.4395  loss_ce_4: 0.001672  loss_mask_4: 0.3657  loss_dice_4: 0.44    time: 0.8842  last_time: 0.8794  data_time: 0.0510  last_data_time: 0.0556   lr: 9.3686e-05  max_mem: 11485M
[05/29 17:42:41] d2.utils.events INFO:  eta: 2:15:53  iter: 719  total_loss: 4.82  loss_ce: 0.0009653  loss_mask: 0.3635  loss_dice: 0.4387  loss_ce_0: 0.001432  loss_mask_0: 0.3638  loss_dice_0: 0.4377  loss_ce_1: 0.001477  loss_mask_1: 0.3655  loss_dice_1: 0.4385  loss_ce_2: 0.001617  loss_mask_2: 0.3639  loss_dice_2: 0.4389  loss_ce_3: 0.001698  loss_mask_3: 0.3645  loss_dice_3: 0.4385  loss_ce_4: 0.001643  loss_mask_4: 0.3639  loss_dice_4: 0.4384    time: 0.8842  last_time: 0.9096  data_time: 0.0509  last_data_time: 0.0711   lr: 9.3505e-05  max_mem: 11485M
[05/29 17:42:59] d2.utils.events INFO:  eta: 2:15:34  iter: 739  total_loss: 4.81  loss_ce: 0.0009414  loss_mask: 0.3615  loss_dice: 0.4377  loss_ce_0: 0.001416  loss_mask_0: 0.3615  loss_dice_0: 0.4367  loss_ce_1: 0.001448  loss_mask_1: 0.3636  loss_dice_1: 0.437  loss_ce_2: 0.001584  loss_mask_2: 0.3619  loss_dice_2: 0.4379  loss_ce_3: 0.001669  loss_mask_3: 0.363  loss_dice_3: 0.4376  loss_ce_4: 0.001624  loss_mask_4: 0.3621  loss_dice_4: 0.437    time: 0.8840  last_time: 0.8827  data_time: 0.0508  last_data_time: 0.0525   lr: 9.3324e-05  max_mem: 11485M
[05/29 17:43:17] d2.utils.events INFO:  eta: 2:15:21  iter: 759  total_loss: 4.803  loss_ce: 0.0009394  loss_mask: 0.3605  loss_dice: 0.4358  loss_ce_0: 0.00141  loss_mask_0: 0.3609  loss_dice_0: 0.4354  loss_ce_1: 0.001459  loss_mask_1: 0.3618  loss_dice_1: 0.4355  loss_ce_2: 0.001584  loss_mask_2: 0.3611  loss_dice_2: 0.4367  loss_ce_3: 0.001635  loss_mask_3: 0.362  loss_dice_3: 0.4362  loss_ce_4: 0.001586  loss_mask_4: 0.3612  loss_dice_4: 0.4355    time: 0.8847  last_time: 0.8950  data_time: 0.0512  last_data_time: 0.0558   lr: 9.3142e-05  max_mem: 11485M
[05/29 17:43:36] d2.utils.events INFO:  eta: 2:15:07  iter: 779  total_loss: 4.786  loss_ce: 0.0009278  loss_mask: 0.36  loss_dice: 0.4352  loss_ce_0: 0.001371  loss_mask_0: 0.3603  loss_dice_0: 0.4341  loss_ce_1: 0.001472  loss_mask_1: 0.3603  loss_dice_1: 0.4338  loss_ce_2: 0.001544  loss_mask_2: 0.3609  loss_dice_2: 0.435  loss_ce_3: 0.001597  loss_mask_3: 0.3614  loss_dice_3: 0.4352  loss_ce_4: 0.001526  loss_mask_4: 0.3603  loss_dice_4: 0.4344    time: 0.8861  last_time: 0.9181  data_time: 0.0521  last_data_time: 0.0804   lr: 9.2961e-05  max_mem: 11485M
[05/29 17:43:54] d2.utils.events INFO:  eta: 2:14:54  iter: 799  total_loss: 4.778  loss_ce: 0.0008976  loss_mask: 0.3589  loss_dice: 0.4341  loss_ce_0: 0.001325  loss_mask_0: 0.3582  loss_dice_0: 0.4336  loss_ce_1: 0.001441  loss_mask_1: 0.3584  loss_dice_1: 0.4326  loss_ce_2: 0.001512  loss_mask_2: 0.3602  loss_dice_2: 0.4338  loss_ce_3: 0.001507  loss_mask_3: 0.3606  loss_dice_3: 0.4341  loss_ce_4: 0.001469  loss_mask_4: 0.3587  loss_dice_4: 0.4333    time: 0.8872  last_time: 0.9182  data_time: 0.0528  last_data_time: 0.0541   lr: 9.2779e-05  max_mem: 11485M
[05/29 17:44:13] d2.utils.events INFO:  eta: 2:14:42  iter: 819  total_loss: 4.755  loss_ce: 0.0008697  loss_mask: 0.3579  loss_dice: 0.4331  loss_ce_0: 0.001284  loss_mask_0: 0.3573  loss_dice_0: 0.4326  loss_ce_1: 0.001403  loss_mask_1: 0.3573  loss_dice_1: 0.4314  loss_ce_2: 0.001483  loss_mask_2: 0.3592  loss_dice_2: 0.4326  loss_ce_3: 0.001465  loss_mask_3: 0.3595  loss_dice_3: 0.4333  loss_ce_4: 0.001416  loss_mask_4: 0.3569  loss_dice_4: 0.4317    time: 0.8883  last_time: 0.9279  data_time: 0.0534  last_data_time: 0.0785   lr: 9.2598e-05  max_mem: 11485M
[05/29 17:44:32] d2.utils.events INFO:  eta: 2:14:27  iter: 839  total_loss: 4.736  loss_ce: 0.0008522  loss_mask: 0.3558  loss_dice: 0.4315  loss_ce_0: 0.001251  loss_mask_0: 0.356  loss_dice_0: 0.4313  loss_ce_1: 0.00134  loss_mask_1: 0.3551  loss_dice_1: 0.4309  loss_ce_2: 0.001456  loss_mask_2: 0.3575  loss_dice_2: 0.4311  loss_ce_3: 0.001414  loss_mask_3: 0.3571  loss_dice_3: 0.4319  loss_ce_4: 0.001387  loss_mask_4: 0.3549  loss_dice_4: 0.4309    time: 0.8896  last_time: 0.9726  data_time: 0.0543  last_data_time: 0.1094   lr: 9.2416e-05  max_mem: 11485M
[05/29 17:44:50] d2.utils.events INFO:  eta: 2:14:16  iter: 859  total_loss: 4.721  loss_ce: 0.0008482  loss_mask: 0.3546  loss_dice: 0.4302  loss_ce_0: 0.001208  loss_mask_0: 0.3554  loss_dice_0: 0.43  loss_ce_1: 0.00131  loss_mask_1: 0.3547  loss_dice_1: 0.4298  loss_ce_2: 0.001435  loss_mask_2: 0.3562  loss_dice_2: 0.4295  loss_ce_3: 0.001404  loss_mask_3: 0.3558  loss_dice_3: 0.4311  loss_ce_4: 0.00137  loss_mask_4: 0.3526  loss_dice_4: 0.4301    time: 0.8905  last_time: 0.9201  data_time: 0.0549  last_data_time: 0.0789   lr: 9.2235e-05  max_mem: 11485M
[05/29 17:45:09] d2.utils.events INFO:  eta: 2:14:03  iter: 879  total_loss: 4.703  loss_ce: 0.0008315  loss_mask: 0.3539  loss_dice: 0.4293  loss_ce_0: 0.00118  loss_mask_0: 0.354  loss_dice_0: 0.4293  loss_ce_1: 0.001283  loss_mask_1: 0.3542  loss_dice_1: 0.4282  loss_ce_2: 0.001411  loss_mask_2: 0.3559  loss_dice_2: 0.4287  loss_ce_3: 0.00138  loss_mask_3: 0.355  loss_dice_3: 0.4302  loss_ce_4: 0.001347  loss_mask_4: 0.3521  loss_dice_4: 0.4289    time: 0.8916  last_time: 0.9155  data_time: 0.0557  last_data_time: 0.0828   lr: 9.2053e-05  max_mem: 11485M
[05/29 17:45:28] d2.utils.events INFO:  eta: 2:13:48  iter: 899  total_loss: 4.684  loss_ce: 0.0008175  loss_mask: 0.3531  loss_dice: 0.4282  loss_ce_0: 0.001208  loss_mask_0: 0.3524  loss_dice_0: 0.4282  loss_ce_1: 0.00125  loss_mask_1: 0.3525  loss_dice_1: 0.4272  loss_ce_2: 0.001407  loss_mask_2: 0.355  loss_dice_2: 0.4276  loss_ce_3: 0.001328  loss_mask_3: 0.3534  loss_dice_3: 0.428  loss_ce_4: 0.001318  loss_mask_4: 0.3516  loss_dice_4: 0.4278    time: 0.8926  last_time: 0.9265  data_time: 0.0564  last_data_time: 0.0755   lr: 9.1871e-05  max_mem: 11485M
[05/29 17:45:47] d2.utils.events INFO:  eta: 2:13:36  iter: 919  total_loss: 4.658  loss_ce: 0.0008093  loss_mask: 0.3525  loss_dice: 0.4266  loss_ce_0: 0.001182  loss_mask_0: 0.3512  loss_dice_0: 0.4267  loss_ce_1: 0.001214  loss_mask_1: 0.3515  loss_dice_1: 0.4263  loss_ce_2: 0.001378  loss_mask_2: 0.3536  loss_dice_2: 0.4267  loss_ce_3: 0.001298  loss_mask_3: 0.3518  loss_dice_3: 0.4265  loss_ce_4: 0.001274  loss_mask_4: 0.3509  loss_dice_4: 0.427    time: 0.8936  last_time: 0.9487  data_time: 0.0571  last_data_time: 0.0865   lr: 9.169e-05  max_mem: 11485M
[05/29 17:46:06] d2.utils.events INFO:  eta: 2:13:24  iter: 939  total_loss: 4.642  loss_ce: 0.0008219  loss_mask: 0.3514  loss_dice: 0.4258  loss_ce_0: 0.001168  loss_mask_0: 0.3511  loss_dice_0: 0.426  loss_ce_1: 0.001192  loss_mask_1: 0.3511  loss_dice_1: 0.4259  loss_ce_2: 0.001358  loss_mask_2: 0.3528  loss_dice_2: 0.426  loss_ce_3: 0.001301  loss_mask_3: 0.3514  loss_dice_3: 0.4257  loss_ce_4: 0.001274  loss_mask_4: 0.3506  loss_dice_4: 0.4261    time: 0.8944  last_time: 0.9181  data_time: 0.0577  last_data_time: 0.0577   lr: 9.1508e-05  max_mem: 11485M
[05/29 17:46:24] d2.utils.events INFO:  eta: 2:13:12  iter: 959  total_loss: 4.633  loss_ce: 0.0008219  loss_mask: 0.3503  loss_dice: 0.4251  loss_ce_0: 0.001163  loss_mask_0: 0.3506  loss_dice_0: 0.4246  loss_ce_1: 0.001175  loss_mask_1: 0.3494  loss_dice_1: 0.4248  loss_ce_2: 0.001314  loss_mask_2: 0.3517  loss_dice_2: 0.4253  loss_ce_3: 0.001288  loss_mask_3: 0.3502  loss_dice_3: 0.4247  loss_ce_4: 0.00126  loss_mask_4: 0.3493  loss_dice_4: 0.4251    time: 0.8952  last_time: 0.9458  data_time: 0.0582  last_data_time: 0.1005   lr: 9.1326e-05  max_mem: 11485M
[05/29 17:46:43] d2.utils.events INFO:  eta: 2:13:01  iter: 979  total_loss: 4.626  loss_ce: 0.0008096  loss_mask: 0.3494  loss_dice: 0.4241  loss_ce_0: 0.001136  loss_mask_0: 0.3487  loss_dice_0: 0.4235  loss_ce_1: 0.001144  loss_mask_1: 0.3485  loss_dice_1: 0.4233  loss_ce_2: 0.001277  loss_mask_2: 0.3503  loss_dice_2: 0.424  loss_ce_3: 0.001268  loss_mask_3: 0.3484  loss_dice_3: 0.4238  loss_ce_4: 0.001236  loss_mask_4: 0.3481  loss_dice_4: 0.4243    time: 0.8960  last_time: 0.9434  data_time: 0.0588  last_data_time: 0.0931   lr: 9.1144e-05  max_mem: 11485M
[05/29 17:47:02] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/climatenet_v2/model_0000999.pth
[05/29 17:47:02] d2.utils.events INFO:  eta: 2:12:47  iter: 999  total_loss: 4.614  loss_ce: 0.0008029  loss_mask: 0.3485  loss_dice: 0.4232  loss_ce_0: 0.001121  loss_mask_0: 0.348  loss_dice_0: 0.4223  loss_ce_1: 0.001138  loss_mask_1: 0.3478  loss_dice_1: 0.4225  loss_ce_2: 0.001268  loss_mask_2: 0.3492  loss_dice_2: 0.4221  loss_ce_3: 0.001268  loss_mask_3: 0.3474  loss_dice_3: 0.4231  loss_ce_4: 0.00122  loss_mask_4: 0.3474  loss_dice_4: 0.4233    time: 0.8966  last_time: 0.9353  data_time: 0.0591  last_data_time: 0.0825   lr: 9.0962e-05  max_mem: 11485M
[05/29 17:47:21] d2.utils.events INFO:  eta: 2:12:35  iter: 1019  total_loss: 4.605  loss_ce: 0.0008093  loss_mask: 0.3476  loss_dice: 0.4217  loss_ce_0: 0.001121  loss_mask_0: 0.3473  loss_dice_0: 0.4213  loss_ce_1: 0.001137  loss_mask_1: 0.3472  loss_dice_1: 0.4217  loss_ce_2: 0.001291  loss_mask_2: 0.348  loss_dice_2: 0.4214  loss_ce_3: 0.001263  loss_mask_3: 0.3464  loss_dice_3: 0.4217  loss_ce_4: 0.001223  loss_mask_4: 0.3471  loss_dice_4: 0.4216    time: 0.8972  last_time: 0.9181  data_time: 0.0596  last_data_time: 0.0683   lr: 9.078e-05  max_mem: 11485M
[05/29 17:47:40] d2.utils.events INFO:  eta: 2:12:31  iter: 1039  total_loss: 4.598  loss_ce: 0.0008015  loss_mask: 0.3469  loss_dice: 0.421  loss_ce_0: 0.001126  loss_mask_0: 0.3466  loss_dice_0: 0.4205  loss_ce_1: 0.001137  loss_mask_1: 0.3466  loss_dice_1: 0.4209  loss_ce_2: 0.001271  loss_mask_2: 0.3473  loss_dice_2: 0.4203  loss_ce_3: 0.00125  loss_mask_3: 0.3459  loss_dice_3: 0.4207  loss_ce_4: 0.001226  loss_mask_4: 0.3461  loss_dice_4: 0.4205    time: 0.8978  last_time: 0.9378  data_time: 0.0599  last_data_time: 0.0920   lr: 9.0598e-05  max_mem: 11485M
[05/29 17:47:58] d2.utils.events INFO:  eta: 2:12:25  iter: 1059  total_loss: 4.584  loss_ce: 0.0008035  loss_mask: 0.3454  loss_dice: 0.4202  loss_ce_0: 0.001118  loss_mask_0: 0.3451  loss_dice_0: 0.4195  loss_ce_1: 0.001124  loss_mask_1: 0.3457  loss_dice_1: 0.4201  loss_ce_2: 0.001257  loss_mask_2: 0.3466  loss_dice_2: 0.4195  loss_ce_3: 0.001249  loss_mask_3: 0.3452  loss_dice_3: 0.4195  loss_ce_4: 0.001228  loss_mask_4: 0.3449  loss_dice_4: 0.4198    time: 0.8984  last_time: 0.9307  data_time: 0.0602  last_data_time: 0.0900   lr: 9.0416e-05  max_mem: 11485M
[05/29 17:48:17] d2.utils.events INFO:  eta: 2:12:26  iter: 1079  total_loss: 4.572  loss_ce: 0.0008051  loss_mask: 0.3449  loss_dice: 0.4192  loss_ce_0: 0.001108  loss_mask_0: 0.3447  loss_dice_0: 0.4189  loss_ce_1: 0.001116  loss_mask_1: 0.3444  loss_dice_1: 0.4193  loss_ce_2: 0.001241  loss_mask_2: 0.3445  loss_dice_2: 0.4188  loss_ce_3: 0.001238  loss_mask_3: 0.3444  loss_dice_3: 0.4184  loss_ce_4: 0.001218  loss_mask_4: 0.3444  loss_dice_4: 0.419    time: 0.8991  last_time: 0.9419  data_time: 0.0607  last_data_time: 0.0902   lr: 9.0234e-05  max_mem: 11485M
[05/29 17:48:36] d2.utils.events INFO:  eta: 2:12:36  iter: 1099  total_loss: 4.566  loss_ce: 0.0007923  loss_mask: 0.3447  loss_dice: 0.4184  loss_ce_0: 0.001094  loss_mask_0: 0.3445  loss_dice_0: 0.418  loss_ce_1: 0.001105  loss_mask_1: 0.3441  loss_dice_1: 0.4179  loss_ce_2: 0.001226  loss_mask_2: 0.3443  loss_dice_2: 0.4184  loss_ce_3: 0.001216  loss_mask_3: 0.3443  loss_dice_3: 0.418  loss_ce_4: 0.0012  loss_mask_4: 0.344  loss_dice_4: 0.418    time: 0.8998  last_time: 0.9319  data_time: 0.0612  last_data_time: 0.0797   lr: 9.0052e-05  max_mem: 11485M
[05/29 17:48:54] d2.utils.events INFO:  eta: 2:12:43  iter: 1119  total_loss: 4.562  loss_ce: 0.0007863  loss_mask: 0.3434  loss_dice: 0.4179  loss_ce_0: 0.001083  loss_mask_0: 0.3441  loss_dice_0: 0.4176  loss_ce_1: 0.001098  loss_mask_1: 0.3435  loss_dice_1: 0.4174  loss_ce_2: 0.001211  loss_mask_2: 0.3439  loss_dice_2: 0.4177  loss_ce_3: 0.001199  loss_mask_3: 0.344  loss_dice_3: 0.4177  loss_ce_4: 0.001186  loss_mask_4: 0.3438  loss_dice_4: 0.4175    time: 0.9003  last_time: 0.9446  data_time: 0.0615  last_data_time: 0.1024   lr: 8.987e-05  max_mem: 11485M
[05/29 17:49:13] d2.utils.events INFO:  eta: 2:13:09  iter: 1139  total_loss: 4.556  loss_ce: 0.0007761  loss_mask: 0.343  loss_dice: 0.4172  loss_ce_0: 0.001076  loss_mask_0: 0.3439  loss_dice_0: 0.4167  loss_ce_1: 0.001081  loss_mask_1: 0.3434  loss_dice_1: 0.4166  loss_ce_2: 0.001212  loss_mask_2: 0.3436  loss_dice_2: 0.4172  loss_ce_3: 0.001178  loss_mask_3: 0.3439  loss_dice_3: 0.417  loss_ce_4: 0.001171  loss_mask_4: 0.3435  loss_dice_4: 0.4168    time: 0.9009  last_time: 0.9467  data_time: 0.0620  last_data_time: 0.0987   lr: 8.9688e-05  max_mem: 11485M
[05/29 17:49:32] d2.utils.events INFO:  eta: 2:13:20  iter: 1159  total_loss: 4.549  loss_ce: 0.0007714  loss_mask: 0.3424  loss_dice: 0.4168  loss_ce_0: 0.001066  loss_mask_0: 0.3433  loss_dice_0: 0.4161  loss_ce_1: 0.001065  loss_mask_1: 0.3428  loss_dice_1: 0.4161  loss_ce_2: 0.00119  loss_mask_2: 0.3423  loss_dice_2: 0.4161  loss_ce_3: 0.001166  loss_mask_3: 0.3431  loss_dice_3: 0.4161  loss_ce_4: 0.001159  loss_mask_4: 0.3429  loss_dice_4: 0.4162    time: 0.9015  last_time: 0.9422  data_time: 0.0623  last_data_time: 0.0903   lr: 8.9506e-05  max_mem: 11485M
[05/29 17:49:50] d2.utils.events INFO:  eta: 2:13:22  iter: 1179  total_loss: 4.541  loss_ce: 0.0007824  loss_mask: 0.3418  loss_dice: 0.4164  loss_ce_0: 0.00107  loss_mask_0: 0.3426  loss_dice_0: 0.4152  loss_ce_1: 0.001065  loss_mask_1: 0.3421  loss_dice_1: 0.4152  loss_ce_2: 0.001165  loss_mask_2: 0.3414  loss_dice_2: 0.4152  loss_ce_3: 0.001164  loss_mask_3: 0.3427  loss_dice_3: 0.4154  loss_ce_4: 0.001157  loss_mask_4: 0.342  loss_dice_4: 0.4157    time: 0.9018  last_time: 0.9010  data_time: 0.0624  last_data_time: 0.0566   lr: 8.9324e-05  max_mem: 11485M
[05/29 17:50:09] d2.utils.events INFO:  eta: 2:13:23  iter: 1199  total_loss: 4.53  loss_ce: 0.0007781  loss_mask: 0.3416  loss_dice: 0.4155  loss_ce_0: 0.001058  loss_mask_0: 0.3419  loss_dice_0: 0.4144  loss_ce_1: 0.001056  loss_mask_1: 0.3416  loss_dice_1: 0.4145  loss_ce_2: 0.001133  loss_mask_2: 0.3412  loss_dice_2: 0.4147  loss_ce_3: 0.001154  loss_mask_3: 0.3423  loss_dice_3: 0.4144  loss_ce_4: 0.001141  loss_mask_4: 0.3417  loss_dice_4: 0.415    time: 0.9022  last_time: 0.9079  data_time: 0.0628  last_data_time: 0.0692   lr: 8.9141e-05  max_mem: 11485M
[05/29 17:50:28] d2.utils.events INFO:  eta: 2:13:08  iter: 1219  total_loss: 4.526  loss_ce: 0.0007875  loss_mask: 0.3406  loss_dice: 0.4147  loss_ce_0: 0.001064  loss_mask_0: 0.3412  loss_dice_0: 0.4136  loss_ce_1: 0.001064  loss_mask_1: 0.3409  loss_dice_1: 0.4138  loss_ce_2: 0.001129  loss_mask_2: 0.3407  loss_dice_2: 0.4141  loss_ce_3: 0.001147  loss_mask_3: 0.342  loss_dice_3: 0.414  loss_ce_4: 0.001148  loss_mask_4: 0.3412  loss_dice_4: 0.4144    time: 0.9026  last_time: 0.9464  data_time: 0.0631  last_data_time: 0.1077   lr: 8.8959e-05  max_mem: 11485M
[05/29 17:50:46] d2.utils.events INFO:  eta: 2:12:50  iter: 1239  total_loss: 4.523  loss_ce: 0.0007923  loss_mask: 0.3397  loss_dice: 0.4137  loss_ce_0: 0.001072  loss_mask_0: 0.3409  loss_dice_0: 0.4131  loss_ce_1: 0.001078  loss_mask_1: 0.3407  loss_dice_1: 0.413  loss_ce_2: 0.001128  loss_mask_2: 0.3406  loss_dice_2: 0.4131  loss_ce_3: 0.001133  loss_mask_3: 0.3418  loss_dice_3: 0.413  loss_ce_4: 0.00116  loss_mask_4: 0.3411  loss_dice_4: 0.4137    time: 0.9028  last_time: 0.9206  data_time: 0.0633  last_data_time: 0.0800   lr: 8.8777e-05  max_mem: 11485M
[05/29 17:51:05] d2.utils.events INFO:  eta: 2:12:31  iter: 1259  total_loss: 4.518  loss_ce: 0.0007875  loss_mask: 0.3395  loss_dice: 0.4132  loss_ce_0: 0.001062  loss_mask_0: 0.3403  loss_dice_0: 0.4129  loss_ce_1: 0.001066  loss_mask_1: 0.3405  loss_dice_1: 0.4123  loss_ce_2: 0.001117  loss_mask_2: 0.3403  loss_dice_2: 0.4125  loss_ce_3: 0.001118  loss_mask_3: 0.3405  loss_dice_3: 0.4124  loss_ce_4: 0.001151  loss_mask_4: 0.3402  loss_dice_4: 0.4131    time: 0.9032  last_time: 0.9283  data_time: 0.0636  last_data_time: 0.0941   lr: 8.8594e-05  max_mem: 11485M
[05/29 17:51:23] d2.utils.events INFO:  eta: 2:12:12  iter: 1279  total_loss: 4.511  loss_ce: 0.0007887  loss_mask: 0.3392  loss_dice: 0.4129  loss_ce_0: 0.001064  loss_mask_0: 0.3401  loss_dice_0: 0.4122  loss_ce_1: 0.001068  loss_mask_1: 0.3397  loss_dice_1: 0.4121  loss_ce_2: 0.001133  loss_mask_2: 0.3398  loss_dice_2: 0.412  loss_ce_3: 0.001133  loss_mask_3: 0.3396  loss_dice_3: 0.4118  loss_ce_4: 0.001153  loss_mask_4: 0.3395  loss_dice_4: 0.412    time: 0.9035  last_time: 0.9044  data_time: 0.0638  last_data_time: 0.0591   lr: 8.8412e-05  max_mem: 11485M
[05/29 17:51:42] d2.utils.events INFO:  eta: 2:12:15  iter: 1299  total_loss: 4.506  loss_ce: 0.0007892  loss_mask: 0.3386  loss_dice: 0.4122  loss_ce_0: 0.001066  loss_mask_0: 0.3394  loss_dice_0: 0.4117  loss_ce_1: 0.001068  loss_mask_1: 0.3389  loss_dice_1: 0.4112  loss_ce_2: 0.00113  loss_mask_2: 0.3391  loss_dice_2: 0.4116  loss_ce_3: 0.001133  loss_mask_3: 0.3388  loss_dice_3: 0.4113  loss_ce_4: 0.001157  loss_mask_4: 0.3387  loss_dice_4: 0.4109    time: 0.9039  last_time: 0.9026  data_time: 0.0641  last_data_time: 0.0580   lr: 8.8229e-05  max_mem: 11485M
[05/29 17:52:00] d2.utils.events INFO:  eta: 2:12:13  iter: 1319  total_loss: 4.501  loss_ce: 0.0007828  loss_mask: 0.3382  loss_dice: 0.4112  loss_ce_0: 0.001051  loss_mask_0: 0.3387  loss_dice_0: 0.4112  loss_ce_1: 0.001059  loss_mask_1: 0.3384  loss_dice_1: 0.4103  loss_ce_2: 0.001117  loss_mask_2: 0.3384  loss_dice_2: 0.4106  loss_ce_3: 0.001112  loss_mask_3: 0.3385  loss_dice_3: 0.411  loss_ce_4: 0.001141  loss_mask_4: 0.3379  loss_dice_4: 0.4102    time: 0.9043  last_time: 0.9299  data_time: 0.0644  last_data_time: 0.0629   lr: 8.8047e-05  max_mem: 11485M
[05/29 17:52:19] d2.utils.events INFO:  eta: 2:12:07  iter: 1339  total_loss: 4.493  loss_ce: 0.0007875  loss_mask: 0.3377  loss_dice: 0.4103  loss_ce_0: 0.001051  loss_mask_0: 0.3375  loss_dice_0: 0.4101  loss_ce_1: 0.001062  loss_mask_1: 0.338  loss_dice_1: 0.4101  loss_ce_2: 0.001122  loss_mask_2: 0.3378  loss_dice_2: 0.4099  loss_ce_3: 0.001128  loss_mask_3: 0.3382  loss_dice_3: 0.4098  loss_ce_4: 0.001144  loss_mask_4: 0.3373  loss_dice_4: 0.4099    time: 0.9046  last_time: 0.9137  data_time: 0.0646  last_data_time: 0.0683   lr: 8.7864e-05  max_mem: 11485M
[05/29 17:52:37] d2.utils.events INFO:  eta: 2:11:57  iter: 1359  total_loss: 4.489  loss_ce: 0.0007912  loss_mask: 0.3372  loss_dice: 0.4097  loss_ce_0: 0.00105  loss_mask_0: 0.3372  loss_dice_0: 0.4097  loss_ce_1: 0.001062  loss_mask_1: 0.3375  loss_dice_1: 0.4093  loss_ce_2: 0.001119  loss_mask_2: 0.3366  loss_dice_2: 0.4093  loss_ce_3: 0.001105  loss_mask_3: 0.3377  loss_dice_3: 0.4093  loss_ce_4: 0.001129  loss_mask_4: 0.3369  loss_dice_4: 0.4092    time: 0.9049  last_time: 0.9004  data_time: 0.0648  last_data_time: 0.0647   lr: 8.7681e-05  max_mem: 11485M
[05/29 17:52:56] d2.utils.events INFO:  eta: 2:11:48  iter: 1379  total_loss: 4.481  loss_ce: 0.0007863  loss_mask: 0.3364  loss_dice: 0.409  loss_ce_0: 0.001037  loss_mask_0: 0.3366  loss_dice_0: 0.4093  loss_ce_1: 0.001053  loss_mask_1: 0.3368  loss_dice_1: 0.4082  loss_ce_2: 0.001108  loss_mask_2: 0.3359  loss_dice_2: 0.409  loss_ce_3: 0.001087  loss_mask_3: 0.3369  loss_dice_3: 0.409  loss_ce_4: 0.001113  loss_mask_4: 0.3366  loss_dice_4: 0.4086    time: 0.9052  last_time: 0.9188  data_time: 0.0651  last_data_time: 0.0824   lr: 8.7499e-05  max_mem: 11485M
[05/29 17:53:14] d2.utils.events INFO:  eta: 2:11:36  iter: 1399  total_loss: 4.474  loss_ce: 0.0007887  loss_mask: 0.3359  loss_dice: 0.4084  loss_ce_0: 0.001023  loss_mask_0: 0.3363  loss_dice_0: 0.4085  loss_ce_1: 0.001048  loss_mask_1: 0.3366  loss_dice_1: 0.4078  loss_ce_2: 0.00111  loss_mask_2: 0.3355  loss_dice_2: 0.4082  loss_ce_3: 0.00107  loss_mask_3: 0.3362  loss_dice_3: 0.4086  loss_ce_4: 0.001101  loss_mask_4: 0.3361  loss_dice_4: 0.4078    time: 0.9054  last_time: 0.9228  data_time: 0.0653  last_data_time: 0.0893   lr: 8.7316e-05  max_mem: 11485M
[05/29 17:53:33] d2.utils.events INFO:  eta: 2:11:25  iter: 1419  total_loss: 4.463  loss_ce: 0.0007935  loss_mask: 0.3354  loss_dice: 0.4077  loss_ce_0: 0.00102  loss_mask_0: 0.3354  loss_dice_0: 0.4081  loss_ce_1: 0.00105  loss_mask_1: 0.3357  loss_dice_1: 0.4073  loss_ce_2: 0.001119  loss_mask_2: 0.3347  loss_dice_2: 0.4075  loss_ce_3: 0.001064  loss_mask_3: 0.3353  loss_dice_3: 0.4081  loss_ce_4: 0.001093  loss_mask_4: 0.3355  loss_dice_4: 0.4072    time: 0.9057  last_time: 0.9135  data_time: 0.0656  last_data_time: 0.0662   lr: 8.7133e-05  max_mem: 11485M
[05/29 17:53:51] d2.utils.events INFO:  eta: 2:11:09  iter: 1439  total_loss: 4.457  loss_ce: 0.0008003  loss_mask: 0.3346  loss_dice: 0.4072  loss_ce_0: 0.00103  loss_mask_0: 0.335  loss_dice_0: 0.4076  loss_ce_1: 0.001054  loss_mask_1: 0.3352  loss_dice_1: 0.4068  loss_ce_2: 0.001121  loss_mask_2: 0.3343  loss_dice_2: 0.4069  loss_ce_3: 0.001078  loss_mask_3: 0.3348  loss_dice_3: 0.4077  loss_ce_4: 0.001101  loss_mask_4: 0.3348  loss_dice_4: 0.4068    time: 0.9057  last_time: 0.9161  data_time: 0.0656  last_data_time: 0.0888   lr: 8.695e-05  max_mem: 11485M
[05/29 17:54:09] d2.utils.events INFO:  eta: 2:10:53  iter: 1459  total_loss: 4.454  loss_ce: 0.0007912  loss_mask: 0.3337  loss_dice: 0.4066  loss_ce_0: 0.001023  loss_mask_0: 0.334  loss_dice_0: 0.4067  loss_ce_1: 0.001047  loss_mask_1: 0.3349  loss_dice_1: 0.4062  loss_ce_2: 0.001112  loss_mask_2: 0.3338  loss_dice_2: 0.4064  loss_ce_3: 0.00107  loss_mask_3: 0.3339  loss_dice_3: 0.4071  loss_ce_4: 0.001083  loss_mask_4: 0.3343  loss_dice_4: 0.4063    time: 0.9056  last_time: 0.8703  data_time: 0.0657  last_data_time: 0.0416   lr: 8.6768e-05  max_mem: 11485M
[05/29 17:54:27] d2.utils.events INFO:  eta: 2:10:33  iter: 1479  total_loss: 4.449  loss_ce: 0.0007863  loss_mask: 0.3333  loss_dice: 0.4061  loss_ce_0: 0.001018  loss_mask_0: 0.3332  loss_dice_0: 0.4057  loss_ce_1: 0.001038  loss_mask_1: 0.3332  loss_dice_1: 0.4055  loss_ce_2: 0.001103  loss_mask_2: 0.3333  loss_dice_2: 0.4056  loss_ce_3: 0.001061  loss_mask_3: 0.3331  loss_dice_3: 0.4064  loss_ce_4: 0.001075  loss_mask_4: 0.3331  loss_dice_4: 0.4057    time: 0.9052  last_time: 0.8743  data_time: 0.0655  last_data_time: 0.0634   lr: 8.6585e-05  max_mem: 11485M
[05/29 17:54:44] d2.utils.events INFO:  eta: 2:10:14  iter: 1499  total_loss: 4.444  loss_ce: 0.0007781  loss_mask: 0.3328  loss_dice: 0.4054  loss_ce_0: 0.001007  loss_mask_0: 0.3327  loss_dice_0: 0.4054  loss_ce_1: 0.001029  loss_mask_1: 0.3327  loss_dice_1: 0.4048  loss_ce_2: 0.001091  loss_mask_2: 0.3326  loss_dice_2: 0.405  loss_ce_3: 0.001043  loss_mask_3: 0.3329  loss_dice_3: 0.4058  loss_ce_4: 0.001061  loss_mask_4: 0.3325  loss_dice_4: 0.4051    time: 0.9049  last_time: 0.8826  data_time: 0.0653  last_data_time: 0.0554   lr: 8.6402e-05  max_mem: 11485M
[05/29 17:55:02] d2.utils.events INFO:  eta: 2:09:58  iter: 1519  total_loss: 4.431  loss_ce: 0.0007696  loss_mask: 0.3325  loss_dice: 0.4044  loss_ce_0: 0.0009999  loss_mask_0: 0.3324  loss_dice_0: 0.4049  loss_ce_1: 0.001017  loss_mask_1: 0.3324  loss_dice_1: 0.4043  loss_ce_2: 0.001085  loss_mask_2: 0.3321  loss_dice_2: 0.4043  loss_ce_3: 0.001032  loss_mask_3: 0.3325  loss_dice_3: 0.4048  loss_ce_4: 0.001055  loss_mask_4: 0.3321  loss_dice_4: 0.4048    time: 0.9047  last_time: 0.9379  data_time: 0.0652  last_data_time: 0.0978   lr: 8.6219e-05  max_mem: 11485M
[05/29 17:55:20] d2.utils.events INFO:  eta: 2:09:43  iter: 1539  total_loss: 4.428  loss_ce: 0.0007707  loss_mask: 0.332  loss_dice: 0.4041  loss_ce_0: 0.0009825  loss_mask_0: 0.3317  loss_dice_0: 0.4046  loss_ce_1: 0.001008  loss_mask_1: 0.3322  loss_dice_1: 0.4038  loss_ce_2: 0.001073  loss_mask_2: 0.3313  loss_dice_2: 0.4039  loss_ce_3: 0.001025  loss_mask_3: 0.3321  loss_dice_3: 0.4041  loss_ce_4: 0.001052  loss_mask_4: 0.3316  loss_dice_4: 0.4046    time: 0.9047  last_time: 0.8694  data_time: 0.0653  last_data_time: 0.0406   lr: 8.6036e-05  max_mem: 11485M
[05/29 17:55:38] d2.utils.events INFO:  eta: 2:09:25  iter: 1559  total_loss: 4.424  loss_ce: 0.0007698  loss_mask: 0.3314  loss_dice: 0.4035  loss_ce_0: 0.0009798  loss_mask_0: 0.3311  loss_dice_0: 0.4041  loss_ce_1: 0.001004  loss_mask_1: 0.3317  loss_dice_1: 0.4032  loss_ce_2: 0.001068  loss_mask_2: 0.3304  loss_dice_2: 0.4034  loss_ce_3: 0.001018  loss_mask_3: 0.3318  loss_dice_3: 0.4036  loss_ce_4: 0.001054  loss_mask_4: 0.3309  loss_dice_4: 0.4042    time: 0.9046  last_time: 0.8932  data_time: 0.0652  last_data_time: 0.0579   lr: 8.5853e-05  max_mem: 11485M
[05/29 17:55:56] d2.utils.events INFO:  eta: 2:09:07  iter: 1579  total_loss: 4.416  loss_ce: 0.0007765  loss_mask: 0.3305  loss_dice: 0.4033  loss_ce_0: 0.0009891  loss_mask_0: 0.3302  loss_dice_0: 0.4036  loss_ce_1: 0.001008  loss_mask_1: 0.3311  loss_dice_1: 0.4028  loss_ce_2: 0.001075  loss_mask_2: 0.3298  loss_dice_2: 0.4028  loss_ce_3: 0.00103  loss_mask_3: 0.3313  loss_dice_3: 0.4028  loss_ce_4: 0.001056  loss_mask_4: 0.3302  loss_dice_4: 0.4032    time: 0.9042  last_time: 0.8918  data_time: 0.0649  last_data_time: 0.0521   lr: 8.567e-05  max_mem: 11485M
[05/29 17:56:14] d2.utils.events INFO:  eta: 2:08:52  iter: 1599  total_loss: 4.41  loss_ce: 0.0007765  loss_mask: 0.3302  loss_dice: 0.4027  loss_ce_0: 0.0009865  loss_mask_0: 0.3299  loss_dice_0: 0.403  loss_ce_1: 0.001008  loss_mask_1: 0.3304  loss_dice_1: 0.4023  loss_ce_2: 0.001075  loss_mask_2: 0.3296  loss_dice_2: 0.4025  loss_ce_3: 0.001022  loss_mask_3: 0.3309  loss_dice_3: 0.4025  loss_ce_4: 0.00105  loss_mask_4: 0.33  loss_dice_4: 0.4024    time: 0.9043  last_time: 0.8747  data_time: 0.0650  last_data_time: 0.0416   lr: 8.5487e-05  max_mem: 11485M
[05/29 17:56:32] d2.utils.events INFO:  eta: 2:08:31  iter: 1619  total_loss: 4.406  loss_ce: 0.0007702  loss_mask: 0.3298  loss_dice: 0.4017  loss_ce_0: 0.0009798  loss_mask_0: 0.3293  loss_dice_0: 0.4022  loss_ce_1: 0.001004  loss_mask_1: 0.3299  loss_dice_1: 0.4019  loss_ce_2: 0.001085  loss_mask_2: 0.3294  loss_dice_2: 0.4022  loss_ce_3: 0.001016  loss_mask_3: 0.3299  loss_dice_3: 0.4018  loss_ce_4: 0.001044  loss_mask_4: 0.3298  loss_dice_4: 0.4018    time: 0.9041  last_time: 0.9480  data_time: 0.0649  last_data_time: 0.1007   lr: 8.5303e-05  max_mem: 11485M
[05/29 17:56:50] d2.utils.events INFO:  eta: 2:08:13  iter: 1639  total_loss: 4.401  loss_ce: 0.0007781  loss_mask: 0.3294  loss_dice: 0.4011  loss_ce_0: 0.0009974  loss_mask_0: 0.3291  loss_dice_0: 0.4019  loss_ce_1: 0.001011  loss_mask_1: 0.3296  loss_dice_1: 0.4012  loss_ce_2: 0.001086  loss_mask_2: 0.3289  loss_dice_2: 0.4016  loss_ce_3: 0.001016  loss_mask_3: 0.3293  loss_dice_3: 0.4012  loss_ce_4: 0.00104  loss_mask_4: 0.3292  loss_dice_4: 0.4012    time: 0.9039  last_time: 0.8762  data_time: 0.0646  last_data_time: 0.0410   lr: 8.512e-05  max_mem: 11485M
[05/29 17:57:07] d2.utils.events INFO:  eta: 2:07:57  iter: 1659  total_loss: 4.394  loss_ce: 0.0007862  loss_mask: 0.3287  loss_dice: 0.4004  loss_ce_0: 0.001003  loss_mask_0: 0.3284  loss_dice_0: 0.4013  loss_ce_1: 0.00102  loss_mask_1: 0.3288  loss_dice_1: 0.4006  loss_ce_2: 0.001094  loss_mask_2: 0.3282  loss_dice_2: 0.401  loss_ce_3: 0.001022  loss_mask_3: 0.3286  loss_dice_3: 0.4006  loss_ce_4: 0.001046  loss_mask_4: 0.3285  loss_dice_4: 0.4007    time: 0.9037  last_time: 0.8756  data_time: 0.0645  last_data_time: 0.0427   lr: 8.4937e-05  max_mem: 11485M
[05/29 17:57:26] d2.utils.events INFO:  eta: 2:07:40  iter: 1679  total_loss: 4.386  loss_ce: 0.0007887  loss_mask: 0.328  loss_dice: 0.4001  loss_ce_0: 0.0009979  loss_mask_0: 0.328  loss_dice_0: 0.4006  loss_ce_1: 0.001017  loss_mask_1: 0.3276  loss_dice_1: 0.4001  loss_ce_2: 0.001094  loss_mask_2: 0.3276  loss_dice_2: 0.4004  loss_ce_3: 0.001024  loss_mask_3: 0.3283  loss_dice_3: 0.3998  loss_ce_4: 0.001041  loss_mask_4: 0.3281  loss_dice_4: 0.4002    time: 0.9036  last_time: 0.8779  data_time: 0.0645  last_data_time: 0.0608   lr: 8.4754e-05  max_mem: 11485M
[05/29 17:57:43] d2.utils.events INFO:  eta: 2:07:22  iter: 1699  total_loss: 4.38  loss_ce: 0.0007932  loss_mask: 0.3272  loss_dice: 0.3993  loss_ce_0: 0.001005  loss_mask_0: 0.3269  loss_dice_0: 0.4002  loss_ce_1: 0.001013  loss_mask_1: 0.3273  loss_dice_1: 0.3997  loss_ce_2: 0.0011  loss_mask_2: 0.3274  loss_dice_2: 0.3997  loss_ce_3: 0.001032  loss_mask_3: 0.3278  loss_dice_3: 0.3994  loss_ce_4: 0.001035  loss_mask_4: 0.3277  loss_dice_4: 0.3994    time: 0.9033  last_time: 0.8676  data_time: 0.0643  last_data_time: 0.0426   lr: 8.457e-05  max_mem: 11485M
[05/29 17:58:01] d2.utils.events INFO:  eta: 2:07:04  iter: 1719  total_loss: 4.377  loss_ce: 0.0007908  loss_mask: 0.3267  loss_dice: 0.399  loss_ce_0: 0.001001  loss_mask_0: 0.3266  loss_dice_0: 0.3991  loss_ce_1: 0.001004  loss_mask_1: 0.3269  loss_dice_1: 0.3994  loss_ce_2: 0.001094  loss_mask_2: 0.327  loss_dice_2: 0.3989  loss_ce_3: 0.00103  loss_mask_3: 0.3274  loss_dice_3: 0.3987  loss_ce_4: 0.001025  loss_mask_4: 0.3273  loss_dice_4: 0.3988    time: 0.9030  last_time: 0.8836  data_time: 0.0641  last_data_time: 0.0535   lr: 8.4387e-05  max_mem: 11485M
[05/29 17:58:19] d2.utils.events INFO:  eta: 2:06:52  iter: 1739  total_loss: 4.371  loss_ce: 0.0007864  loss_mask: 0.326  loss_dice: 0.3985  loss_ce_0: 0.0009928  loss_mask_0: 0.3256  loss_dice_0: 0.3985  loss_ce_1: 0.0009986  loss_mask_1: 0.326  loss_dice_1: 0.3986  loss_ce_2: 0.001088  loss_mask_2: 0.3264  loss_dice_2: 0.3986  loss_ce_3: 0.001029  loss_mask_3: 0.3268  loss_dice_3: 0.3982  loss_ce_4: 0.00102  loss_mask_4: 0.3265  loss_dice_4: 0.3986    time: 0.9031  last_time: 0.8995  data_time: 0.0642  last_data_time: 0.0659   lr: 8.4203e-05  max_mem: 11485M
[05/29 17:58:37] d2.utils.events INFO:  eta: 2:06:33  iter: 1759  total_loss: 4.364  loss_ce: 0.0007827  loss_mask: 0.3257  loss_dice: 0.398  loss_ce_0: 0.0009798  loss_mask_0: 0.325  loss_dice_0: 0.3979  loss_ce_1: 0.0009959  loss_mask_1: 0.3255  loss_dice_1: 0.398  loss_ce_2: 0.001082  loss_mask_2: 0.3256  loss_dice_2: 0.3979  loss_ce_3: 0.001021  loss_mask_3: 0.3259  loss_dice_3: 0.3976  loss_ce_4: 0.001011  loss_mask_4: 0.326  loss_dice_4: 0.3979    time: 0.9032  last_time: 0.9383  data_time: 0.0641  last_data_time: 0.0626   lr: 8.402e-05  max_mem: 11485M
[05/29 17:58:55] d2.utils.events INFO:  eta: 2:06:05  iter: 1779  total_loss: 4.359  loss_ce: 0.0007845  loss_mask: 0.3254  loss_dice: 0.3975  loss_ce_0: 0.0009697  loss_mask_0: 0.3248  loss_dice_0: 0.3972  loss_ce_1: 0.0009892  loss_mask_1: 0.3252  loss_dice_1: 0.3976  loss_ce_2: 0.001078  loss_mask_2: 0.325  loss_dice_2: 0.3972  loss_ce_3: 0.001017  loss_mask_3: 0.3253  loss_dice_3: 0.3974  loss_ce_4: 0.001014  loss_mask_4: 0.3256  loss_dice_4: 0.3971    time: 0.9031  last_time: 0.8882  data_time: 0.0640  last_data_time: 0.0555   lr: 8.3836e-05  max_mem: 11485M
[05/29 17:59:13] d2.utils.events INFO:  eta: 2:05:43  iter: 1799  total_loss: 4.351  loss_ce: 0.0007887  loss_mask: 0.3246  loss_dice: 0.3969  loss_ce_0: 0.0009791  loss_mask_0: 0.3242  loss_dice_0: 0.3967  loss_ce_1: 0.0009963  loss_mask_1: 0.3244  loss_dice_1: 0.3967  loss_ce_2: 0.001075  loss_mask_2: 0.3241  loss_dice_2: 0.3968  loss_ce_3: 0.001013  loss_mask_3: 0.3247  loss_dice_3: 0.3966  loss_ce_4: 0.001011  loss_mask_4: 0.3249  loss_dice_4: 0.3965    time: 0.9031  last_time: 0.9274  data_time: 0.0641  last_data_time: 0.0889   lr: 8.3653e-05  max_mem: 11485M
[05/29 17:59:31] d2.utils.events INFO:  eta: 2:05:21  iter: 1819  total_loss: 4.345  loss_ce: 0.0007931  loss_mask: 0.3241  loss_dice: 0.3961  loss_ce_0: 0.0009891  loss_mask_0: 0.3239  loss_dice_0: 0.3961  loss_ce_1: 0.0009983  loss_mask_1: 0.3238  loss_dice_1: 0.3962  loss_ce_2: 0.001085  loss_mask_2: 0.3235  loss_dice_2: 0.3963  loss_ce_3: 0.001017  loss_mask_3: 0.3241  loss_dice_3: 0.3958  loss_ce_4: 0.001025  loss_mask_4: 0.3243  loss_dice_4: 0.3962    time: 0.9031  last_time: 0.8766  data_time: 0.0640  last_data_time: 0.0438   lr: 8.3469e-05  max_mem: 11485M
[05/29 17:59:50] d2.utils.events INFO:  eta: 2:04:57  iter: 1839  total_loss: 4.334  loss_ce: 0.0007932  loss_mask: 0.3234  loss_dice: 0.3955  loss_ce_0: 0.0009862  loss_mask_0: 0.3236  loss_dice_0: 0.3957  loss_ce_1: 0.0009949  loss_mask_1: 0.3234  loss_dice_1: 0.3959  loss_ce_2: 0.001074  loss_mask_2: 0.3226  loss_dice_2: 0.3959  loss_ce_3: 0.001018  loss_mask_3: 0.3239  loss_dice_3: 0.3953  loss_ce_4: 0.001014  loss_mask_4: 0.3236  loss_dice_4: 0.3956    time: 0.9031  last_time: 0.9029  data_time: 0.0640  last_data_time: 0.0555   lr: 8.3285e-05  max_mem: 11485M
[05/29 18:00:08] d2.utils.events INFO:  eta: 2:04:32  iter: 1859  total_loss: 4.33  loss_ce: 0.00079  loss_mask: 0.3231  loss_dice: 0.3951  loss_ce_0: 0.0009791  loss_mask_0: 0.3235  loss_dice_0: 0.3952  loss_ce_1: 0.00099  loss_mask_1: 0.3231  loss_dice_1: 0.3953  loss_ce_2: 0.001072  loss_mask_2: 0.3224  loss_dice_2: 0.3955  loss_ce_3: 0.001017  loss_mask_3: 0.3235  loss_dice_3: 0.3947  loss_ce_4: 0.001001  loss_mask_4: 0.3232  loss_dice_4: 0.3949    time: 0.9032  last_time: 0.9108  data_time: 0.0639  last_data_time: 0.0530   lr: 8.3102e-05  max_mem: 11485M
[05/29 18:00:26] d2.utils.events INFO:  eta: 2:04:02  iter: 1879  total_loss: 4.322  loss_ce: 0.0007942  loss_mask: 0.3224  loss_dice: 0.3946  loss_ce_0: 0.0009768  loss_mask_0: 0.323  loss_dice_0: 0.3949  loss_ce_1: 0.0009877  loss_mask_1: 0.3227  loss_dice_1: 0.3948  loss_ce_2: 0.001074  loss_mask_2: 0.3218  loss_dice_2: 0.3948  loss_ce_3: 0.001018  loss_mask_3: 0.3226  loss_dice_3: 0.3943  loss_ce_4: 0.0009903  loss_mask_4: 0.3226  loss_dice_4: 0.3947    time: 0.9030  last_time: 0.8675  data_time: 0.0638  last_data_time: 0.0389   lr: 8.2918e-05  max_mem: 11485M
[05/29 18:00:44] d2.utils.events INFO:  eta: 2:03:36  iter: 1899  total_loss: 4.318  loss_ce: 0.0007923  loss_mask: 0.3216  loss_dice: 0.3941  loss_ce_0: 0.0009674  loss_mask_0: 0.3225  loss_dice_0: 0.3944  loss_ce_1: 0.0009806  loss_mask_1: 0.3219  loss_dice_1: 0.3944  loss_ce_2: 0.001067  loss_mask_2: 0.3211  loss_dice_2: 0.3944  loss_ce_3: 0.001013  loss_mask_3: 0.3222  loss_dice_3: 0.3939  loss_ce_4: 0.00098  loss_mask_4: 0.3222  loss_dice_4: 0.3944    time: 0.9029  last_time: 0.8645  data_time: 0.0637  last_data_time: 0.0413   lr: 8.2734e-05  max_mem: 11485M
[05/29 18:01:01] d2.utils.events INFO:  eta: 2:03:08  iter: 1919  total_loss: 4.315  loss_ce: 0.0007887  loss_mask: 0.321  loss_dice: 0.3936  loss_ce_0: 0.0009626  loss_mask_0: 0.3218  loss_dice_0: 0.3937  loss_ce_1: 0.0009761  loss_mask_1: 0.3215  loss_dice_1: 0.3937  loss_ce_2: 0.001058  loss_mask_2: 0.3208  loss_dice_2: 0.3938  loss_ce_3: 0.0009966  loss_mask_3: 0.3218  loss_dice_3: 0.3932  loss_ce_4: 0.0009723  loss_mask_4: 0.3217  loss_dice_4: 0.3939    time: 0.9027  last_time: 0.8597  data_time: 0.0636  last_data_time: 0.0362   lr: 8.255e-05  max_mem: 11485M
[05/29 18:01:19] d2.utils.events INFO:  eta: 2:02:42  iter: 1939  total_loss: 4.311  loss_ce: 0.0007902  loss_mask: 0.3205  loss_dice: 0.393  loss_ce_0: 0.000963  loss_mask_0: 0.3214  loss_dice_0: 0.3931  loss_ce_1: 0.0009719  loss_mask_1: 0.3209  loss_dice_1: 0.3934  loss_ce_2: 0.001061  loss_mask_2: 0.3204  loss_dice_2: 0.3934  loss_ce_3: 0.001006  loss_mask_3: 0.3213  loss_dice_3: 0.3927  loss_ce_4: 0.0009723  loss_mask_4: 0.3214  loss_dice_4: 0.3933    time: 0.9025  last_time: 0.8782  data_time: 0.0634  last_data_time: 0.0405   lr: 8.2366e-05  max_mem: 11485M
[05/29 18:01:37] d2.utils.events INFO:  eta: 2:02:07  iter: 1959  total_loss: 4.305  loss_ce: 0.0007942  loss_mask: 0.3197  loss_dice: 0.3926  loss_ce_0: 0.0009646  loss_mask_0: 0.3206  loss_dice_0: 0.3927  loss_ce_1: 0.000976  loss_mask_1: 0.3204  loss_dice_1: 0.3931  loss_ce_2: 0.001053  loss_mask_2: 0.32  loss_dice_2: 0.393  loss_ce_3: 0.001016  loss_mask_3: 0.3206  loss_dice_3: 0.3924  loss_ce_4: 0.0009753  loss_mask_4: 0.3204  loss_dice_4: 0.3927    time: 0.9023  last_time: 0.8793  data_time: 0.0632  last_data_time: 0.0398   lr: 8.2182e-05  max_mem: 11485M
[05/29 18:01:54] d2.utils.events INFO:  eta: 2:01:35  iter: 1979  total_loss: 4.296  loss_ce: 0.0007908  loss_mask: 0.3194  loss_dice: 0.392  loss_ce_0: 0.0009613  loss_mask_0: 0.3202  loss_dice_0: 0.3924  loss_ce_1: 0.0009713  loss_mask_1: 0.32  loss_dice_1: 0.3926  loss_ce_2: 0.001044  loss_mask_2: 0.3199  loss_dice_2: 0.3927  loss_ce_3: 0.001006  loss_mask_3: 0.3203  loss_dice_3: 0.3922  loss_ce_4: 0.0009655  loss_mask_4: 0.3201  loss_dice_4: 0.3924    time: 0.9021  last_time: 0.9009  data_time: 0.0631  last_data_time: 0.0482   lr: 8.1998e-05  max_mem: 11485M
[05/29 18:02:12] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/climatenet_v2/model_0001999.pth
[05/29 18:02:13] d2.utils.events INFO:  eta: 2:01:14  iter: 1999  total_loss: 4.291  loss_ce: 0.000787  loss_mask: 0.319  loss_dice: 0.3915  loss_ce_0: 0.0009493  loss_mask_0: 0.3196  loss_dice_0: 0.3918  loss_ce_1: 0.0009652  loss_mask_1: 0.3195  loss_dice_1: 0.3921  loss_ce_2: 0.001036  loss_mask_2: 0.3192  loss_dice_2: 0.392  loss_ce_3: 0.0009934  loss_mask_3: 0.3199  loss_dice_3: 0.3917  loss_ce_4: 0.0009582  loss_mask_4: 0.3195  loss_dice_4: 0.3922    time: 0.9021  last_time: 0.8709  data_time: 0.0631  last_data_time: 0.0494   lr: 8.1814e-05  max_mem: 11485M
[05/29 18:02:32] d2.utils.events INFO:  eta: 2:00:54  iter: 2019  total_loss: 4.289  loss_ce: 0.0007827  loss_mask: 0.3187  loss_dice: 0.3909  loss_ce_0: 0.0009413  loss_mask_0: 0.3191  loss_dice_0: 0.3912  loss_ce_1: 0.0009598  loss_mask_1: 0.3189  loss_dice_1: 0.3913  loss_ce_2: 0.001029  loss_mask_2: 0.3187  loss_dice_2: 0.3915  loss_ce_3: 0.0009859  loss_mask_3: 0.3191  loss_dice_3: 0.3912  loss_ce_4: 0.0009553  loss_mask_4: 0.3185  loss_dice_4: 0.3915    time: 0.9023  last_time: 0.9334  data_time: 0.0632  last_data_time: 0.0858   lr: 8.163e-05  max_mem: 11485M
[05/29 18:02:49] d2.utils.events INFO:  eta: 2:00:25  iter: 2039  total_loss: 4.285  loss_ce: 0.000775  loss_mask: 0.3181  loss_dice: 0.3904  loss_ce_0: 0.0009362  loss_mask_0: 0.3184  loss_dice_0: 0.3903  loss_ce_1: 0.0009565  loss_mask_1: 0.3182  loss_dice_1: 0.3907  loss_ce_2: 0.001024  loss_mask_2: 0.3182  loss_dice_2: 0.3912  loss_ce_3: 0.0009785  loss_mask_3: 0.3181  loss_dice_3: 0.3908  loss_ce_4: 0.0009437  loss_mask_4: 0.3181  loss_dice_4: 0.3908    time: 0.9022  last_time: 0.9079  data_time: 0.0632  last_data_time: 0.0733   lr: 8.1446e-05  max_mem: 11485M
[05/29 18:03:08] d2.utils.events INFO:  eta: 2:00:05  iter: 2059  total_loss: 4.279  loss_ce: 0.0007708  loss_mask: 0.3174  loss_dice: 0.3898  loss_ce_0: 0.0009339  loss_mask_0: 0.3176  loss_dice_0: 0.3901  loss_ce_1: 0.0009536  loss_mask_1: 0.3175  loss_dice_1: 0.3902  loss_ce_2: 0.001014  loss_mask_2: 0.3178  loss_dice_2: 0.3907  loss_ce_3: 0.0009763  loss_mask_3: 0.3173  loss_dice_3: 0.3904  loss_ce_4: 0.0009416  loss_mask_4: 0.3173  loss_dice_4: 0.3903    time: 0.9025  last_time: 0.9699  data_time: 0.0634  last_data_time: 0.1096   lr: 8.1262e-05  max_mem: 11485M
[05/29 18:03:27] d2.utils.events INFO:  eta: 1:59:44  iter: 2079  total_loss: 4.273  loss_ce: 0.0007706  loss_mask: 0.3172  loss_dice: 0.3894  loss_ce_0: 0.0009313  loss_mask_0: 0.3174  loss_dice_0: 0.3896  loss_ce_1: 0.0009503  loss_mask_1: 0.3173  loss_dice_1: 0.3897  loss_ce_2: 0.001011  loss_mask_2: 0.3173  loss_dice_2: 0.3901  loss_ce_3: 0.0009735  loss_mask_3: 0.3171  loss_dice_3: 0.3899  loss_ce_4: 0.0009416  loss_mask_4: 0.3169  loss_dice_4: 0.3899    time: 0.9028  last_time: 0.9305  data_time: 0.0636  last_data_time: 0.0734   lr: 8.1078e-05  max_mem: 11485M
[05/29 18:03:45] d2.utils.events INFO:  eta: 1:59:16  iter: 2099  total_loss: 4.267  loss_ce: 0.0007706  loss_mask: 0.3165  loss_dice: 0.389  loss_ce_0: 0.0009284  loss_mask_0: 0.3167  loss_dice_0: 0.389  loss_ce_1: 0.0009443  loss_mask_1: 0.3168  loss_dice_1: 0.3889  loss_ce_2: 0.001007  loss_mask_2: 0.3169  loss_dice_2: 0.3897  loss_ce_3: 0.0009708  loss_mask_3: 0.3165  loss_dice_3: 0.3891  loss_ce_4: 0.0009362  loss_mask_4: 0.3165  loss_dice_4: 0.3894    time: 0.9029  last_time: 0.8835  data_time: 0.0637  last_data_time: 0.0422   lr: 8.0894e-05  max_mem: 11485M
[05/29 18:04:04] d2.utils.events INFO:  eta: 1:58:56  iter: 2119  total_loss: 4.26  loss_ce: 0.0007675  loss_mask: 0.3158  loss_dice: 0.3886  loss_ce_0: 0.0009194  loss_mask_0: 0.3164  loss_dice_0: 0.3886  loss_ce_1: 0.0009407  loss_mask_1: 0.3161  loss_dice_1: 0.3883  loss_ce_2: 0.001003  loss_mask_2: 0.3163  loss_dice_2: 0.3889  loss_ce_3: 0.0009658  loss_mask_3: 0.316  loss_dice_3: 0.3885  loss_ce_4: 0.0009281  loss_mask_4: 0.3159  loss_dice_4: 0.3891    time: 0.9031  last_time: 0.8790  data_time: 0.0638  last_data_time: 0.0459   lr: 8.0709e-05  max_mem: 11485M
[05/29 18:04:22] d2.utils.events INFO:  eta: 1:58:32  iter: 2139  total_loss: 4.254  loss_ce: 0.0007637  loss_mask: 0.3156  loss_dice: 0.3883  loss_ce_0: 0.0009168  loss_mask_0: 0.3159  loss_dice_0: 0.3882  loss_ce_1: 0.0009382  loss_mask_1: 0.3158  loss_dice_1: 0.3879  loss_ce_2: 0.0009972  loss_mask_2: 0.3161  loss_dice_2: 0.3883  loss_ce_3: 0.0009614  loss_mask_3: 0.3157  loss_dice_3: 0.3879  loss_ce_4: 0.0009228  loss_mask_4: 0.3152  loss_dice_4: 0.3886    time: 0.9033  last_time: 0.8751  data_time: 0.0640  last_data_time: 0.0404   lr: 8.0525e-05  max_mem: 11485M
[05/29 18:04:40] d2.utils.events INFO:  eta: 1:58:05  iter: 2159  total_loss: 4.245  loss_ce: 0.0007696  loss_mask: 0.3148  loss_dice: 0.3879  loss_ce_0: 0.000922  loss_mask_0: 0.3153  loss_dice_0: 0.3878  loss_ce_1: 0.0009413  loss_mask_1: 0.3151  loss_dice_1: 0.3875  loss_ce_2: 0.0009953  loss_mask_2: 0.3153  loss_dice_2: 0.3878  loss_ce_3: 0.0009598  loss_mask_3: 0.3152  loss_dice_3: 0.3876  loss_ce_4: 0.0009239  loss_mask_4: 0.3147  loss_dice_4: 0.3881    time: 0.9029  last_time: 0.8600  data_time: 0.0638  last_data_time: 0.0341   lr: 8.034e-05  max_mem: 11485M
[05/29 18:04:57] d2.utils.events INFO:  eta: 1:57:39  iter: 2179  total_loss: 4.238  loss_ce: 0.000775  loss_mask: 0.3143  loss_dice: 0.3874  loss_ce_0: 0.0009293  loss_mask_0: 0.3146  loss_dice_0: 0.3873  loss_ce_1: 0.0009453  loss_mask_1: 0.3141  loss_dice_1: 0.3869  loss_ce_2: 0.001001  loss_mask_2: 0.3149  loss_dice_2: 0.3873  loss_ce_3: 0.0009621  loss_mask_3: 0.3148  loss_dice_3: 0.387  loss_ce_4: 0.0009284  loss_mask_4: 0.3142  loss_dice_4: 0.3874    time: 0.9028  last_time: 0.8815  data_time: 0.0636  last_data_time: 0.0394   lr: 8.0156e-05  max_mem: 11485M
[05/29 18:05:15] d2.utils.events INFO:  eta: 1:57:07  iter: 2199  total_loss: 4.232  loss_ce: 0.0007738  loss_mask: 0.3139  loss_dice: 0.387  loss_ce_0: 0.0009202  loss_mask_0: 0.3134  loss_dice_0: 0.3866  loss_ce_1: 0.0009413  loss_mask_1: 0.3137  loss_dice_1: 0.3866  loss_ce_2: 0.0009935  loss_mask_2: 0.3142  loss_dice_2: 0.3869  loss_ce_3: 0.0009584  loss_mask_3: 0.3142  loss_dice_3: 0.3867  loss_ce_4: 0.000922  loss_mask_4: 0.3136  loss_dice_4: 0.387    time: 0.9026  last_time: 0.8616  data_time: 0.0634  last_data_time: 0.0399   lr: 7.9972e-05  max_mem: 11485M
[05/29 18:05:33] d2.utils.events INFO:  eta: 1:56:40  iter: 2219  total_loss: 4.227  loss_ce: 0.0007781  loss_mask: 0.3131  loss_dice: 0.3864  loss_ce_0: 0.000922  loss_mask_0: 0.3131  loss_dice_0: 0.3864  loss_ce_1: 0.0009424  loss_mask_1: 0.313  loss_dice_1: 0.3863  loss_ce_2: 0.0009953  loss_mask_2: 0.3137  loss_dice_2: 0.3865  loss_ce_3: 0.0009577  loss_mask_3: 0.3136  loss_dice_3: 0.3862  loss_ce_4: 0.0009216  loss_mask_4: 0.3133  loss_dice_4: 0.3866    time: 0.9025  last_time: 0.9411  data_time: 0.0634  last_data_time: 0.0980   lr: 7.9787e-05  max_mem: 11485M
[05/29 18:05:51] d2.utils.events INFO:  eta: 1:56:20  iter: 2239  total_loss: 4.221  loss_ce: 0.0007828  loss_mask: 0.3125  loss_dice: 0.386  loss_ce_0: 0.0009208  loss_mask_0: 0.3124  loss_dice_0: 0.3859  loss_ce_1: 0.0009449  loss_mask_1: 0.3121  loss_dice_1: 0.3858  loss_ce_2: 0.001001  loss_mask_2: 0.3132  loss_dice_2: 0.386  loss_ce_3: 0.0009571  loss_mask_3: 0.3131  loss_dice_3: 0.3859  loss_ce_4: 0.0009229  loss_mask_4: 0.3129  loss_dice_4: 0.3862    time: 0.9026  last_time: 0.8641  data_time: 0.0634  last_data_time: 0.0418   lr: 7.9602e-05  max_mem: 11485M
[05/29 18:06:09] d2.utils.events INFO:  eta: 1:55:53  iter: 2259  total_loss: 4.219  loss_ce: 0.0007779  loss_mask: 0.3116  loss_dice: 0.3854  loss_ce_0: 0.0009154  loss_mask_0: 0.3116  loss_dice_0: 0.3856  loss_ce_1: 0.0009412  loss_mask_1: 0.3116  loss_dice_1: 0.3856  loss_ce_2: 0.0009935  loss_mask_2: 0.3127  loss_dice_2: 0.3856  loss_ce_3: 0.0009521  loss_mask_3: 0.3128  loss_dice_3: 0.3854  loss_ce_4: 0.0009195  loss_mask_4: 0.3124  loss_dice_4: 0.386    time: 0.9024  last_time: 0.8493  data_time: 0.0632  last_data_time: 0.0387   lr: 7.9418e-05  max_mem: 11485M
[05/29 18:06:27] d2.utils.events INFO:  eta: 1:55:21  iter: 2279  total_loss: 4.215  loss_ce: 0.0007827  loss_mask: 0.3107  loss_dice: 0.3848  loss_ce_0: 0.0009201  loss_mask_0: 0.311  loss_dice_0: 0.3854  loss_ce_1: 0.0009416  loss_mask_1: 0.3112  loss_dice_1: 0.385  loss_ce_2: 0.0009893  loss_mask_2: 0.3119  loss_dice_2: 0.3851  loss_ce_3: 0.0009577  loss_mask_3: 0.312  loss_dice_3: 0.3851  loss_ce_4: 0.0009219  loss_mask_4: 0.3117  loss_dice_4: 0.3856    time: 0.9022  last_time: 0.8821  data_time: 0.0631  last_data_time: 0.0399   lr: 7.9233e-05  max_mem: 11485M
[05/29 18:06:44] d2.utils.events INFO:  eta: 1:54:50  iter: 2299  total_loss: 4.208  loss_ce: 0.0007827  loss_mask: 0.3099  loss_dice: 0.3843  loss_ce_0: 0.0009194  loss_mask_0: 0.3104  loss_dice_0: 0.3847  loss_ce_1: 0.0009415  loss_mask_1: 0.3106  loss_dice_1: 0.3845  loss_ce_2: 0.0009842  loss_mask_2: 0.3114  loss_dice_2: 0.3846  loss_ce_3: 0.000958  loss_mask_3: 0.3113  loss_dice_3: 0.3847  loss_ce_4: 0.0009229  loss_mask_4: 0.311  loss_dice_4: 0.3852    time: 0.9020  last_time: 0.8577  data_time: 0.0629  last_data_time: 0.0329   lr: 7.9048e-05  max_mem: 11485M
[05/29 18:07:02] d2.utils.events INFO:  eta: 1:54:18  iter: 2319  total_loss: 4.2  loss_ce: 0.0007764  loss_mask: 0.3095  loss_dice: 0.384  loss_ce_0: 0.000912  loss_mask_0: 0.3098  loss_dice_0: 0.3843  loss_ce_1: 0.0009383  loss_mask_1: 0.3101  loss_dice_1: 0.3842  loss_ce_2: 0.0009785  loss_mask_2: 0.3107  loss_dice_2: 0.3842  loss_ce_3: 0.0009522  loss_mask_3: 0.3109  loss_dice_3: 0.3842  loss_ce_4: 0.0009193  loss_mask_4: 0.3104  loss_dice_4: 0.3846    time: 0.9018  last_time: 0.8733  data_time: 0.0628  last_data_time: 0.0410   lr: 7.8863e-05  max_mem: 11485M
[05/29 18:07:20] d2.utils.events INFO:  eta: 1:53:51  iter: 2339  total_loss: 4.197  loss_ce: 0.0007779  loss_mask: 0.3091  loss_dice: 0.3836  loss_ce_0: 0.0009125  loss_mask_0: 0.3096  loss_dice_0: 0.3839  loss_ce_1: 0.0009384  loss_mask_1: 0.3097  loss_dice_1: 0.3838  loss_ce_2: 0.0009746  loss_mask_2: 0.3098  loss_dice_2: 0.3837  loss_ce_3: 0.0009506  loss_mask_3: 0.3102  loss_dice_3: 0.3838  loss_ce_4: 0.0009211  loss_mask_4: 0.31  loss_dice_4: 0.3839    time: 0.9015  last_time: 0.8649  data_time: 0.0626  last_data_time: 0.0376   lr: 7.8679e-05  max_mem: 11485M
[05/29 18:07:37] d2.utils.events INFO:  eta: 1:53:26  iter: 2359  total_loss: 4.19  loss_ce: 0.0007817  loss_mask: 0.3088  loss_dice: 0.3831  loss_ce_0: 0.000916  loss_mask_0: 0.3092  loss_dice_0: 0.3832  loss_ce_1: 0.0009389  loss_mask_1: 0.309  loss_dice_1: 0.3833  loss_ce_2: 0.0009774  loss_mask_2: 0.3093  loss_dice_2: 0.3833  loss_ce_3: 0.0009517  loss_mask_3: 0.3097  loss_dice_3: 0.3834  loss_ce_4: 0.0009217  loss_mask_4: 0.3093  loss_dice_4: 0.3834    time: 0.9014  last_time: 0.8694  data_time: 0.0625  last_data_time: 0.0398   lr: 7.8494e-05  max_mem: 11485M
[05/29 18:07:55] d2.utils.events INFO:  eta: 1:53:00  iter: 2379  total_loss: 4.184  loss_ce: 0.0007812  loss_mask: 0.3083  loss_dice: 0.3827  loss_ce_0: 0.0009125  loss_mask_0: 0.3088  loss_dice_0: 0.3824  loss_ce_1: 0.0009382  loss_mask_1: 0.3086  loss_dice_1: 0.3827  loss_ce_2: 0.0009794  loss_mask_2: 0.3088  loss_dice_2: 0.3827  loss_ce_3: 0.0009508  loss_mask_3: 0.3093  loss_dice_3: 0.3827  loss_ce_4: 0.0009159  loss_mask_4: 0.3085  loss_dice_4: 0.3827    time: 0.9012  last_time: 0.8871  data_time: 0.0623  last_data_time: 0.0408   lr: 7.8309e-05  max_mem: 11485M
[05/29 18:08:13] d2.utils.events INFO:  eta: 1:52:35  iter: 2399  total_loss: 4.175  loss_ce: 0.0007755  loss_mask: 0.3077  loss_dice: 0.3822  loss_ce_0: 0.0009071  loss_mask_0: 0.308  loss_dice_0: 0.382  loss_ce_1: 0.0009325  loss_mask_1: 0.3081  loss_dice_1: 0.3821  loss_ce_2: 0.0009746  loss_mask_2: 0.3082  loss_dice_2: 0.3822  loss_ce_3: 0.0009464  loss_mask_3: 0.3081  loss_dice_3: 0.3822  loss_ce_4: 0.0009068  loss_mask_4: 0.3078  loss_dice_4: 0.3821    time: 0.9010  last_time: 0.9026  data_time: 0.0622  last_data_time: 0.0648   lr: 7.8124e-05  max_mem: 11485M
[05/29 18:08:30] d2.utils.events INFO:  eta: 1:52:11  iter: 2419  total_loss: 4.171  loss_ce: 0.0007708  loss_mask: 0.3074  loss_dice: 0.3818  loss_ce_0: 0.0009013  loss_mask_0: 0.3076  loss_dice_0: 0.3815  loss_ce_1: 0.0009282  loss_mask_1: 0.3078  loss_dice_1: 0.3818  loss_ce_2: 0.0009695  loss_mask_2: 0.3075  loss_dice_2: 0.3814  loss_ce_3: 0.0009414  loss_mask_3: 0.3077  loss_dice_3: 0.3816  loss_ce_4: 0.0009005  loss_mask_4: 0.3073  loss_dice_4: 0.3818    time: 0.9009  last_time: 0.8663  data_time: 0.0620  last_data_time: 0.0410   lr: 7.7939e-05  max_mem: 11485M
[05/29 18:08:48] d2.utils.events INFO:  eta: 1:51:49  iter: 2439  total_loss: 4.161  loss_ce: 0.0007689  loss_mask: 0.3071  loss_dice: 0.3814  loss_ce_0: 0.0008966  loss_mask_0: 0.3073  loss_dice_0: 0.381  loss_ce_1: 0.0009221  loss_mask_1: 0.3072  loss_dice_1: 0.3811  loss_ce_2: 0.0009649  loss_mask_2: 0.3073  loss_dice_2: 0.381  loss_ce_3: 0.0009371  loss_mask_3: 0.3073  loss_dice_3: 0.3811  loss_ce_4: 0.0008931  loss_mask_4: 0.307  loss_dice_4: 0.3813    time: 0.9007  last_time: 0.8593  data_time: 0.0619  last_data_time: 0.0353   lr: 7.7754e-05  max_mem: 11485M
[05/29 18:09:06] d2.utils.events INFO:  eta: 1:51:25  iter: 2459  total_loss: 4.156  loss_ce: 0.0007646  loss_mask: 0.3066  loss_dice: 0.381  loss_ce_0: 0.0008936  loss_mask_0: 0.307  loss_dice_0: 0.3807  loss_ce_1: 0.0009183  loss_mask_1: 0.307  loss_dice_1: 0.3806  loss_ce_2: 0.0009596  loss_mask_2: 0.3068  loss_dice_2: 0.3807  loss_ce_3: 0.0009337  loss_mask_3: 0.3069  loss_dice_3: 0.3804  loss_ce_4: 0.0008901  loss_mask_4: 0.3066  loss_dice_4: 0.3809    time: 0.9006  last_time: 0.8842  data_time: 0.0618  last_data_time: 0.0398   lr: 7.7569e-05  max_mem: 11485M
[05/29 18:09:23] d2.utils.events INFO:  eta: 1:51:09  iter: 2479  total_loss: 4.151  loss_ce: 0.0007696  loss_mask: 0.3063  loss_dice: 0.3803  loss_ce_0: 0.0008974  loss_mask_0: 0.3064  loss_dice_0: 0.3803  loss_ce_1: 0.0009186  loss_mask_1: 0.3066  loss_dice_1: 0.3801  loss_ce_2: 0.0009596  loss_mask_2: 0.3062  loss_dice_2: 0.3801  loss_ce_3: 0.0009349  loss_mask_3: 0.3064  loss_dice_3: 0.3799  loss_ce_4: 0.0008907  loss_mask_4: 0.3059  loss_dice_4: 0.3805    time: 0.9005  last_time: 0.8806  data_time: 0.0617  last_data_time: 0.0565   lr: 7.7383e-05  max_mem: 11485M
[05/29 18:09:41] d2.utils.events INFO:  eta: 1:50:51  iter: 2499  total_loss: 4.147  loss_ce: 0.0007657  loss_mask: 0.306  loss_dice: 0.3796  loss_ce_0: 0.0008946  loss_mask_0: 0.3061  loss_dice_0: 0.3797  loss_ce_1: 0.000913  loss_mask_1: 0.3062  loss_dice_1: 0.3796  loss_ce_2: 0.0009511  loss_mask_2: 0.3059  loss_dice_2: 0.3796  loss_ce_3: 0.0009331  loss_mask_3: 0.3054  loss_dice_3: 0.3796  loss_ce_4: 0.0008866  loss_mask_4: 0.3058  loss_dice_4: 0.3801    time: 0.9003  last_time: 0.8571  data_time: 0.0616  last_data_time: 0.0307   lr: 7.7198e-05  max_mem: 11485M
[05/29 18:09:59] d2.utils.events INFO:  eta: 1:50:31  iter: 2519  total_loss: 4.14  loss_ce: 0.0007641  loss_mask: 0.3055  loss_dice: 0.3789  loss_ce_0: 0.0008917  loss_mask_0: 0.3058  loss_dice_0: 0.3789  loss_ce_1: 0.0009092  loss_mask_1: 0.3057  loss_dice_1: 0.3793  loss_ce_2: 0.0009467  loss_mask_2: 0.3051  loss_dice_2: 0.379  loss_ce_3: 0.0009304  loss_mask_3: 0.305  loss_dice_3: 0.3792  loss_ce_4: 0.0008833  loss_mask_4: 0.3052  loss_dice_4: 0.3796    time: 0.9001  last_time: 0.8746  data_time: 0.0615  last_data_time: 0.0390   lr: 7.7013e-05  max_mem: 11485M
[05/29 18:10:16] d2.utils.events INFO:  eta: 1:50:09  iter: 2539  total_loss: 4.134  loss_ce: 0.0007648  loss_mask: 0.3048  loss_dice: 0.3784  loss_ce_0: 0.0008936  loss_mask_0: 0.3052  loss_dice_0: 0.3786  loss_ce_1: 0.0009065  loss_mask_1: 0.3052  loss_dice_1: 0.3789  loss_ce_2: 0.0009431  loss_mask_2: 0.3045  loss_dice_2: 0.3787  loss_ce_3: 0.000926  loss_mask_3: 0.3047  loss_dice_3: 0.3786  loss_ce_4: 0.0008775  loss_mask_4: 0.3049  loss_dice_4: 0.3791    time: 0.8999  last_time: 0.8985  data_time: 0.0614  last_data_time: 0.0736   lr: 7.6828e-05  max_mem: 11485M
[05/29 18:10:34] d2.utils.events INFO:  eta: 1:49:52  iter: 2559  total_loss: 4.131  loss_ce: 0.0007696  loss_mask: 0.3041  loss_dice: 0.3781  loss_ce_0: 0.0008966  loss_mask_0: 0.3047  loss_dice_0: 0.3782  loss_ce_1: 0.000905  loss_mask_1: 0.3047  loss_dice_1: 0.3784  loss_ce_2: 0.0009446  loss_mask_2: 0.3041  loss_dice_2: 0.3781  loss_ce_3: 0.000926  loss_mask_3: 0.304  loss_dice_3: 0.3782  loss_ce_4: 0.0008789  loss_mask_4: 0.304  loss_dice_4: 0.3786    time: 0.8998  last_time: 0.8879  data_time: 0.0613  last_data_time: 0.0421   lr: 7.6642e-05  max_mem: 11485M
[05/29 18:10:52] d2.utils.events INFO:  eta: 1:49:34  iter: 2579  total_loss: 4.125  loss_ce: 0.0007714  loss_mask: 0.3037  loss_dice: 0.3778  loss_ce_0: 0.0008972  loss_mask_0: 0.3041  loss_dice_0: 0.3777  loss_ce_1: 0.0009036  loss_mask_1: 0.304  loss_dice_1: 0.3776  loss_ce_2: 0.0009443  loss_mask_2: 0.3037  loss_dice_2: 0.3776  loss_ce_3: 0.0009228  loss_mask_3: 0.3035  loss_dice_3: 0.3778  loss_ce_4: 0.0008824  loss_mask_4: 0.3037  loss_dice_4: 0.378    time: 0.8997  last_time: 0.8942  data_time: 0.0611  last_data_time: 0.0548   lr: 7.6457e-05  max_mem: 11485M
[05/29 18:11:09] d2.utils.events INFO:  eta: 1:49:14  iter: 2599  total_loss: 4.12  loss_ce: 0.0007718  loss_mask: 0.3033  loss_dice: 0.3772  loss_ce_0: 0.000895  loss_mask_0: 0.3035  loss_dice_0: 0.3773  loss_ce_1: 0.0009024  loss_mask_1: 0.3028  loss_dice_1: 0.3772  loss_ce_2: 0.0009446  loss_mask_2: 0.3033  loss_dice_2: 0.377  loss_ce_3: 0.0009214  loss_mask_3: 0.3032  loss_dice_3: 0.3775  loss_ce_4: 0.0008789  loss_mask_4: 0.3032  loss_dice_4: 0.3776    time: 0.8995  last_time: 0.8760  data_time: 0.0610  last_data_time: 0.0388   lr: 7.6271e-05  max_mem: 11485M
[05/29 18:11:27] d2.utils.events INFO:  eta: 1:48:52  iter: 2619  total_loss: 4.116  loss_ce: 0.0007711  loss_mask: 0.303  loss_dice: 0.3769  loss_ce_0: 0.000894  loss_mask_0: 0.3031  loss_dice_0: 0.3765  loss_ce_1: 0.0009003  loss_mask_1: 0.3025  loss_dice_1: 0.3765  loss_ce_2: 0.0009443  loss_mask_2: 0.3028  loss_dice_2: 0.3765  loss_ce_3: 0.0009235  loss_mask_3: 0.3027  loss_dice_3: 0.3772  loss_ce_4: 0.0008766  loss_mask_4: 0.3029  loss_dice_4: 0.3773    time: 0.8994  last_time: 0.8744  data_time: 0.0609  last_data_time: 0.0447   lr: 7.6086e-05  max_mem: 11485M
[05/29 18:11:45] d2.utils.events INFO:  eta: 1:48:33  iter: 2639  total_loss: 4.11  loss_ce: 0.0007696  loss_mask: 0.3027  loss_dice: 0.3765  loss_ce_0: 0.0008921  loss_mask_0: 0.3028  loss_dice_0: 0.3761  loss_ce_1: 0.0008977  loss_mask_1: 0.3018  loss_dice_1: 0.3761  loss_ce_2: 0.0009414  loss_mask_2: 0.3023  loss_dice_2: 0.3763  loss_ce_3: 0.0009244  loss_mask_3: 0.3023  loss_dice_3: 0.3768  loss_ce_4: 0.0008737  loss_mask_4: 0.3022  loss_dice_4: 0.3767    time: 0.8992  last_time: 0.8808  data_time: 0.0608  last_data_time: 0.0393   lr: 7.59e-05  max_mem: 11485M
[05/29 18:12:02] d2.utils.events INFO:  eta: 1:48:15  iter: 2659  total_loss: 4.105  loss_ce: 0.000767  loss_mask: 0.3023  loss_dice: 0.3759  loss_ce_0: 0.00089  loss_mask_0: 0.3024  loss_dice_0: 0.3758  loss_ce_1: 0.0008909  loss_mask_1: 0.3013  loss_dice_1: 0.3758  loss_ce_2: 0.0009379  loss_mask_2: 0.3019  loss_dice_2: 0.376  loss_ce_3: 0.0009208  loss_mask_3: 0.302  loss_dice_3: 0.3763  loss_ce_4: 0.0008716  loss_mask_4: 0.3018  loss_dice_4: 0.3764    time: 0.8990  last_time: 0.8777  data_time: 0.0607  last_data_time: 0.0396   lr: 7.5715e-05  max_mem: 11485M
[05/29 18:12:20] d2.utils.events INFO:  eta: 1:47:54  iter: 2679  total_loss: 4.1  loss_ce: 0.0007646  loss_mask: 0.3016  loss_dice: 0.3756  loss_ce_0: 0.0008877  loss_mask_0: 0.3018  loss_dice_0: 0.3755  loss_ce_1: 0.0008882  loss_mask_1: 0.3009  loss_dice_1: 0.3755  loss_ce_2: 0.0009345  loss_mask_2: 0.3015  loss_dice_2: 0.3756  loss_ce_3: 0.0009174  loss_mask_3: 0.3017  loss_dice_3: 0.3759  loss_ce_4: 0.0008696  loss_mask_4: 0.3014  loss_dice_4: 0.376    time: 0.8988  last_time: 0.8640  data_time: 0.0606  last_data_time: 0.0352   lr: 7.5529e-05  max_mem: 11485M
[05/29 18:12:37] d2.utils.events INFO:  eta: 1:47:36  iter: 2699  total_loss: 4.097  loss_ce: 0.0007682  loss_mask: 0.3012  loss_dice: 0.3751  loss_ce_0: 0.0008851  loss_mask_0: 0.3013  loss_dice_0: 0.3753  loss_ce_1: 0.0008869  loss_mask_1: 0.3006  loss_dice_1: 0.375  loss_ce_2: 0.0009327  loss_mask_2: 0.3009  loss_dice_2: 0.375  loss_ce_3: 0.0009208  loss_mask_3: 0.3013  loss_dice_3: 0.3751  loss_ce_4: 0.0008709  loss_mask_4: 0.3011  loss_dice_4: 0.3755    time: 0.8987  last_time: 0.8811  data_time: 0.0605  last_data_time: 0.0409   lr: 7.5343e-05  max_mem: 11485M
[05/29 18:12:55] d2.utils.events INFO:  eta: 1:47:19  iter: 2719  total_loss: 4.092  loss_ce: 0.0007706  loss_mask: 0.3008  loss_dice: 0.3747  loss_ce_0: 0.0008811  loss_mask_0: 0.3009  loss_dice_0: 0.3747  loss_ce_1: 0.0008832  loss_mask_1: 0.3002  loss_dice_1: 0.3744  loss_ce_2: 0.0009304  loss_mask_2: 0.3004  loss_dice_2: 0.3745  loss_ce_3: 0.0009245  loss_mask_3: 0.3009  loss_dice_3: 0.3748  loss_ce_4: 0.0008732  loss_mask_4: 0.3004  loss_dice_4: 0.3749    time: 0.8986  last_time: 0.9014  data_time: 0.0604  last_data_time: 0.0657   lr: 7.5157e-05  max_mem: 11485M
[05/29 18:13:13] d2.utils.events INFO:  eta: 1:46:59  iter: 2739  total_loss: 4.083  loss_ce: 0.0007689  loss_mask: 0.3001  loss_dice: 0.3742  loss_ce_0: 0.0008763  loss_mask_0: 0.3001  loss_dice_0: 0.3745  loss_ce_1: 0.0008804  loss_mask_1: 0.3001  loss_dice_1: 0.3739  loss_ce_2: 0.0009284  loss_mask_2: 0.2999  loss_dice_2: 0.3742  loss_ce_3: 0.0009209  loss_mask_3: 0.3003  loss_dice_3: 0.3745  loss_ce_4: 0.0008717  loss_mask_4: 0.2999  loss_dice_4: 0.3746    time: 0.8984  last_time: 0.8792  data_time: 0.0603  last_data_time: 0.0558   lr: 7.4972e-05  max_mem: 11485M
[05/29 18:13:31] d2.utils.events INFO:  eta: 1:46:38  iter: 2759  total_loss: 4.078  loss_ce: 0.0007646  loss_mask: 0.2998  loss_dice: 0.3738  loss_ce_0: 0.000873  loss_mask_0: 0.2998  loss_dice_0: 0.3741  loss_ce_1: 0.0008787  loss_mask_1: 0.2997  loss_dice_1: 0.3735  loss_ce_2: 0.0009263  loss_mask_2: 0.2996  loss_dice_2: 0.3738  loss_ce_3: 0.0009174  loss_mask_3: 0.2995  loss_dice_3: 0.3742  loss_ce_4: 0.0008696  loss_mask_4: 0.2997  loss_dice_4: 0.3742    time: 0.8983  last_time: 0.8836  data_time: 0.0602  last_data_time: 0.0545   lr: 7.4786e-05  max_mem: 11485M
[05/29 18:13:48] d2.utils.events INFO:  eta: 1:46:17  iter: 2779  total_loss: 4.074  loss_ce: 0.0007629  loss_mask: 0.2993  loss_dice: 0.3733  loss_ce_0: 0.0008754  loss_mask_0: 0.2993  loss_dice_0: 0.3736  loss_ce_1: 0.0008787  loss_mask_1: 0.2992  loss_dice_1: 0.3732  loss_ce_2: 0.0009256  loss_mask_2: 0.2991  loss_dice_2: 0.3733  loss_ce_3: 0.0009115  loss_mask_3: 0.299  loss_dice_3: 0.3739  loss_ce_4: 0.0008673  loss_mask_4: 0.2991  loss_dice_4: 0.3735    time: 0.8981  last_time: 0.8711  data_time: 0.0601  last_data_time: 0.0391   lr: 7.46e-05  max_mem: 11485M
[05/29 18:14:06] d2.utils.events INFO:  eta: 1:45:58  iter: 2799  total_loss: 4.065  loss_ce: 0.0007656  loss_mask: 0.2986  loss_dice: 0.3729  loss_ce_0: 0.000875  loss_mask_0: 0.2988  loss_dice_0: 0.3731  loss_ce_1: 0.0008765  loss_mask_1: 0.2987  loss_dice_1: 0.3726  loss_ce_2: 0.0009261  loss_mask_2: 0.2985  loss_dice_2: 0.3729  loss_ce_3: 0.0009069  loss_mask_3: 0.2987  loss_dice_3: 0.3735  loss_ce_4: 0.0008654  loss_mask_4: 0.2985  loss_dice_4: 0.3732    time: 0.8981  last_time: 0.8693  data_time: 0.0600  last_data_time: 0.0391   lr: 7.4414e-05  max_mem: 11485M
[05/29 18:14:24] d2.utils.events INFO:  eta: 1:45:38  iter: 2819  total_loss: 4.056  loss_ce: 0.0007628  loss_mask: 0.2982  loss_dice: 0.3726  loss_ce_0: 0.0008697  loss_mask_0: 0.2983  loss_dice_0: 0.3726  loss_ce_1: 0.0008723  loss_mask_1: 0.2983  loss_dice_1: 0.3722  loss_ce_2: 0.0009248  loss_mask_2: 0.2981  loss_dice_2: 0.3723  loss_ce_3: 0.0009019  loss_mask_3: 0.2982  loss_dice_3: 0.3727  loss_ce_4: 0.0008599  loss_mask_4: 0.2981  loss_dice_4: 0.3728    time: 0.8979  last_time: 0.9000  data_time: 0.0599  last_data_time: 0.0547   lr: 7.4228e-05  max_mem: 11485M
[05/29 18:14:42] d2.utils.events INFO:  eta: 1:45:18  iter: 2839  total_loss: 4.051  loss_ce: 0.0007608  loss_mask: 0.2978  loss_dice: 0.372  loss_ce_0: 0.0008651  loss_mask_0: 0.2976  loss_dice_0: 0.3723  loss_ce_1: 0.0008696  loss_mask_1: 0.2979  loss_dice_1: 0.3718  loss_ce_2: 0.000921  loss_mask_2: 0.2975  loss_dice_2: 0.3719  loss_ce_3: 0.0008995  loss_mask_3: 0.2978  loss_dice_3: 0.3722  loss_ce_4: 0.0008569  loss_mask_4: 0.2976  loss_dice_4: 0.372    time: 0.8980  last_time: 0.9391  data_time: 0.0599  last_data_time: 0.0862   lr: 7.4042e-05  max_mem: 11485M
[05/29 18:15:00] d2.utils.events INFO:  eta: 1:44:58  iter: 2859  total_loss: 4.046  loss_ce: 0.0007588  loss_mask: 0.2976  loss_dice: 0.3716  loss_ce_0: 0.0008695  loss_mask_0: 0.2972  loss_dice_0: 0.3714  loss_ce_1: 0.0008694  loss_mask_1: 0.2974  loss_dice_1: 0.3712  loss_ce_2: 0.0009179  loss_mask_2: 0.297  loss_dice_2: 0.3716  loss_ce_3: 0.0008971  loss_mask_3: 0.2972  loss_dice_3: 0.3717  loss_ce_4: 0.0008539  loss_mask_4: 0.297  loss_dice_4: 0.3716    time: 0.8979  last_time: 0.8837  data_time: 0.0598  last_data_time: 0.0412   lr: 7.3856e-05  max_mem: 11485M
[05/29 18:15:17] d2.utils.events INFO:  eta: 1:44:40  iter: 2879  total_loss: 4.041  loss_ce: 0.0007573  loss_mask: 0.2972  loss_dice: 0.3711  loss_ce_0: 0.0008695  loss_mask_0: 0.2968  loss_dice_0: 0.3708  loss_ce_1: 0.000869  loss_mask_1: 0.2967  loss_dice_1: 0.3709  loss_ce_2: 0.0009144  loss_mask_2: 0.2965  loss_dice_2: 0.3709  loss_ce_3: 0.0008945  loss_mask_3: 0.2966  loss_dice_3: 0.3712  loss_ce_4: 0.0008518  loss_mask_4: 0.2967  loss_dice_4: 0.371    time: 0.8977  last_time: 0.8684  data_time: 0.0597  last_data_time: 0.0410   lr: 7.3669e-05  max_mem: 11485M
[05/29 18:15:35] d2.utils.events INFO:  eta: 1:44:21  iter: 2899  total_loss: 4.036  loss_ce: 0.0007533  loss_mask: 0.2968  loss_dice: 0.3706  loss_ce_0: 0.0008629  loss_mask_0: 0.2964  loss_dice_0: 0.3704  loss_ce_1: 0.0008648  loss_mask_1: 0.2962  loss_dice_1: 0.3705  loss_ce_2: 0.0009107  loss_mask_2: 0.2962  loss_dice_2: 0.3701  loss_ce_3: 0.0008917  loss_mask_3: 0.296  loss_dice_3: 0.3705  loss_ce_4: 0.0008477  loss_mask_4: 0.2963  loss_dice_4: 0.3706    time: 0.8976  last_time: 0.8703  data_time: 0.0596  last_data_time: 0.0479   lr: 7.3483e-05  max_mem: 11485M
[05/29 18:15:52] d2.utils.events INFO:  eta: 1:44:02  iter: 2919  total_loss: 4.032  loss_ce: 0.000751  loss_mask: 0.2964  loss_dice: 0.3702  loss_ce_0: 0.0008596  loss_mask_0: 0.296  loss_dice_0: 0.37  loss_ce_1: 0.0008617  loss_mask_1: 0.2958  loss_dice_1: 0.37  loss_ce_2: 0.0009083  loss_mask_2: 0.2957  loss_dice_2: 0.3697  loss_ce_3: 0.000887  loss_mask_3: 0.2957  loss_dice_3: 0.3698  loss_ce_4: 0.000842  loss_mask_4: 0.2956  loss_dice_4: 0.3701    time: 0.8974  last_time: 0.8742  data_time: 0.0595  last_data_time: 0.0426   lr: 7.3297e-05  max_mem: 11485M
[05/29 18:16:10] d2.utils.events INFO:  eta: 1:43:44  iter: 2939  total_loss: 4.028  loss_ce: 0.0007499  loss_mask: 0.2956  loss_dice: 0.3698  loss_ce_0: 0.0008555  loss_mask_0: 0.2953  loss_dice_0: 0.3697  loss_ce_1: 0.0008602  loss_mask_1: 0.2954  loss_dice_1: 0.3694  loss_ce_2: 0.0009083  loss_mask_2: 0.2954  loss_dice_2: 0.3692  loss_ce_3: 0.0008848  loss_mask_3: 0.2953  loss_dice_3: 0.3693  loss_ce_4: 0.0008409  loss_mask_4: 0.295  loss_dice_4: 0.3695    time: 0.8973  last_time: 0.8821  data_time: 0.0594  last_data_time: 0.0431   lr: 7.311e-05  max_mem: 11485M
[05/29 18:16:28] d2.utils.events INFO:  eta: 1:43:25  iter: 2959  total_loss: 4.025  loss_ce: 0.0007496  loss_mask: 0.2951  loss_dice: 0.3692  loss_ce_0: 0.0008518  loss_mask_0: 0.2948  loss_dice_0: 0.3692  loss_ce_1: 0.0008587  loss_mask_1: 0.295  loss_dice_1: 0.3691  loss_ce_2: 0.0009075  loss_mask_2: 0.2948  loss_dice_2: 0.3687  loss_ce_3: 0.000884  loss_mask_3: 0.2947  loss_dice_3: 0.369  loss_ce_4: 0.0008389  loss_mask_4: 0.2948  loss_dice_4: 0.369    time: 0.8972  last_time: 0.8946  data_time: 0.0593  last_data_time: 0.0541   lr: 7.2924e-05  max_mem: 11485M
[05/29 18:16:45] d2.utils.events INFO:  eta: 1:43:05  iter: 2979  total_loss: 4.021  loss_ce: 0.0007503  loss_mask: 0.2946  loss_dice: 0.3686  loss_ce_0: 0.0008476  loss_mask_0: 0.2944  loss_dice_0: 0.3684  loss_ce_1: 0.0008567  loss_mask_1: 0.2944  loss_dice_1: 0.3685  loss_ce_2: 0.000906  loss_mask_2: 0.2942  loss_dice_2: 0.3683  loss_ce_3: 0.0008848  loss_mask_3: 0.2944  loss_dice_3: 0.3683  loss_ce_4: 0.0008377  loss_mask_4: 0.2945  loss_dice_4: 0.3684    time: 0.8970  last_time: 0.8636  data_time: 0.0592  last_data_time: 0.0382   lr: 7.2738e-05  max_mem: 11485M
[05/29 18:17:03] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/climatenet_v2/model_0002999.pth
[05/29 18:17:04] d2.utils.events INFO:  eta: 1:42:46  iter: 2999  total_loss: 4.017  loss_ce: 0.000751  loss_mask: 0.294  loss_dice: 0.3682  loss_ce_0: 0.0008449  loss_mask_0: 0.294  loss_dice_0: 0.3678  loss_ce_1: 0.0008574  loss_mask_1: 0.2939  loss_dice_1: 0.368  loss_ce_2: 0.000908  loss_mask_2: 0.2936  loss_dice_2: 0.3677  loss_ce_3: 0.0008848  loss_mask_3: 0.2941  loss_dice_3: 0.3678  loss_ce_4: 0.0008332  loss_mask_4: 0.2939  loss_dice_4: 0.3677    time: 0.8969  last_time: 0.8964  data_time: 0.0591  last_data_time: 0.0556   lr: 7.2551e-05  max_mem: 11485M
[05/29 18:17:21] d2.utils.events INFO:  eta: 1:42:26  iter: 3019  total_loss: 4.01  loss_ce: 0.0007503  loss_mask: 0.2936  loss_dice: 0.3678  loss_ce_0: 0.0008492  loss_mask_0: 0.2936  loss_dice_0: 0.3672  loss_ce_1: 0.0008572  loss_mask_1: 0.2935  loss_dice_1: 0.3677  loss_ce_2: 0.000908  loss_mask_2: 0.2933  loss_dice_2: 0.3675  loss_ce_3: 0.0008848  loss_mask_3: 0.2939  loss_dice_3: 0.3675  loss_ce_4: 0.000832  loss_mask_4: 0.2933  loss_dice_4: 0.3673    time: 0.8968  last_time: 0.8759  data_time: 0.0590  last_data_time: 0.0394   lr: 7.2365e-05  max_mem: 11485M
[05/29 18:17:39] d2.utils.events INFO:  eta: 1:42:07  iter: 3039  total_loss: 4.002  loss_ce: 0.0007479  loss_mask: 0.2932  loss_dice: 0.3673  loss_ce_0: 0.0008447  loss_mask_0: 0.2933  loss_dice_0: 0.3668  loss_ce_1: 0.0008549  loss_mask_1: 0.2934  loss_dice_1: 0.367  loss_ce_2: 0.0009055  loss_mask_2: 0.2931  loss_dice_2: 0.367  loss_ce_3: 0.0008818  loss_mask_3: 0.2936  loss_dice_3: 0.3667  loss_ce_4: 0.0008298  loss_mask_4: 0.2931  loss_dice_4: 0.3669    time: 0.8966  last_time: 0.8847  data_time: 0.0589  last_data_time: 0.0483   lr: 7.2178e-05  max_mem: 11485M
[05/29 18:17:56] d2.utils.events INFO:  eta: 1:41:45  iter: 3059  total_loss: 3.996  loss_ce: 0.0007456  loss_mask: 0.2929  loss_dice: 0.3668  loss_ce_0: 0.0008428  loss_mask_0: 0.2929  loss_dice_0: 0.3663  loss_ce_1: 0.0008527  loss_mask_1: 0.2931  loss_dice_1: 0.3667  loss_ce_2: 0.0009031  loss_mask_2: 0.2928  loss_dice_2: 0.3662  loss_ce_3: 0.0008778  loss_mask_3: 0.2933  loss_dice_3: 0.3665  loss_ce_4: 0.0008281  loss_mask_4: 0.2929  loss_dice_4: 0.3664    time: 0.8965  last_time: 0.8786  data_time: 0.0588  last_data_time: 0.0469   lr: 7.1991e-05  max_mem: 11485M
[05/29 18:18:14] d2.utils.events INFO:  eta: 1:41:25  iter: 3079  total_loss: 3.99  loss_ce: 0.0007439  loss_mask: 0.2925  loss_dice: 0.366  loss_ce_0: 0.0008417  loss_mask_0: 0.2925  loss_dice_0: 0.3658  loss_ce_1: 0.0008502  loss_mask_1: 0.2927  loss_dice_1: 0.3661  loss_ce_2: 0.0009015  loss_mask_2: 0.2923  loss_dice_2: 0.3657  loss_ce_3: 0.0008751  loss_mask_3: 0.2931  loss_dice_3: 0.3658  loss_ce_4: 0.0008256  loss_mask_4: 0.2924  loss_dice_4: 0.3661    time: 0.8965  last_time: 0.8852  data_time: 0.0588  last_data_time: 0.0526   lr: 7.1805e-05  max_mem: 11485M
[05/29 18:18:32] d2.utils.events INFO:  eta: 1:41:05  iter: 3099  total_loss: 3.986  loss_ce: 0.0007456  loss_mask: 0.292  loss_dice: 0.3656  loss_ce_0: 0.0008447  loss_mask_0: 0.292  loss_dice_0: 0.3653  loss_ce_1: 0.0008483  loss_mask_1: 0.2921  loss_dice_1: 0.3653  loss_ce_2: 0.0008992  loss_mask_2: 0.292  loss_dice_2: 0.3653  loss_ce_3: 0.0008746  loss_mask_3: 0.2923  loss_dice_3: 0.3654  loss_ce_4: 0.0008249  loss_mask_4: 0.2921  loss_dice_4: 0.3656    time: 0.8964  last_time: 0.8644  data_time: 0.0588  last_data_time: 0.0415   lr: 7.1618e-05  max_mem: 11485M
[05/29 18:18:50] d2.utils.events INFO:  eta: 1:40:47  iter: 3119  total_loss: 3.981  loss_ce: 0.000744  loss_mask: 0.2915  loss_dice: 0.3652  loss_ce_0: 0.0008421  loss_mask_0: 0.2917  loss_dice_0: 0.3649  loss_ce_1: 0.0008457  loss_mask_1: 0.2915  loss_dice_1: 0.3649  loss_ce_2: 0.0008956  loss_mask_2: 0.2913  loss_dice_2: 0.3648  loss_ce_3: 0.0008734  loss_mask_3: 0.292  loss_dice_3: 0.365  loss_ce_4: 0.0008228  loss_mask_4: 0.2916  loss_dice_4: 0.3653    time: 0.8964  last_time: 0.9021  data_time: 0.0588  last_data_time: 0.0674   lr: 7.1431e-05  max_mem: 11485M
[05/29 18:19:09] d2.utils.events INFO:  eta: 1:40:29  iter: 3139  total_loss: 3.977  loss_ce: 0.0007414  loss_mask: 0.2911  loss_dice: 0.3649  loss_ce_0: 0.0008382  loss_mask_0: 0.2912  loss_dice_0: 0.3643  loss_ce_1: 0.0008456  loss_mask_1: 0.291  loss_dice_1: 0.3644  loss_ce_2: 0.0008929  loss_mask_2: 0.2909  loss_dice_2: 0.3645  loss_ce_3: 0.0008705  loss_mask_3: 0.2915  loss_dice_3: 0.3644  loss_ce_4: 0.00082  loss_mask_4: 0.2913  loss_dice_4: 0.3647    time: 0.8966  last_time: 0.9168  data_time: 0.0589  last_data_time: 0.0553   lr: 7.1244e-05  max_mem: 11485M
[05/29 18:19:27] d2.utils.events INFO:  eta: 1:40:15  iter: 3159  total_loss: 3.97  loss_ce: 0.0007391  loss_mask: 0.2904  loss_dice: 0.3645  loss_ce_0: 0.0008352  loss_mask_0: 0.2907  loss_dice_0: 0.3638  loss_ce_1: 0.0008453  loss_mask_1: 0.2904  loss_dice_1: 0.364  loss_ce_2: 0.00089  loss_mask_2: 0.2905  loss_dice_2: 0.3641  loss_ce_3: 0.0008692  loss_mask_3: 0.291  loss_dice_3: 0.3639  loss_ce_4: 0.0008166  loss_mask_4: 0.291  loss_dice_4: 0.3645    time: 0.8967  last_time: 0.9109  data_time: 0.0590  last_data_time: 0.0914   lr: 7.1057e-05  max_mem: 11485M
[05/29 18:19:45] d2.utils.events INFO:  eta: 1:39:59  iter: 3179  total_loss: 3.965  loss_ce: 0.0007369  loss_mask: 0.2902  loss_dice: 0.3636  loss_ce_0: 0.0008307  loss_mask_0: 0.2902  loss_dice_0: 0.3635  loss_ce_1: 0.0008435  loss_mask_1: 0.2897  loss_dice_1: 0.3634  loss_ce_2: 0.0008865  loss_mask_2: 0.2901  loss_dice_2: 0.3636  loss_ce_3: 0.0008644  loss_mask_3: 0.2904  loss_dice_3: 0.3637  loss_ce_4: 0.0008139  loss_mask_4: 0.2905  loss_dice_4: 0.3641    time: 0.8967  last_time: 0.9093  data_time: 0.0591  last_data_time: 0.0695   lr: 7.087e-05  max_mem: 11485M
[05/29 18:20:04] d2.utils.events INFO:  eta: 1:39:43  iter: 3199  total_loss: 3.956  loss_ce: 0.0007338  loss_mask: 0.2899  loss_dice: 0.363  loss_ce_0: 0.0008277  loss_mask_0: 0.2897  loss_dice_0: 0.3631  loss_ce_1: 0.0008413  loss_mask_1: 0.2893  loss_dice_1: 0.3632  loss_ce_2: 0.0008854  loss_mask_2: 0.2897  loss_dice_2: 0.3629  loss_ce_3: 0.0008629  loss_mask_3: 0.29  loss_dice_3: 0.3631  loss_ce_4: 0.0008113  loss_mask_4: 0.2899  loss_dice_4: 0.3636    time: 0.8969  last_time: 0.9421  data_time: 0.0592  last_data_time: 0.0926   lr: 7.0683e-05  max_mem: 11485M
[05/29 18:20:22] d2.utils.events INFO:  eta: 1:39:25  iter: 3219  total_loss: 3.953  loss_ce: 0.0007301  loss_mask: 0.2895  loss_dice: 0.3627  loss_ce_0: 0.000826  loss_mask_0: 0.2894  loss_dice_0: 0.3625  loss_ce_1: 0.000839  loss_mask_1: 0.2889  loss_dice_1: 0.3628  loss_ce_2: 0.0008824  loss_mask_2: 0.2892  loss_dice_2: 0.3625  loss_ce_3: 0.0008608  loss_mask_3: 0.2896  loss_dice_3: 0.3627  loss_ce_4: 0.0008081  loss_mask_4: 0.2894  loss_dice_4: 0.3631    time: 0.8968  last_time: 0.8720  data_time: 0.0592  last_data_time: 0.0404   lr: 7.0496e-05  max_mem: 11485M
[05/29 18:20:39] d2.utils.events INFO:  eta: 1:39:04  iter: 3239  total_loss: 3.949  loss_ce: 0.0007284  loss_mask: 0.289  loss_dice: 0.3621  loss_ce_0: 0.0008233  loss_mask_0: 0.2889  loss_dice_0: 0.3619  loss_ce_1: 0.0008372  loss_mask_1: 0.2886  loss_dice_1: 0.3623  loss_ce_2: 0.0008801  loss_mask_2: 0.2888  loss_dice_2: 0.3621  loss_ce_3: 0.0008576  loss_mask_3: 0.289  loss_dice_3: 0.3623  loss_ce_4: 0.000804  loss_mask_4: 0.2889  loss_dice_4: 0.3625    time: 0.8967  last_time: 0.8863  data_time: 0.0591  last_data_time: 0.0494   lr: 7.0309e-05  max_mem: 11485M
[05/29 18:20:57] d2.utils.events INFO:  eta: 1:38:48  iter: 3259  total_loss: 3.944  loss_ce: 0.0007259  loss_mask: 0.2884  loss_dice: 0.3616  loss_ce_0: 0.0008206  loss_mask_0: 0.2883  loss_dice_0: 0.3616  loss_ce_1: 0.0008336  loss_mask_1: 0.288  loss_dice_1: 0.362  loss_ce_2: 0.0008771  loss_mask_2: 0.2884  loss_dice_2: 0.3616  loss_ce_3: 0.0008554  loss_mask_3: 0.2884  loss_dice_3: 0.3619  loss_ce_4: 0.0008006  loss_mask_4: 0.2881  loss_dice_4: 0.362    time: 0.8967  last_time: 0.8944  data_time: 0.0591  last_data_time: 0.0563   lr: 7.0122e-05  max_mem: 11485M
[05/29 18:21:15] d2.utils.events INFO:  eta: 1:38:31  iter: 3279  total_loss: 3.938  loss_ce: 0.0007271  loss_mask: 0.2878  loss_dice: 0.3613  loss_ce_0: 0.0008198  loss_mask_0: 0.288  loss_dice_0: 0.3613  loss_ce_1: 0.0008324  loss_mask_1: 0.2875  loss_dice_1: 0.3615  loss_ce_2: 0.0008738  loss_mask_2: 0.2877  loss_dice_2: 0.3613  loss_ce_3: 0.0008545  loss_mask_3: 0.288  loss_dice_3: 0.3614  loss_ce_4: 0.0007988  loss_mask_4: 0.2877  loss_dice_4: 0.3617    time: 0.8967  last_time: 0.8770  data_time: 0.0591  last_data_time: 0.0396   lr: 6.9934e-05  max_mem: 11485M
[05/29 18:21:33] d2.utils.events INFO:  eta: 1:38:14  iter: 3299  total_loss: 3.933  loss_ce: 0.000726  loss_mask: 0.2873  loss_dice: 0.3609  loss_ce_0: 0.0008175  loss_mask_0: 0.2873  loss_dice_0: 0.3608  loss_ce_1: 0.0008301  loss_mask_1: 0.2869  loss_dice_1: 0.361  loss_ce_2: 0.0008674  loss_mask_2: 0.2872  loss_dice_2: 0.361  loss_ce_3: 0.000852  loss_mask_3: 0.2874  loss_dice_3: 0.3608  loss_ce_4: 0.0007956  loss_mask_4: 0.2874  loss_dice_4: 0.3613    time: 0.8966  last_time: 0.8957  data_time: 0.0590  last_data_time: 0.0675   lr: 6.9747e-05  max_mem: 11485M
[05/29 18:21:51] d2.utils.events INFO:  eta: 1:38:00  iter: 3319  total_loss: 3.925  loss_ce: 0.0007243  loss_mask: 0.2869  loss_dice: 0.3604  loss_ce_0: 0.0008146  loss_mask_0: 0.287  loss_dice_0: 0.3602  loss_ce_1: 0.0008278  loss_mask_1: 0.2865  loss_dice_1: 0.3605  loss_ce_2: 0.0008649  loss_mask_2: 0.2869  loss_dice_2: 0.3606  loss_ce_3: 0.0008493  loss_mask_3: 0.2868  loss_dice_3: 0.3604  loss_ce_4: 0.0007943  loss_mask_4: 0.2867  loss_dice_4: 0.361    time: 0.8967  last_time: 0.9019  data_time: 0.0591  last_data_time: 0.0551   lr: 6.956e-05  max_mem: 11485M
[05/29 18:22:09] d2.utils.events INFO:  eta: 1:37:44  iter: 3339  total_loss: 3.92  loss_ce: 0.0007235  loss_mask: 0.2865  loss_dice: 0.36  loss_ce_0: 0.0008107  loss_mask_0: 0.2862  loss_dice_0: 0.36  loss_ce_1: 0.0008249  loss_mask_1: 0.2862  loss_dice_1: 0.3603  loss_ce_2: 0.0008622  loss_mask_2: 0.2865  loss_dice_2: 0.3602  loss_ce_3: 0.0008485  loss_mask_3: 0.2864  loss_dice_3: 0.3602  loss_ce_4: 0.0007924  loss_mask_4: 0.2861  loss_dice_4: 0.3606    time: 0.8966  last_time: 0.8739  data_time: 0.0590  last_data_time: 0.0421   lr: 6.9372e-05  max_mem: 11485M
[05/29 18:22:27] d2.utils.events INFO:  eta: 1:37:24  iter: 3359  total_loss: 3.913  loss_ce: 0.000719  loss_mask: 0.2859  loss_dice: 0.3597  loss_ce_0: 0.0008066  loss_mask_0: 0.2856  loss_dice_0: 0.3598  loss_ce_1: 0.0008222  loss_mask_1: 0.2857  loss_dice_1: 0.3598  loss_ce_2: 0.0008598  loss_mask_2: 0.286  loss_dice_2: 0.36  loss_ce_3: 0.0008458  loss_mask_3: 0.2857  loss_dice_3: 0.3598  loss_ce_4: 0.0007899  loss_mask_4: 0.2856  loss_dice_4: 0.3601    time: 0.8965  last_time: 0.8863  data_time: 0.0589  last_data_time: 0.0515   lr: 6.9185e-05  max_mem: 11485M
[05/29 18:22:44] d2.utils.events INFO:  eta: 1:37:06  iter: 3379  total_loss: 3.906  loss_ce: 0.0007174  loss_mask: 0.2853  loss_dice: 0.3594  loss_ce_0: 0.0008047  loss_mask_0: 0.2852  loss_dice_0: 0.3595  loss_ce_1: 0.0008215  loss_mask_1: 0.2853  loss_dice_1: 0.3594  loss_ce_2: 0.0008589  loss_mask_2: 0.2853  loss_dice_2: 0.3595  loss_ce_3: 0.0008432  loss_mask_3: 0.285  loss_dice_3: 0.3596  loss_ce_4: 0.000787  loss_mask_4: 0.2851  loss_dice_4: 0.3597    time: 0.8964  last_time: 0.9365  data_time: 0.0589  last_data_time: 0.0882   lr: 6.8997e-05  max_mem: 11485M
[05/29 18:23:02] d2.utils.events INFO:  eta: 1:36:47  iter: 3399  total_loss: 3.903  loss_ce: 0.0007154  loss_mask: 0.2847  loss_dice: 0.3589  loss_ce_0: 0.0008032  loss_mask_0: 0.2849  loss_dice_0: 0.359  loss_ce_1: 0.0008194  loss_mask_1: 0.2848  loss_dice_1: 0.3591  loss_ce_2: 0.0008556  loss_mask_2: 0.2849  loss_dice_2: 0.3591  loss_ce_3: 0.0008408  loss_mask_3: 0.2845  loss_dice_3: 0.3593  loss_ce_4: 0.0007835  loss_mask_4: 0.2847  loss_dice_4: 0.3595    time: 0.8962  last_time: 0.8735  data_time: 0.0588  last_data_time: 0.0448   lr: 6.881e-05  max_mem: 11485M
[05/29 18:23:19] d2.utils.events INFO:  eta: 1:36:27  iter: 3419  total_loss: 3.9  loss_ce: 0.000714  loss_mask: 0.2843  loss_dice: 0.3587  loss_ce_0: 0.0008005  loss_mask_0: 0.2844  loss_dice_0: 0.3586  loss_ce_1: 0.0008175  loss_mask_1: 0.2843  loss_dice_1: 0.3586  loss_ce_2: 0.0008538  loss_mask_2: 0.2841  loss_dice_2: 0.3581  loss_ce_3: 0.000839  loss_mask_3: 0.2841  loss_dice_3: 0.3588  loss_ce_4: 0.0007821  loss_mask_4: 0.2842  loss_dice_4: 0.3588    time: 0.8961  last_time: 0.8736  data_time: 0.0587  last_data_time: 0.0395   lr: 6.8622e-05  max_mem: 11485M
[05/29 18:23:37] d2.utils.events INFO:  eta: 1:36:07  iter: 3439  total_loss: 3.896  loss_ce: 0.000713  loss_mask: 0.284  loss_dice: 0.3579  loss_ce_0: 0.0007985  loss_mask_0: 0.2837  loss_dice_0: 0.3581  loss_ce_1: 0.0008159  loss_mask_1: 0.2838  loss_dice_1: 0.3581  loss_ce_2: 0.0008514  loss_mask_2: 0.2836  loss_dice_2: 0.3579  loss_ce_3: 0.0008389  loss_mask_3: 0.2833  loss_dice_3: 0.3582  loss_ce_4: 0.0007799  loss_mask_4: 0.2838  loss_dice_4: 0.3585    time: 0.8959  last_time: 0.8667  data_time: 0.0586  last_data_time: 0.0387   lr: 6.8434e-05  max_mem: 11485M
[05/29 18:23:55] d2.utils.events INFO:  eta: 1:35:49  iter: 3459  total_loss: 3.891  loss_ce: 0.0007108  loss_mask: 0.2834  loss_dice: 0.3576  loss_ce_0: 0.0007967  loss_mask_0: 0.2834  loss_dice_0: 0.3576  loss_ce_1: 0.0008146  loss_mask_1: 0.2835  loss_dice_1: 0.3578  loss_ce_2: 0.0008511  loss_mask_2: 0.2832  loss_dice_2: 0.3576  loss_ce_3: 0.0008369  loss_mask_3: 0.2829  loss_dice_3: 0.3578  loss_ce_4: 0.0007786  loss_mask_4: 0.2832  loss_dice_4: 0.3578    time: 0.8959  last_time: 0.8787  data_time: 0.0585  last_data_time: 0.0544   lr: 6.8246e-05  max_mem: 11485M
[05/29 18:24:12] d2.utils.events INFO:  eta: 1:35:32  iter: 3479  total_loss: 3.885  loss_ce: 0.0007079  loss_mask: 0.2827  loss_dice: 0.3571  loss_ce_0: 0.0007948  loss_mask_0: 0.283  loss_dice_0: 0.3571  loss_ce_1: 0.0008132  loss_mask_1: 0.2827  loss_dice_1: 0.3573  loss_ce_2: 0.0008492  loss_mask_2: 0.2828  loss_dice_2: 0.3573  loss_ce_3: 0.0008357  loss_mask_3: 0.2826  loss_dice_3: 0.3573  loss_ce_4: 0.0007765  loss_mask_4: 0.2827  loss_dice_4: 0.3573    time: 0.8957  last_time: 0.8656  data_time: 0.0584  last_data_time: 0.0387   lr: 6.8059e-05  max_mem: 11485M
[05/29 18:24:30] d2.utils.events INFO:  eta: 1:35:13  iter: 3499  total_loss: 3.882  loss_ce: 0.0007065  loss_mask: 0.2821  loss_dice: 0.3568  loss_ce_0: 0.0007928  loss_mask_0: 0.2822  loss_dice_0: 0.3569  loss_ce_1: 0.0008111  loss_mask_1: 0.2822  loss_dice_1: 0.357  loss_ce_2: 0.0008481  loss_mask_2: 0.2823  loss_dice_2: 0.3567  loss_ce_3: 0.0008337  loss_mask_3: 0.282  loss_dice_3: 0.3566  loss_ce_4: 0.0007743  loss_mask_4: 0.2823  loss_dice_4: 0.3567    time: 0.8956  last_time: 0.8776  data_time: 0.0584  last_data_time: 0.0399   lr: 6.7871e-05  max_mem: 11485M
[05/29 18:24:47] d2.utils.events INFO:  eta: 1:34:56  iter: 3519  total_loss: 3.873  loss_ce: 0.0007045  loss_mask: 0.2816  loss_dice: 0.3564  loss_ce_0: 0.0007905  loss_mask_0: 0.2818  loss_dice_0: 0.3564  loss_ce_1: 0.0008086  loss_mask_1: 0.2818  loss_dice_1: 0.3564  loss_ce_2: 0.0008466  loss_mask_2: 0.2819  loss_dice_2: 0.3562  loss_ce_3: 0.0008295  loss_mask_3: 0.2815  loss_dice_3: 0.3561  loss_ce_4: 0.0007713  loss_mask_4: 0.2819  loss_dice_4: 0.3564    time: 0.8955  last_time: 0.8918  data_time: 0.0583  last_data_time: 0.0510   lr: 6.7683e-05  max_mem: 11485M
[05/29 18:25:05] d2.utils.events INFO:  eta: 1:34:39  iter: 3539  total_loss: 3.868  loss_ce: 0.0007016  loss_mask: 0.2808  loss_dice: 0.356  loss_ce_0: 0.0007893  loss_mask_0: 0.2813  loss_dice_0: 0.3559  loss_ce_1: 0.000806  loss_mask_1: 0.2815  loss_dice_1: 0.3561  loss_ce_2: 0.0008433  loss_mask_2: 0.2813  loss_dice_2: 0.3559  loss_ce_3: 0.0008268  loss_mask_3: 0.2809  loss_dice_3: 0.3559  loss_ce_4: 0.0007692  loss_mask_4: 0.2815  loss_dice_4: 0.3559    time: 0.8954  last_time: 0.8714  data_time: 0.0582  last_data_time: 0.0459   lr: 6.7495e-05  max_mem: 11485M
[05/29 18:25:23] d2.utils.events INFO:  eta: 1:34:20  iter: 3559  total_loss: 3.862  loss_ce: 0.0006987  loss_mask: 0.2805  loss_dice: 0.3557  loss_ce_0: 0.0007847  loss_mask_0: 0.2808  loss_dice_0: 0.3556  loss_ce_1: 0.0008028  loss_mask_1: 0.281  loss_dice_1: 0.3555  loss_ce_2: 0.0008409  loss_mask_2: 0.2809  loss_dice_2: 0.3554  loss_ce_3: 0.0008243  loss_mask_3: 0.2803  loss_dice_3: 0.3549  loss_ce_4: 0.0007662  loss_mask_4: 0.2809  loss_dice_4: 0.3556    time: 0.8953  last_time: 0.8681  data_time: 0.0581  last_data_time: 0.0372   lr: 6.7307e-05  max_mem: 11485M
[05/29 18:25:40] d2.utils.events INFO:  eta: 1:34:02  iter: 3579  total_loss: 3.855  loss_ce: 0.0006981  loss_mask: 0.28  loss_dice: 0.3554  loss_ce_0: 0.0007836  loss_mask_0: 0.2805  loss_dice_0: 0.355  loss_ce_1: 0.0008007  loss_mask_1: 0.2804  loss_dice_1: 0.3552  loss_ce_2: 0.0008368  loss_mask_2: 0.2805  loss_dice_2: 0.3547  loss_ce_3: 0.0008219  loss_mask_3: 0.2798  loss_dice_3: 0.3546  loss_ce_4: 0.0007645  loss_mask_4: 0.2806  loss_dice_4: 0.3551    time: 0.8952  last_time: 0.8831  data_time: 0.0580  last_data_time: 0.0476   lr: 6.7119e-05  max_mem: 11485M
[05/29 18:25:58] d2.utils.events INFO:  eta: 1:33:46  iter: 3599  total_loss: 3.849  loss_ce: 0.0006956  loss_mask: 0.2796  loss_dice: 0.3547  loss_ce_0: 0.0007817  loss_mask_0: 0.2796  loss_dice_0: 0.3546  loss_ce_1: 0.0008  loss_mask_1: 0.2798  loss_dice_1: 0.3546  loss_ce_2: 0.000835  loss_mask_2: 0.28  loss_dice_2: 0.3542  loss_ce_3: 0.00082  loss_mask_3: 0.2791  loss_dice_3: 0.354  loss_ce_4: 0.0007625  loss_mask_4: 0.2802  loss_dice_4: 0.3546    time: 0.8953  last_time: 0.9152  data_time: 0.0581  last_data_time: 0.0801   lr: 6.693e-05  max_mem: 11485M
[05/29 18:26:16] d2.utils.events INFO:  eta: 1:33:28  iter: 3619  total_loss: 3.843  loss_ce: 0.0006927  loss_mask: 0.2792  loss_dice: 0.3542  loss_ce_0: 0.0007778  loss_mask_0: 0.2792  loss_dice_0: 0.3541  loss_ce_1: 0.0007988  loss_mask_1: 0.2794  loss_dice_1: 0.3543  loss_ce_2: 0.0008323  loss_mask_2: 0.2795  loss_dice_2: 0.3537  loss_ce_3: 0.0008188  loss_mask_3: 0.2788  loss_dice_3: 0.3536  loss_ce_4: 0.0007616  loss_mask_4: 0.2798  loss_dice_4: 0.3541    time: 0.8952  last_time: 0.8593  data_time: 0.0580  last_data_time: 0.0373   lr: 6.6742e-05  max_mem: 11485M
[05/29 18:26:34] d2.utils.events INFO:  eta: 1:33:11  iter: 3639  total_loss: 3.832  loss_ce: 0.00069  loss_mask: 0.2786  loss_dice: 0.3537  loss_ce_0: 0.0007741  loss_mask_0: 0.2785  loss_dice_0: 0.3535  loss_ce_1: 0.0007967  loss_mask_1: 0.2788  loss_dice_1: 0.354  loss_ce_2: 0.0008287  loss_mask_2: 0.2788  loss_dice_2: 0.3533  loss_ce_3: 0.0008164  loss_mask_3: 0.2783  loss_dice_3: 0.3533  loss_ce_4: 0.0007572  loss_mask_4: 0.279  loss_dice_4: 0.3537    time: 0.8950  last_time: 0.8634  data_time: 0.0579  last_data_time: 0.0410   lr: 6.6554e-05  max_mem: 11485M
[05/29 18:26:52] d2.utils.events INFO:  eta: 1:32:52  iter: 3659  total_loss: 3.828  loss_ce: 0.0006871  loss_mask: 0.2782  loss_dice: 0.3535  loss_ce_0: 0.0007719  loss_mask_0: 0.2782  loss_dice_0: 0.3532  loss_ce_1: 0.0007944  loss_mask_1: 0.2784  loss_dice_1: 0.3534  loss_ce_2: 0.0008247  loss_mask_2: 0.2779  loss_dice_2: 0.353  loss_ce_3: 0.0008111  loss_mask_3: 0.2779  loss_dice_3: 0.353  loss_ce_4: 0.000754  loss_mask_4: 0.2785  loss_dice_4: 0.3534    time: 0.8950  last_time: 0.9323  data_time: 0.0579  last_data_time: 0.0805   lr: 6.6365e-05  max_mem: 11485M
[05/29 18:27:10] d2.utils.events INFO:  eta: 1:32:37  iter: 3679  total_loss: 3.823  loss_ce: 0.0006863  loss_mask: 0.2777  loss_dice: 0.3526  loss_ce_0: 0.0007728  loss_mask_0: 0.2777  loss_dice_0: 0.3528  loss_ce_1: 0.0007929  loss_mask_1: 0.2775  loss_dice_1: 0.353  loss_ce_2: 0.0008219  loss_mask_2: 0.2776  loss_dice_2: 0.3526  loss_ce_3: 0.0008095  loss_mask_3: 0.2774  loss_dice_3: 0.3525  loss_ce_4: 0.0007531  loss_mask_4: 0.2779  loss_dice_4: 0.353    time: 0.8952  last_time: 0.9626  data_time: 0.0580  last_data_time: 0.1060   lr: 6.6177e-05  max_mem: 11485M
[05/29 18:27:29] d2.utils.events INFO:  eta: 1:32:21  iter: 3699  total_loss: 3.82  loss_ce: 0.0006852  loss_mask: 0.2772  loss_dice: 0.352  loss_ce_0: 0.0007709  loss_mask_0: 0.2771  loss_dice_0: 0.3524  loss_ce_1: 0.0007916  loss_mask_1: 0.277  loss_dice_1: 0.3525  loss_ce_2: 0.0008188  loss_mask_2: 0.2771  loss_dice_2: 0.3521  loss_ce_3: 0.0008074  loss_mask_3: 0.2766  loss_dice_3: 0.3521  loss_ce_4: 0.0007511  loss_mask_4: 0.2773  loss_dice_4: 0.3524    time: 0.8953  last_time: 0.9474  data_time: 0.0581  last_data_time: 0.0851   lr: 6.5989e-05  max_mem: 11485M
[05/29 18:27:47] d2.utils.events INFO:  eta: 1:32:06  iter: 3719  total_loss: 3.816  loss_ce: 0.0006841  loss_mask: 0.2767  loss_dice: 0.3519  loss_ce_0: 0.0007685  loss_mask_0: 0.2767  loss_dice_0: 0.3516  loss_ce_1: 0.0007899  loss_mask_1: 0.2766  loss_dice_1: 0.3519  loss_ce_2: 0.000816  loss_mask_2: 0.2766  loss_dice_2: 0.3518  loss_ce_3: 0.0008048  loss_mask_3: 0.2763  loss_dice_3: 0.3518  loss_ce_4: 0.0007489  loss_mask_4: 0.2767  loss_dice_4: 0.352    time: 0.8955  last_time: 0.9085  data_time: 0.0582  last_data_time: 0.0701   lr: 6.58e-05  max_mem: 11485M
[05/29 18:28:06] d2.utils.events INFO:  eta: 1:31:52  iter: 3739  total_loss: 3.809  loss_ce: 0.000682  loss_mask: 0.2764  loss_dice: 0.3513  loss_ce_0: 0.0007665  loss_mask_0: 0.2762  loss_dice_0: 0.3514  loss_ce_1: 0.0007871  loss_mask_1: 0.2761  loss_dice_1: 0.3516  loss_ce_2: 0.0008118  loss_mask_2: 0.2759  loss_dice_2: 0.3514  loss_ce_3: 0.0008018  loss_mask_3: 0.2757  loss_dice_3: 0.3513  loss_ce_4: 0.0007474  loss_mask_4: 0.2759  loss_dice_4: 0.3514    time: 0.8956  last_time: 0.9278  data_time: 0.0583  last_data_time: 0.0914   lr: 6.5611e-05  max_mem: 11485M
[05/29 18:28:25] d2.utils.events INFO:  eta: 1:31:37  iter: 3759  total_loss: 3.802  loss_ce: 0.0006798  loss_mask: 0.2761  loss_dice: 0.3509  loss_ce_0: 0.000765  loss_mask_0: 0.2757  loss_dice_0: 0.3511  loss_ce_1: 0.0007858  loss_mask_1: 0.2757  loss_dice_1: 0.3509  loss_ce_2: 0.0008098  loss_mask_2: 0.2754  loss_dice_2: 0.351  loss_ce_3: 0.0007997  loss_mask_3: 0.2752  loss_dice_3: 0.3509  loss_ce_4: 0.0007463  loss_mask_4: 0.2755  loss_dice_4: 0.3511    time: 0.8958  last_time: 0.9716  data_time: 0.0584  last_data_time: 0.1114   lr: 6.5423e-05  max_mem: 11485M
[05/29 18:28:43] d2.utils.events INFO:  eta: 1:31:24  iter: 3779  total_loss: 3.798  loss_ce: 0.0006765  loss_mask: 0.2752  loss_dice: 0.3504  loss_ce_0: 0.0007624  loss_mask_0: 0.2753  loss_dice_0: 0.3506  loss_ce_1: 0.0007839  loss_mask_1: 0.275  loss_dice_1: 0.3503  loss_ce_2: 0.0008081  loss_mask_2: 0.2748  loss_dice_2: 0.3506  loss_ce_3: 0.0007973  loss_mask_3: 0.2748  loss_dice_3: 0.3504  loss_ce_4: 0.0007444  loss_mask_4: 0.2747  loss_dice_4: 0.3503    time: 0.8960  last_time: 0.9282  data_time: 0.0586  last_data_time: 0.0773   lr: 6.5234e-05  max_mem: 11485M
[05/29 18:29:02] d2.utils.events INFO:  eta: 1:31:10  iter: 3799  total_loss: 3.793  loss_ce: 0.0006726  loss_mask: 0.2748  loss_dice: 0.3501  loss_ce_0: 0.0007603  loss_mask_0: 0.2746  loss_dice_0: 0.3501  loss_ce_1: 0.0007815  loss_mask_1: 0.2746  loss_dice_1: 0.3499  loss_ce_2: 0.0008043  loss_mask_2: 0.2743  loss_dice_2: 0.3502  loss_ce_3: 0.0007946  loss_mask_3: 0.2743  loss_dice_3: 0.3501  loss_ce_4: 0.0007412  loss_mask_4: 0.2743  loss_dice_4: 0.35    time: 0.8962  last_time: 0.9123  data_time: 0.0587  last_data_time: 0.0543   lr: 6.5045e-05  max_mem: 11485M
[05/29 18:29:21] d2.utils.events INFO:  eta: 1:30:57  iter: 3819  total_loss: 3.79  loss_ce: 0.0006713  loss_mask: 0.2743  loss_dice: 0.3497  loss_ce_0: 0.0007569  loss_mask_0: 0.2742  loss_dice_0: 0.3494  loss_ce_1: 0.00078  loss_mask_1: 0.2743  loss_dice_1: 0.3493  loss_ce_2: 0.0008022  loss_mask_2: 0.2739  loss_dice_2: 0.3497  loss_ce_3: 0.000793  loss_mask_3: 0.2739  loss_dice_3: 0.3498  loss_ce_4: 0.0007404  loss_mask_4: 0.2739  loss_dice_4: 0.3493    time: 0.8964  last_time: 0.9125  data_time: 0.0588  last_data_time: 0.0653   lr: 6.4856e-05  max_mem: 11485M
[05/29 18:29:40] d2.utils.events INFO:  eta: 1:30:43  iter: 3839  total_loss: 3.782  loss_ce: 0.0006694  loss_mask: 0.2741  loss_dice: 0.349  loss_ce_0: 0.0007547  loss_mask_0: 0.2738  loss_dice_0: 0.349  loss_ce_1: 0.0007788  loss_mask_1: 0.274  loss_dice_1: 0.3489  loss_ce_2: 0.0007997  loss_mask_2: 0.2734  loss_dice_2: 0.349  loss_ce_3: 0.0007897  loss_mask_3: 0.2736  loss_dice_3: 0.3492  loss_ce_4: 0.0007373  loss_mask_4: 0.2735  loss_dice_4: 0.3491    time: 0.8965  last_time: 0.9264  data_time: 0.0590  last_data_time: 0.0748   lr: 6.4668e-05  max_mem: 11485M
[05/29 18:29:58] d2.utils.events INFO:  eta: 1:30:29  iter: 3859  total_loss: 3.773  loss_ce: 0.0006669  loss_mask: 0.2735  loss_dice: 0.3486  loss_ce_0: 0.0007516  loss_mask_0: 0.2732  loss_dice_0: 0.3484  loss_ce_1: 0.0007775  loss_mask_1: 0.2735  loss_dice_1: 0.3484  loss_ce_2: 0.0007969  loss_mask_2: 0.2732  loss_dice_2: 0.3486  loss_ce_3: 0.0007876  loss_mask_3: 0.2731  loss_dice_3: 0.3485  loss_ce_4: 0.0007347  loss_mask_4: 0.2731  loss_dice_4: 0.3484    time: 0.8967  last_time: 0.9481  data_time: 0.0591  last_data_time: 0.0939   lr: 6.4479e-05  max_mem: 11485M
[05/29 18:30:17] d2.utils.events INFO:  eta: 1:30:18  iter: 3879  total_loss: 3.764  loss_ce: 0.0006655  loss_mask: 0.2728  loss_dice: 0.348  loss_ce_0: 0.0007498  loss_mask_0: 0.2728  loss_dice_0: 0.3479  loss_ce_1: 0.0007766  loss_mask_1: 0.2729  loss_dice_1: 0.3478  loss_ce_2: 0.0007937  loss_mask_2: 0.2728  loss_dice_2: 0.3481  loss_ce_3: 0.0007861  loss_mask_3: 0.2726  loss_dice_3: 0.3482  loss_ce_4: 0.0007325  loss_mask_4: 0.2724  loss_dice_4: 0.348    time: 0.8969  last_time: 0.9258  data_time: 0.0592  last_data_time: 0.0766   lr: 6.429e-05  max_mem: 11485M
[05/29 18:30:36] d2.utils.events INFO:  eta: 1:30:07  iter: 3899  total_loss: 3.76  loss_ce: 0.0006638  loss_mask: 0.2722  loss_dice: 0.3474  loss_ce_0: 0.0007467  loss_mask_0: 0.2721  loss_dice_0: 0.3475  loss_ce_1: 0.0007751  loss_mask_1: 0.272  loss_dice_1: 0.3472  loss_ce_2: 0.0007906  loss_mask_2: 0.2719  loss_dice_2: 0.3477  loss_ce_3: 0.0007848  loss_mask_3: 0.2723  loss_dice_3: 0.3477  loss_ce_4: 0.0007298  loss_mask_4: 0.2719  loss_dice_4: 0.3474    time: 0.8972  last_time: 0.9258  data_time: 0.0593  last_data_time: 0.0653   lr: 6.41e-05  max_mem: 11485M
[05/29 18:30:55] d2.utils.events INFO:  eta: 1:29:59  iter: 3919  total_loss: 3.755  loss_ce: 0.0006626  loss_mask: 0.2716  loss_dice: 0.3468  loss_ce_0: 0.0007452  loss_mask_0: 0.2714  loss_dice_0: 0.3469  loss_ce_1: 0.0007724  loss_mask_1: 0.2713  loss_dice_1: 0.3469  loss_ce_2: 0.0007882  loss_mask_2: 0.2715  loss_dice_2: 0.347  loss_ce_3: 0.0007814  loss_mask_3: 0.2717  loss_dice_3: 0.3473  loss_ce_4: 0.0007276  loss_mask_4: 0.2715  loss_dice_4: 0.3468    time: 0.8974  last_time: 0.9448  data_time: 0.0595  last_data_time: 0.0964   lr: 6.3911e-05  max_mem: 11485M
[05/29 18:31:14] d2.utils.events INFO:  eta: 1:29:54  iter: 3939  total_loss: 3.748  loss_ce: 0.0006604  loss_mask: 0.2711  loss_dice: 0.3463  loss_ce_0: 0.0007441  loss_mask_0: 0.2709  loss_dice_0: 0.3461  loss_ce_1: 0.0007704  loss_mask_1: 0.2707  loss_dice_1: 0.3464  loss_ce_2: 0.0007851  loss_mask_2: 0.271  loss_dice_2: 0.3463  loss_ce_3: 0.000778  loss_mask_3: 0.2712  loss_dice_3: 0.3466  loss_ce_4: 0.0007243  loss_mask_4: 0.2707  loss_dice_4: 0.3465    time: 0.8976  last_time: 0.9247  data_time: 0.0596  last_data_time: 0.0693   lr: 6.3722e-05  max_mem: 11485M
[05/29 18:31:33] d2.utils.events INFO:  eta: 1:29:48  iter: 3959  total_loss: 3.745  loss_ce: 0.0006589  loss_mask: 0.2705  loss_dice: 0.346  loss_ce_0: 0.0007415  loss_mask_0: 0.2703  loss_dice_0: 0.3458  loss_ce_1: 0.0007684  loss_mask_1: 0.27  loss_dice_1: 0.3455  loss_ce_2: 0.000782  loss_mask_2: 0.2702  loss_dice_2: 0.3458  loss_ce_3: 0.0007761  loss_mask_3: 0.2704  loss_dice_3: 0.3459  loss_ce_4: 0.0007225  loss_mask_4: 0.2704  loss_dice_4: 0.3458    time: 0.8978  last_time: 0.9603  data_time: 0.0598  last_data_time: 0.1161   lr: 6.3533e-05  max_mem: 11485M
[05/29 18:31:52] d2.utils.events INFO:  eta: 1:29:45  iter: 3979  total_loss: 3.739  loss_ce: 0.0006569  loss_mask: 0.2698  loss_dice: 0.3455  loss_ce_0: 0.0007406  loss_mask_0: 0.2696  loss_dice_0: 0.3453  loss_ce_1: 0.0007668  loss_mask_1: 0.2693  loss_dice_1: 0.3448  loss_ce_2: 0.00078  loss_mask_2: 0.2692  loss_dice_2: 0.3452  loss_ce_3: 0.0007728  loss_mask_3: 0.2699  loss_dice_3: 0.3453  loss_ce_4: 0.0007209  loss_mask_4: 0.27  loss_dice_4: 0.3453    time: 0.8980  last_time: 0.9412  data_time: 0.0599  last_data_time: 0.1001   lr: 6.3343e-05  max_mem: 11485M
[05/29 18:32:11] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/climatenet_v2/model_0003999.pth
[05/29 18:32:12] d2.utils.events INFO:  eta: 1:29:42  iter: 3999  total_loss: 3.733  loss_ce: 0.0006546  loss_mask: 0.2693  loss_dice: 0.3444  loss_ce_0: 0.0007378  loss_mask_0: 0.2689  loss_dice_0: 0.3447  loss_ce_1: 0.0007649  loss_mask_1: 0.2688  loss_dice_1: 0.3442  loss_ce_2: 0.0007781  loss_mask_2: 0.2686  loss_dice_2: 0.3447  loss_ce_3: 0.0007713  loss_mask_3: 0.2691  loss_dice_3: 0.3448  loss_ce_4: 0.000717  loss_mask_4: 0.2694  loss_dice_4: 0.3444    time: 0.8982  last_time: 0.9312  data_time: 0.0601  last_data_time: 0.0761   lr: 6.3154e-05  max_mem: 11485M
[05/29 18:32:31] d2.utils.events INFO:  eta: 1:29:35  iter: 4019  total_loss: 3.727  loss_ce: 0.0006527  loss_mask: 0.2688  loss_dice: 0.344  loss_ce_0: 0.0007388  loss_mask_0: 0.2682  loss_dice_0: 0.344  loss_ce_1: 0.0007618  loss_mask_1: 0.2682  loss_dice_1: 0.3439  loss_ce_2: 0.0007754  loss_mask_2: 0.2682  loss_dice_2: 0.3437  loss_ce_3: 0.00077  loss_mask_3: 0.2686  loss_dice_3: 0.3442  loss_ce_4: 0.000713  loss_mask_4: 0.2689  loss_dice_4: 0.3439    time: 0.8984  last_time: 0.9781  data_time: 0.0602  last_data_time: 0.1047   lr: 6.2965e-05  max_mem: 11485M
[05/29 18:32:50] d2.utils.events INFO:  eta: 1:29:37  iter: 4039  total_loss: 3.723  loss_ce: 0.0006513  loss_mask: 0.2683  loss_dice: 0.3432  loss_ce_0: 0.0007396  loss_mask_0: 0.2679  loss_dice_0: 0.3435  loss_ce_1: 0.0007602  loss_mask_1: 0.2677  loss_dice_1: 0.3431  loss_ce_2: 0.0007735  loss_mask_2: 0.2677  loss_dice_2: 0.3432  loss_ce_3: 0.0007686  loss_mask_3: 0.2679  loss_dice_3: 0.3432  loss_ce_4: 0.0007126  loss_mask_4: 0.2683  loss_dice_4: 0.3435    time: 0.8986  last_time: 0.9084  data_time: 0.0604  last_data_time: 0.0618   lr: 6.2775e-05  max_mem: 11485M
[05/29 18:33:08] d2.utils.events INFO:  eta: 1:29:29  iter: 4059  total_loss: 3.716  loss_ce: 0.0006494  loss_mask: 0.2679  loss_dice: 0.3425  loss_ce_0: 0.0007369  loss_mask_0: 0.2674  loss_dice_0: 0.3427  loss_ce_1: 0.0007584  loss_mask_1: 0.2672  loss_dice_1: 0.3424  loss_ce_2: 0.0007711  loss_mask_2: 0.267  loss_dice_2: 0.3427  loss_ce_3: 0.0007647  loss_mask_3: 0.2675  loss_dice_3: 0.3426  loss_ce_4: 0.0007104  loss_mask_4: 0.2674  loss_dice_4: 0.3431    time: 0.8988  last_time: 0.9451  data_time: 0.0605  last_data_time: 0.0968   lr: 6.2585e-05  max_mem: 11485M
[05/29 18:33:27] d2.utils.events INFO:  eta: 1:29:25  iter: 4079  total_loss: 3.711  loss_ce: 0.000647  loss_mask: 0.2673  loss_dice: 0.3422  loss_ce_0: 0.0007337  loss_mask_0: 0.267  loss_dice_0: 0.3421  loss_ce_1: 0.0007566  loss_mask_1: 0.2667  loss_dice_1: 0.342  loss_ce_2: 0.000769  loss_mask_2: 0.2665  loss_dice_2: 0.3422  loss_ce_3: 0.0007626  loss_mask_3: 0.2666  loss_dice_3: 0.3422  loss_ce_4: 0.0007082  loss_mask_4: 0.2669  loss_dice_4: 0.3424    time: 0.8990  last_time: 0.9143  data_time: 0.0606  last_data_time: 0.0547   lr: 6.2396e-05  max_mem: 11485M
[05/29 18:33:46] d2.utils.events INFO:  eta: 1:29:17  iter: 4099  total_loss: 3.702  loss_ce: 0.0006448  loss_mask: 0.2668  loss_dice: 0.3417  loss_ce_0: 0.000732  loss_mask_0: 0.2666  loss_dice_0: 0.3414  loss_ce_1: 0.0007551  loss_mask_1: 0.2662  loss_dice_1: 0.3415  loss_ce_2: 0.0007663  loss_mask_2: 0.2659  loss_dice_2: 0.3417  loss_ce_3: 0.0007604  loss_mask_3: 0.2663  loss_dice_3: 0.3416  loss_ce_4: 0.0007054  loss_mask_4: 0.2664  loss_dice_4: 0.3418    time: 0.8992  last_time: 0.9457  data_time: 0.0607  last_data_time: 0.0890   lr: 6.2206e-05  max_mem: 11485M
[05/29 18:34:05] d2.utils.events INFO:  eta: 1:29:01  iter: 4119  total_loss: 3.697  loss_ce: 0.0006442  loss_mask: 0.2661  loss_dice: 0.3413  loss_ce_0: 0.0007307  loss_mask_0: 0.2661  loss_dice_0: 0.3409  loss_ce_1: 0.0007524  loss_mask_1: 0.2657  loss_dice_1: 0.3411  loss_ce_2: 0.0007642  loss_mask_2: 0.2655  loss_dice_2: 0.341  loss_ce_3: 0.0007579  loss_mask_3: 0.2656  loss_dice_3: 0.3409  loss_ce_4: 0.000703  loss_mask_4: 0.2659  loss_dice_4: 0.3413    time: 0.8992  last_time: 0.9021  data_time: 0.0608  last_data_time: 0.0550   lr: 6.2016e-05  max_mem: 11485M
[05/29 18:34:23] d2.utils.events INFO:  eta: 1:28:42  iter: 4139  total_loss: 3.693  loss_ce: 0.0006429  loss_mask: 0.2654  loss_dice: 0.3407  loss_ce_0: 0.0007279  loss_mask_0: 0.2654  loss_dice_0: 0.3406  loss_ce_1: 0.0007497  loss_mask_1: 0.2652  loss_dice_1: 0.3407  loss_ce_2: 0.0007619  loss_mask_2: 0.2651  loss_dice_2: 0.3403  loss_ce_3: 0.0007548  loss_mask_3: 0.265  loss_dice_3: 0.3406  loss_ce_4: 0.0006978  loss_mask_4: 0.2652  loss_dice_4: 0.3409    time: 0.8993  last_time: 0.9482  data_time: 0.0609  last_data_time: 0.1019   lr: 6.1826e-05  max_mem: 11485M
[05/29 18:34:42] d2.utils.events INFO:  eta: 1:28:27  iter: 4159  total_loss: 3.687  loss_ce: 0.0006435  loss_mask: 0.2649  loss_dice: 0.3403  loss_ce_0: 0.0007262  loss_mask_0: 0.2649  loss_dice_0: 0.3402  loss_ce_1: 0.0007485  loss_mask_1: 0.2643  loss_dice_1: 0.3404  loss_ce_2: 0.0007588  loss_mask_2: 0.2646  loss_dice_2: 0.3398  loss_ce_3: 0.0007524  loss_mask_3: 0.2645  loss_dice_3: 0.34  loss_ce_4: 0.0006958  loss_mask_4: 0.2649  loss_dice_4: 0.3403    time: 0.8995  last_time: 0.9534  data_time: 0.0610  last_data_time: 0.1038   lr: 6.1637e-05  max_mem: 11485M
[05/29 18:35:00] d2.utils.events INFO:  eta: 1:28:21  iter: 4179  total_loss: 3.681  loss_ce: 0.0006423  loss_mask: 0.2642  loss_dice: 0.3396  loss_ce_0: 0.0007241  loss_mask_0: 0.2641  loss_dice_0: 0.3397  loss_ce_1: 0.000746  loss_mask_1: 0.2637  loss_dice_1: 0.3399  loss_ce_2: 0.0007546  loss_mask_2: 0.2641  loss_dice_2: 0.3392  loss_ce_3: 0.0007501  loss_mask_3: 0.2639  loss_dice_3: 0.3396  loss_ce_4: 0.0006936  loss_mask_4: 0.2637  loss_dice_4: 0.3399    time: 0.8996  last_time: 0.9499  data_time: 0.0611  last_data_time: 0.1006   lr: 6.1447e-05  max_mem: 11485M
[05/29 18:35:19] d2.utils.events INFO:  eta: 1:28:04  iter: 4199  total_loss: 3.675  loss_ce: 0.0006413  loss_mask: 0.2634  loss_dice: 0.3388  loss_ce_0: 0.0007222  loss_mask_0: 0.2635  loss_dice_0: 0.3387  loss_ce_1: 0.0007442  loss_mask_1: 0.2633  loss_dice_1: 0.339  loss_ce_2: 0.000752  loss_mask_2: 0.2634  loss_dice_2: 0.3387  loss_ce_3: 0.0007485  loss_mask_3: 0.2633  loss_dice_3: 0.3389  loss_ce_4: 0.0006917  loss_mask_4: 0.2631  loss_dice_4: 0.3393    time: 0.8997  last_time: 0.9144  data_time: 0.0612  last_data_time: 0.0821   lr: 6.1257e-05  max_mem: 11485M
[05/29 18:35:37] d2.utils.events INFO:  eta: 1:27:43  iter: 4219  total_loss: 3.669  loss_ce: 0.000639  loss_mask: 0.2629  loss_dice: 0.3382  loss_ce_0: 0.00072  loss_mask_0: 0.2628  loss_dice_0: 0.338  loss_ce_1: 0.0007429  loss_mask_1: 0.2631  loss_dice_1: 0.3381  loss_ce_2: 0.0007487  loss_mask_2: 0.2626  loss_dice_2: 0.338  loss_ce_3: 0.000747  loss_mask_3: 0.263  loss_dice_3: 0.3382  loss_ce_4: 0.0006902  loss_mask_4: 0.2627  loss_dice_4: 0.3385    time: 0.8996  last_time: 0.8628  data_time: 0.0612  last_data_time: 0.0392   lr: 6.1066e-05  max_mem: 11485M
[05/29 18:35:54] d2.utils.events INFO:  eta: 1:27:25  iter: 4239  total_loss: 3.66  loss_ce: 0.0006367  loss_mask: 0.2622  loss_dice: 0.3374  loss_ce_0: 0.0007179  loss_mask_0: 0.2622  loss_dice_0: 0.3371  loss_ce_1: 0.0007411  loss_mask_1: 0.2627  loss_dice_1: 0.3373  loss_ce_2: 0.0007463  loss_mask_2: 0.262  loss_dice_2: 0.3372  loss_ce_3: 0.0007449  loss_mask_3: 0.2625  loss_dice_3: 0.3375  loss_ce_4: 0.0006867  loss_mask_4: 0.2621  loss_dice_4: 0.3377    time: 0.8995  last_time: 0.8771  data_time: 0.0611  last_data_time: 0.0421   lr: 6.0876e-05  max_mem: 11485M
[05/29 18:36:12] d2.utils.events INFO:  eta: 1:27:03  iter: 4259  total_loss: 3.655  loss_ce: 0.0006358  loss_mask: 0.2616  loss_dice: 0.3367  loss_ce_0: 0.000717  loss_mask_0: 0.2619  loss_dice_0: 0.3363  loss_ce_1: 0.0007403  loss_mask_1: 0.2623  loss_dice_1: 0.3367  loss_ce_2: 0.0007454  loss_mask_2: 0.2617  loss_dice_2: 0.3364  loss_ce_3: 0.0007435  loss_mask_3: 0.2618  loss_dice_3: 0.3367  loss_ce_4: 0.0006837  loss_mask_4: 0.2616  loss_dice_4: 0.3369    time: 0.8995  last_time: 0.9091  data_time: 0.0611  last_data_time: 0.0798   lr: 6.0686e-05  max_mem: 11485M
[05/29 18:36:30] d2.utils.events INFO:  eta: 1:26:44  iter: 4279  total_loss: 3.648  loss_ce: 0.0006331  loss_mask: 0.2612  loss_dice: 0.3361  loss_ce_0: 0.0007154  loss_mask_0: 0.2615  loss_dice_0: 0.3354  loss_ce_1: 0.0007411  loss_mask_1: 0.2616  loss_dice_1: 0.3357  loss_ce_2: 0.0007435  loss_mask_2: 0.2611  loss_dice_2: 0.3355  loss_ce_3: 0.0007375  loss_mask_3: 0.2616  loss_dice_3: 0.3357  loss_ce_4: 0.0006802  loss_mask_4: 0.2608  loss_dice_4: 0.3359    time: 0.8995  last_time: 0.8776  data_time: 0.0611  last_data_time: 0.0598   lr: 6.0496e-05  max_mem: 11485M
[05/29 18:36:48] d2.utils.events INFO:  eta: 1:26:25  iter: 4299  total_loss: 3.642  loss_ce: 0.0006315  loss_mask: 0.2608  loss_dice: 0.3351  loss_ce_0: 0.0007127  loss_mask_0: 0.2608  loss_dice_0: 0.3346  loss_ce_1: 0.0007397  loss_mask_1: 0.2613  loss_dice_1: 0.3349  loss_ce_2: 0.0007421  loss_mask_2: 0.2605  loss_dice_2: 0.3346  loss_ce_3: 0.0007346  loss_mask_3: 0.2609  loss_dice_3: 0.3353  loss_ce_4: 0.0006778  loss_mask_4: 0.2603  loss_dice_4: 0.3352    time: 0.8993  last_time: 0.8716  data_time: 0.0610  last_data_time: 0.0434   lr: 6.0305e-05  max_mem: 11485M
[05/29 18:37:06] d2.utils.events INFO:  eta: 1:26:00  iter: 4319  total_loss: 3.639  loss_ce: 0.0006302  loss_mask: 0.2603  loss_dice: 0.3343  loss_ce_0: 0.0007093  loss_mask_0: 0.2604  loss_dice_0: 0.3342  loss_ce_1: 0.0007387  loss_mask_1: 0.2609  loss_dice_1: 0.334  loss_ce_2: 0.0007408  loss_mask_2: 0.2602  loss_dice_2: 0.3341  loss_ce_3: 0.0007329  loss_mask_3: 0.2604  loss_dice_3: 0.3345  loss_ce_4: 0.0006751  loss_mask_4: 0.2598  loss_dice_4: 0.3347    time: 0.8993  last_time: 0.9006  data_time: 0.0610  last_data_time: 0.0656   lr: 6.0115e-05  max_mem: 11485M
[05/29 18:37:24] d2.utils.events INFO:  eta: 1:25:48  iter: 4339  total_loss: 3.631  loss_ce: 0.000629  loss_mask: 0.2593  loss_dice: 0.334  loss_ce_0: 0.0007058  loss_mask_0: 0.26  loss_dice_0: 0.3337  loss_ce_1: 0.0007369  loss_mask_1: 0.2601  loss_dice_1: 0.3336  loss_ce_2: 0.0007395  loss_mask_2: 0.2598  loss_dice_2: 0.3333  loss_ce_3: 0.0007308  loss_mask_3: 0.26  loss_dice_3: 0.3341  loss_ce_4: 0.0006726  loss_mask_4: 0.2592  loss_dice_4: 0.334    time: 0.8993  last_time: 0.8901  data_time: 0.0610  last_data_time: 0.0470   lr: 5.9924e-05  max_mem: 11485M
[05/29 18:37:42] d2.utils.events INFO:  eta: 1:25:30  iter: 4359  total_loss: 3.621  loss_ce: 0.0006275  loss_mask: 0.2587  loss_dice: 0.3331  loss_ce_0: 0.0007046  loss_mask_0: 0.2589  loss_dice_0: 0.3327  loss_ce_1: 0.0007348  loss_mask_1: 0.2595  loss_dice_1: 0.3332  loss_ce_2: 0.0007365  loss_mask_2: 0.2592  loss_dice_2: 0.3326  loss_ce_3: 0.0007273  loss_mask_3: 0.259  loss_dice_3: 0.3331  loss_ce_4: 0.0006701  loss_mask_4: 0.2585  loss_dice_4: 0.3331    time: 0.8992  last_time: 0.8855  data_time: 0.0609  last_data_time: 0.0499   lr: 5.9734e-05  max_mem: 11485M
[05/29 18:37:59] d2.utils.events INFO:  eta: 1:25:09  iter: 4379  total_loss: 3.615  loss_ce: 0.0006269  loss_mask: 0.2582  loss_dice: 0.3321  loss_ce_0: 0.0007031  loss_mask_0: 0.2583  loss_dice_0: 0.332  loss_ce_1: 0.000734  loss_mask_1: 0.2589  loss_dice_1: 0.3323  loss_ce_2: 0.0007345  loss_mask_2: 0.2583  loss_dice_2: 0.3321  loss_ce_3: 0.0007244  loss_mask_3: 0.2582  loss_dice_3: 0.3323  loss_ce_4: 0.0006655  loss_mask_4: 0.2579  loss_dice_4: 0.3321    time: 0.8991  last_time: 0.8636  data_time: 0.0609  last_data_time: 0.0399   lr: 5.9543e-05  max_mem: 11485M
[05/29 18:38:18] d2.utils.events INFO:  eta: 1:25:02  iter: 4399  total_loss: 3.608  loss_ce: 0.0006263  loss_mask: 0.2575  loss_dice: 0.3311  loss_ce_0: 0.0007007  loss_mask_0: 0.2574  loss_dice_0: 0.3315  loss_ce_1: 0.0007324  loss_mask_1: 0.2581  loss_dice_1: 0.3312  loss_ce_2: 0.0007331  loss_mask_2: 0.2576  loss_dice_2: 0.3314  loss_ce_3: 0.0007226  loss_mask_3: 0.2578  loss_dice_3: 0.3315  loss_ce_4: 0.0006634  loss_mask_4: 0.2571  loss_dice_4: 0.3313    time: 0.8992  last_time: 0.9105  data_time: 0.0609  last_data_time: 0.0679   lr: 5.9352e-05  max_mem: 11485M
[05/29 18:38:35] d2.utils.events INFO:  eta: 1:24:44  iter: 4419  total_loss: 3.599  loss_ce: 0.0006243  loss_mask: 0.2569  loss_dice: 0.3305  loss_ce_0: 0.0007  loss_mask_0: 0.2568  loss_dice_0: 0.3308  loss_ce_1: 0.0007311  loss_mask_1: 0.2576  loss_dice_1: 0.3307  loss_ce_2: 0.0007321  loss_mask_2: 0.257  loss_dice_2: 0.3305  loss_ce_3: 0.0007204  loss_mask_3: 0.2573  loss_dice_3: 0.3307  loss_ce_4: 0.0006619  loss_mask_4: 0.2568  loss_dice_4: 0.3305    time: 0.8991  last_time: 0.8784  data_time: 0.0609  last_data_time: 0.0576   lr: 5.9162e-05  max_mem: 11485M
[05/29 18:38:53] d2.utils.events INFO:  eta: 1:24:26  iter: 4439  total_loss: 3.591  loss_ce: 0.0006218  loss_mask: 0.2564  loss_dice: 0.33  loss_ce_0: 0.0006973  loss_mask_0: 0.2563  loss_dice_0: 0.3303  loss_ce_1: 0.0007298  loss_mask_1: 0.2568  loss_dice_1: 0.3299  loss_ce_2: 0.0007304  loss_mask_2: 0.2565  loss_dice_2: 0.3299  loss_ce_3: 0.0007185  loss_mask_3: 0.2564  loss_dice_3: 0.3299  loss_ce_4: 0.0006604  loss_mask_4: 0.2564  loss_dice_4: 0.33    time: 0.8990  last_time: 0.8795  data_time: 0.0608  last_data_time: 0.0520   lr: 5.8971e-05  max_mem: 11485M
[05/29 18:39:11] d2.utils.events INFO:  eta: 1:24:09  iter: 4459  total_loss: 3.586  loss_ce: 0.0006208  loss_mask: 0.256  loss_dice: 0.3293  loss_ce_0: 0.0006947  loss_mask_0: 0.256  loss_dice_0: 0.3297  loss_ce_1: 0.0007285  loss_mask_1: 0.2561  loss_dice_1: 0.3295  loss_ce_2: 0.0007284  loss_mask_2: 0.256  loss_dice_2: 0.329  loss_ce_3: 0.0007161  loss_mask_3: 0.2559  loss_dice_3: 0.3295  loss_ce_4: 0.0006582  loss_mask_4: 0.2557  loss_dice_4: 0.3296    time: 0.8989  last_time: 0.9271  data_time: 0.0608  last_data_time: 0.0869   lr: 5.878e-05  max_mem: 11485M
[05/29 18:39:29] d2.utils.events INFO:  eta: 1:23:53  iter: 4479  total_loss: 3.58  loss_ce: 0.0006196  loss_mask: 0.2556  loss_dice: 0.3287  loss_ce_0: 0.0006929  loss_mask_0: 0.2556  loss_dice_0: 0.3289  loss_ce_1: 0.0007264  loss_mask_1: 0.2556  loss_dice_1: 0.3285  loss_ce_2: 0.0007257  loss_mask_2: 0.2555  loss_dice_2: 0.3284  loss_ce_3: 0.0007117  loss_mask_3: 0.2554  loss_dice_3: 0.3289  loss_ce_4: 0.000654  loss_mask_4: 0.2554  loss_dice_4: 0.3288    time: 0.8989  last_time: 0.8764  data_time: 0.0607  last_data_time: 0.0434   lr: 5.8589e-05  max_mem: 11485M
[05/29 18:39:46] d2.utils.events INFO:  eta: 1:23:34  iter: 4499  total_loss: 3.572  loss_ce: 0.0006177  loss_mask: 0.255  loss_dice: 0.328  loss_ce_0: 0.0006911  loss_mask_0: 0.2552  loss_dice_0: 0.3282  loss_ce_1: 0.0007249  loss_mask_1: 0.2551  loss_dice_1: 0.3275  loss_ce_2: 0.000723  loss_mask_2: 0.2549  loss_dice_2: 0.3277  loss_ce_3: 0.0007086  loss_mask_3: 0.2552  loss_dice_3: 0.328  loss_ce_4: 0.0006515  loss_mask_4: 0.2549  loss_dice_4: 0.3284    time: 0.8988  last_time: 0.8619  data_time: 0.0607  last_data_time: 0.0395   lr: 5.8398e-05  max_mem: 11485M
[05/29 18:40:04] d2.utils.events INFO:  eta: 1:23:16  iter: 4519  total_loss: 3.564  loss_ce: 0.000616  loss_mask: 0.2545  loss_dice: 0.327  loss_ce_0: 0.0006907  loss_mask_0: 0.2548  loss_dice_0: 0.3271  loss_ce_1: 0.0007236  loss_mask_1: 0.2547  loss_dice_1: 0.327  loss_ce_2: 0.0007212  loss_mask_2: 0.2544  loss_dice_2: 0.3274  loss_ce_3: 0.0007068  loss_mask_3: 0.2547  loss_dice_3: 0.327  loss_ce_4: 0.0006503  loss_mask_4: 0.2543  loss_dice_4: 0.3274    time: 0.8987  last_time: 0.8808  data_time: 0.0606  last_data_time: 0.0400   lr: 5.8207e-05  max_mem: 11485M
[05/29 18:40:22] d2.utils.events INFO:  eta: 1:23:02  iter: 4539  total_loss: 3.558  loss_ce: 0.0006141  loss_mask: 0.2542  loss_dice: 0.3263  loss_ce_0: 0.0006894  loss_mask_0: 0.2543  loss_dice_0: 0.3264  loss_ce_1: 0.0007215  loss_mask_1: 0.2542  loss_dice_1: 0.3263  loss_ce_2: 0.0007202  loss_mask_2: 0.2538  loss_dice_2: 0.3267  loss_ce_3: 0.0007053  loss_mask_3: 0.2539  loss_dice_3: 0.3262  loss_ce_4: 0.0006481  loss_mask_4: 0.2538  loss_dice_4: 0.3265    time: 0.8988  last_time: 0.8818  data_time: 0.0607  last_data_time: 0.0536   lr: 5.8016e-05  max_mem: 11485M
[05/29 18:40:40] d2.utils.events INFO:  eta: 1:22:47  iter: 4559  total_loss: 3.555  loss_ce: 0.000613  loss_mask: 0.2534  loss_dice: 0.326  loss_ce_0: 0.0006872  loss_mask_0: 0.2539  loss_dice_0: 0.3258  loss_ce_1: 0.0007194  loss_mask_1: 0.2539  loss_dice_1: 0.3257  loss_ce_2: 0.0007177  loss_mask_2: 0.2535  loss_dice_2: 0.326  loss_ce_3: 0.0007033  loss_mask_3: 0.2534  loss_dice_3: 0.3253  loss_ce_4: 0.000646  loss_mask_4: 0.2533  loss_dice_4: 0.3261    time: 0.8987  last_time: 0.9560  data_time: 0.0606  last_data_time: 0.1001   lr: 5.7824e-05  max_mem: 11485M
[05/29 18:40:59] d2.utils.events INFO:  eta: 1:22:40  iter: 4579  total_loss: 3.544  loss_ce: 0.00061  loss_mask: 0.2532  loss_dice: 0.3251  loss_ce_0: 0.0006844  loss_mask_0: 0.2532  loss_dice_0: 0.3252  loss_ce_1: 0.0007179  loss_mask_1: 0.2536  loss_dice_1: 0.3251  loss_ce_2: 0.0007158  loss_mask_2: 0.2531  loss_dice_2: 0.3254  loss_ce_3: 0.0007003  loss_mask_3: 0.253  loss_dice_3: 0.325  loss_ce_4: 0.0006418  loss_mask_4: 0.2528  loss_dice_4: 0.3257    time: 0.8990  last_time: 0.9510  data_time: 0.0607  last_data_time: 0.0882   lr: 5.7633e-05  max_mem: 11485M
[05/29 18:41:19] d2.utils.events INFO:  eta: 1:22:30  iter: 4599  total_loss: 3.538  loss_ce: 0.0006065  loss_mask: 0.2528  loss_dice: 0.3246  loss_ce_0: 0.0006821  loss_mask_0: 0.2525  loss_dice_0: 0.3247  loss_ce_1: 0.000716  loss_mask_1: 0.2532  loss_dice_1: 0.3247  loss_ce_2: 0.0007135  loss_mask_2: 0.2521  loss_dice_2: 0.3246  loss_ce_3: 0.0006986  loss_mask_3: 0.2523  loss_dice_3: 0.3244  loss_ce_4: 0.0006405  loss_mask_4: 0.2523  loss_dice_4: 0.325    time: 0.8992  last_time: 0.9257  data_time: 0.0608  last_data_time: 0.0625   lr: 5.7442e-05  max_mem: 11485M
[05/29 18:41:37] d2.utils.events INFO:  eta: 1:22:18  iter: 4619  total_loss: 3.531  loss_ce: 0.0006049  loss_mask: 0.2518  loss_dice: 0.324  loss_ce_0: 0.0006792  loss_mask_0: 0.2522  loss_dice_0: 0.324  loss_ce_1: 0.0007138  loss_mask_1: 0.2519  loss_dice_1: 0.3242  loss_ce_2: 0.0007122  loss_mask_2: 0.2517  loss_dice_2: 0.324  loss_ce_3: 0.0006973  loss_mask_3: 0.2519  loss_dice_3: 0.324  loss_ce_4: 0.0006383  loss_mask_4: 0.2518  loss_dice_4: 0.3242    time: 0.8993  last_time: 0.9456  data_time: 0.0609  last_data_time: 0.0867   lr: 5.725e-05  max_mem: 11485M
[05/29 18:41:56] d2.utils.events INFO:  eta: 1:22:04  iter: 4639  total_loss: 3.523  loss_ce: 0.000603  loss_mask: 0.2514  loss_dice: 0.3236  loss_ce_0: 0.000677  loss_mask_0: 0.2513  loss_dice_0: 0.3233  loss_ce_1: 0.0007125  loss_mask_1: 0.2511  loss_dice_1: 0.3234  loss_ce_2: 0.0007109  loss_mask_2: 0.251  loss_dice_2: 0.3232  loss_ce_3: 0.0006953  loss_mask_3: 0.2513  loss_dice_3: 0.3229  loss_ce_4: 0.0006364  loss_mask_4: 0.2514  loss_dice_4: 0.3234    time: 0.8994  last_time: 0.8868  data_time: 0.0609  last_data_time: 0.0556   lr: 5.7059e-05  max_mem: 11485M
[05/29 18:42:15] d2.utils.events INFO:  eta: 1:21:51  iter: 4659  total_loss: 3.516  loss_ce: 0.0006019  loss_mask: 0.251  loss_dice: 0.3228  loss_ce_0: 0.0006746  loss_mask_0: 0.2506  loss_dice_0: 0.3225  loss_ce_1: 0.0007117  loss_mask_1: 0.2505  loss_dice_1: 0.3228  loss_ce_2: 0.0007094  loss_mask_2: 0.2506  loss_dice_2: 0.322  loss_ce_3: 0.0006931  loss_mask_3: 0.2508  loss_dice_3: 0.3223  loss_ce_4: 0.0006354  loss_mask_4: 0.2506  loss_dice_4: 0.3227    time: 0.8995  last_time: 0.9470  data_time: 0.0610  last_data_time: 0.0821   lr: 5.6867e-05  max_mem: 11485M
[05/29 18:42:33] d2.utils.events INFO:  eta: 1:21:26  iter: 4679  total_loss: 3.51  loss_ce: 0.0006003  loss_mask: 0.2501  loss_dice: 0.3216  loss_ce_0: 0.0006727  loss_mask_0: 0.2498  loss_dice_0: 0.3217  loss_ce_1: 0.0007099  loss_mask_1: 0.2498  loss_dice_1: 0.3215  loss_ce_2: 0.000707  loss_mask_2: 0.2499  loss_dice_2: 0.3216  loss_ce_3: 0.000692  loss_mask_3: 0.2501  loss_dice_3: 0.3215  loss_ce_4: 0.0006329  loss_mask_4: 0.2502  loss_dice_4: 0.322    time: 0.8996  last_time: 0.9155  data_time: 0.0610  last_data_time: 0.0723   lr: 5.6675e-05  max_mem: 11485M
[05/29 18:42:51] d2.utils.events INFO:  eta: 1:21:05  iter: 4699  total_loss: 3.501  loss_ce: 0.0005997  loss_mask: 0.2496  loss_dice: 0.321  loss_ce_0: 0.0006712  loss_mask_0: 0.2495  loss_dice_0: 0.3209  loss_ce_1: 0.0007076  loss_mask_1: 0.2495  loss_dice_1: 0.3209  loss_ce_2: 0.0007044  loss_mask_2: 0.2494  loss_dice_2: 0.321  loss_ce_3: 0.00069  loss_mask_3: 0.2494  loss_dice_3: 0.321  loss_ce_4: 0.0006325  loss_mask_4: 0.2496  loss_dice_4: 0.3216    time: 0.8996  last_time: 0.8898  data_time: 0.0610  last_data_time: 0.0434   lr: 5.6484e-05  max_mem: 11485M
[05/29 18:43:10] d2.utils.events INFO:  eta: 1:20:46  iter: 4719  total_loss: 3.496  loss_ce: 0.0005978  loss_mask: 0.2492  loss_dice: 0.3205  loss_ce_0: 0.0006692  loss_mask_0: 0.2488  loss_dice_0: 0.3203  loss_ce_1: 0.0007068  loss_mask_1: 0.2491  loss_dice_1: 0.3201  loss_ce_2: 0.0007016  loss_mask_2: 0.249  loss_dice_2: 0.3205  loss_ce_3: 0.0006885  loss_mask_3: 0.2487  loss_dice_3: 0.3203  loss_ce_4: 0.0006289  loss_mask_4: 0.2489  loss_dice_4: 0.3207    time: 0.8996  last_time: 0.8791  data_time: 0.0610  last_data_time: 0.0442   lr: 5.6292e-05  max_mem: 11485M
[05/29 18:43:28] d2.utils.events INFO:  eta: 1:20:27  iter: 4739  total_loss: 3.482  loss_ce: 0.000597  loss_mask: 0.2486  loss_dice: 0.3197  loss_ce_0: 0.0006679  loss_mask_0: 0.2483  loss_dice_0: 0.3195  loss_ce_1: 0.0007044  loss_mask_1: 0.2483  loss_dice_1: 0.3195  loss_ce_2: 0.0006995  loss_mask_2: 0.2482  loss_dice_2: 0.3194  loss_ce_3: 0.0006861  loss_mask_3: 0.2483  loss_dice_3: 0.3197  loss_ce_4: 0.0006263  loss_mask_4: 0.2484  loss_dice_4: 0.3202    time: 0.8997  last_time: 0.9040  data_time: 0.0610  last_data_time: 0.0586   lr: 5.61e-05  max_mem: 11485M
[05/29 18:43:46] d2.utils.events INFO:  eta: 1:20:01  iter: 4759  total_loss: 3.475  loss_ce: 0.0005951  loss_mask: 0.2484  loss_dice: 0.3191  loss_ce_0: 0.0006653  loss_mask_0: 0.2477  loss_dice_0: 0.3189  loss_ce_1: 0.0007028  loss_mask_1: 0.2477  loss_dice_1: 0.3192  loss_ce_2: 0.0006966  loss_mask_2: 0.2476  loss_dice_2: 0.3189  loss_ce_3: 0.0006829  loss_mask_3: 0.2478  loss_dice_3: 0.3191  loss_ce_4: 0.0006237  loss_mask_4: 0.2479  loss_dice_4: 0.3195    time: 0.8997  last_time: 0.8737  data_time: 0.0609  last_data_time: 0.0463   lr: 5.5908e-05  max_mem: 11485M
[05/29 18:44:04] d2.utils.events INFO:  eta: 1:19:32  iter: 4779  total_loss: 3.464  loss_ce: 0.0005946  loss_mask: 0.2477  loss_dice: 0.3182  loss_ce_0: 0.000663  loss_mask_0: 0.2474  loss_dice_0: 0.3182  loss_ce_1: 0.0007012  loss_mask_1: 0.2471  loss_dice_1: 0.3188  loss_ce_2: 0.0006945  loss_mask_2: 0.2472  loss_dice_2: 0.3183  loss_ce_3: 0.0006798  loss_mask_3: 0.2474  loss_dice_3: 0.3184  loss_ce_4: 0.0006213  loss_mask_4: 0.2474  loss_dice_4: 0.3188    time: 0.8996  last_time: 0.8725  data_time: 0.0609  last_data_time: 0.0386   lr: 5.5716e-05  max_mem: 11485M
[05/29 18:44:22] d2.utils.events INFO:  eta: 1:19:11  iter: 4799  total_loss: 3.458  loss_ce: 0.0005933  loss_mask: 0.2469  loss_dice: 0.3175  loss_ce_0: 0.0006618  loss_mask_0: 0.2471  loss_dice_0: 0.3172  loss_ce_1: 0.0006981  loss_mask_1: 0.2468  loss_dice_1: 0.3177  loss_ce_2: 0.0006928  loss_mask_2: 0.2467  loss_dice_2: 0.3178  loss_ce_3: 0.0006781  loss_mask_3: 0.2471  loss_dice_3: 0.3178  loss_ce_4: 0.000618  loss_mask_4: 0.2468  loss_dice_4: 0.3182    time: 0.8996  last_time: 0.8971  data_time: 0.0609  last_data_time: 0.0543   lr: 5.5524e-05  max_mem: 11485M
[05/29 18:44:40] d2.utils.events INFO:  eta: 1:18:52  iter: 4819  total_loss: 3.452  loss_ce: 0.0005915  loss_mask: 0.2461  loss_dice: 0.3168  loss_ce_0: 0.00066  loss_mask_0: 0.2465  loss_dice_0: 0.3168  loss_ce_1: 0.0006971  loss_mask_1: 0.2463  loss_dice_1: 0.3171  loss_ce_2: 0.0006909  loss_mask_2: 0.2461  loss_dice_2: 0.317  loss_ce_3: 0.0006759  loss_mask_3: 0.2466  loss_dice_3: 0.3171  loss_ce_4: 0.0006169  loss_mask_4: 0.2461  loss_dice_4: 0.317    time: 0.8996  last_time: 0.8721  data_time: 0.0609  last_data_time: 0.0436   lr: 5.5331e-05  max_mem: 11485M
[05/29 18:44:58] d2.utils.events INFO:  eta: 1:18:24  iter: 4839  total_loss: 3.446  loss_ce: 0.0005896  loss_mask: 0.2455  loss_dice: 0.3158  loss_ce_0: 0.0006572  loss_mask_0: 0.2461  loss_dice_0: 0.3163  loss_ce_1: 0.0006954  loss_mask_1: 0.2457  loss_dice_1: 0.3163  loss_ce_2: 0.000688  loss_mask_2: 0.2453  loss_dice_2: 0.3164  loss_ce_3: 0.000675  loss_mask_3: 0.2456  loss_dice_3: 0.3166  loss_ce_4: 0.0006149  loss_mask_4: 0.2455  loss_dice_4: 0.3165    time: 0.8995  last_time: 0.8754  data_time: 0.0609  last_data_time: 0.0417   lr: 5.5139e-05  max_mem: 11485M
[05/29 18:45:16] d2.utils.events INFO:  eta: 1:17:55  iter: 4859  total_loss: 3.435  loss_ce: 0.0005884  loss_mask: 0.2451  loss_dice: 0.3149  loss_ce_0: 0.0006543  loss_mask_0: 0.2455  loss_dice_0: 0.3157  loss_ce_1: 0.0006937  loss_mask_1: 0.2449  loss_dice_1: 0.3157  loss_ce_2: 0.0006849  loss_mask_2: 0.2447  loss_dice_2: 0.3152  loss_ce_3: 0.0006735  loss_mask_3: 0.2452  loss_dice_3: 0.3156  loss_ce_4: 0.0006132  loss_mask_4: 0.245  loss_dice_4: 0.3158    time: 0.8995  last_time: 0.8892  data_time: 0.0608  last_data_time: 0.0576   lr: 5.4947e-05  max_mem: 11485M
[05/29 18:45:33] d2.utils.events INFO:  eta: 1:17:30  iter: 4879  total_loss: 3.422  loss_ce: 0.0005873  loss_mask: 0.2444  loss_dice: 0.3143  loss_ce_0: 0.0006531  loss_mask_0: 0.2451  loss_dice_0: 0.3147  loss_ce_1: 0.0006922  loss_mask_1: 0.2445  loss_dice_1: 0.3146  loss_ce_2: 0.0006824  loss_mask_2: 0.2441  loss_dice_2: 0.3142  loss_ce_3: 0.0006716  loss_mask_3: 0.2445  loss_dice_3: 0.3147  loss_ce_4: 0.0006099  loss_mask_4: 0.2443  loss_dice_4: 0.3152    time: 0.8994  last_time: 0.8934  data_time: 0.0607  last_data_time: 0.0528   lr: 5.4754e-05  max_mem: 11485M
[05/29 18:45:51] d2.utils.events INFO:  eta: 1:17:01  iter: 4899  total_loss: 3.412  loss_ce: 0.0005853  loss_mask: 0.244  loss_dice: 0.3135  loss_ce_0: 0.00065  loss_mask_0: 0.2444  loss_dice_0: 0.3139  loss_ce_1: 0.000691  loss_mask_1: 0.2442  loss_dice_1: 0.3137  loss_ce_2: 0.0006812  loss_mask_2: 0.2436  loss_dice_2: 0.3138  loss_ce_3: 0.0006684  loss_mask_3: 0.2442  loss_dice_3: 0.3136  loss_ce_4: 0.0006077  loss_mask_4: 0.2437  loss_dice_4: 0.3145    time: 0.8994  last_time: 0.8727  data_time: 0.0607  last_data_time: 0.0390   lr: 5.4562e-05  max_mem: 11485M
[05/29 18:46:09] d2.utils.events INFO:  eta: 1:16:29  iter: 4919  total_loss: 3.407  loss_ce: 0.0005836  loss_mask: 0.243  loss_dice: 0.3129  loss_ce_0: 0.0006481  loss_mask_0: 0.244  loss_dice_0: 0.3132  loss_ce_1: 0.0006901  loss_mask_1: 0.2437  loss_dice_1: 0.3131  loss_ce_2: 0.0006799  loss_mask_2: 0.2431  loss_dice_2: 0.3131  loss_ce_3: 0.0006666  loss_mask_3: 0.2436  loss_dice_3: 0.3129  loss_ce_4: 0.0006058  loss_mask_4: 0.2431  loss_dice_4: 0.3131    time: 0.8993  last_time: 0.8725  data_time: 0.0606  last_data_time: 0.0429   lr: 5.4369e-05  max_mem: 11485M
[05/29 18:46:27] d2.utils.events INFO:  eta: 1:16:02  iter: 4939  total_loss: 3.402  loss_ce: 0.0005824  loss_mask: 0.2427  loss_dice: 0.3126  loss_ce_0: 0.0006468  loss_mask_0: 0.2431  loss_dice_0: 0.3126  loss_ce_1: 0.0006888  loss_mask_1: 0.2432  loss_dice_1: 0.3124  loss_ce_2: 0.0006779  loss_mask_2: 0.2423  loss_dice_2: 0.3125  loss_ce_3: 0.0006643  loss_mask_3: 0.2431  loss_dice_3: 0.3125  loss_ce_4: 0.0005999  loss_mask_4: 0.2426  loss_dice_4: 0.3125    time: 0.8992  last_time: 0.8985  data_time: 0.0606  last_data_time: 0.0516   lr: 5.4177e-05  max_mem: 11485M
[05/29 18:46:45] d2.utils.events INFO:  eta: 1:15:33  iter: 4959  total_loss: 3.393  loss_ce: 0.0005799  loss_mask: 0.242  loss_dice: 0.3119  loss_ce_0: 0.0006456  loss_mask_0: 0.2427  loss_dice_0: 0.312  loss_ce_1: 0.0006876  loss_mask_1: 0.2424  loss_dice_1: 0.312  loss_ce_2: 0.0006745  loss_mask_2: 0.2418  loss_dice_2: 0.3119  loss_ce_3: 0.0006627  loss_mask_3: 0.2427  loss_dice_3: 0.3119  loss_ce_4: 0.000599  loss_mask_4: 0.2424  loss_dice_4: 0.312    time: 0.8992  last_time: 0.8725  data_time: 0.0605  last_data_time: 0.0403   lr: 5.3984e-05  max_mem: 11485M
[05/29 18:47:02] d2.utils.events INFO:  eta: 1:15:03  iter: 4979  total_loss: 3.386  loss_ce: 0.0005789  loss_mask: 0.2417  loss_dice: 0.3113  loss_ce_0: 0.0006442  loss_mask_0: 0.2422  loss_dice_0: 0.3112  loss_ce_1: 0.0006859  loss_mask_1: 0.242  loss_dice_1: 0.3115  loss_ce_2: 0.0006725  loss_mask_2: 0.2413  loss_dice_2: 0.3111  loss_ce_3: 0.0006612  loss_mask_3: 0.242  loss_dice_3: 0.3113  loss_ce_4: 0.0005976  loss_mask_4: 0.2419  loss_dice_4: 0.3108    time: 0.8991  last_time: 0.8768  data_time: 0.0605  last_data_time: 0.0406   lr: 5.3791e-05  max_mem: 11485M
[05/29 18:47:20] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/climatenet_v2/model_0004999.pth
[05/29 18:47:29] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/29 18:47:29] d2.data.common INFO: Serializing 61 elements to byte tensors and concatenating them all ...
[05/29 18:47:39] d2.data.common INFO: Serialized dataset takes 1235.27 MiB
[05/29 18:47:42] d2.evaluation.evaluator INFO: Start inference on 61 batches
[05/29 18:47:44] d2.evaluation.evaluator INFO: Inference done 11/61. Dataloading: 0.0043 s/iter. Inference: 0.0328 s/iter. Eval: 0.0015 s/iter. Total: 0.0386 s/iter. ETA=0:00:01
[05/29 18:47:46] d2.evaluation.evaluator INFO: Total inference time: 0:00:02.369769 (0.042317 s / iter per device, on 1 devices)
[05/29 18:47:46] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:01 (0.030354 s / iter per device, on 1 devices)
[05/29 18:47:46] d2.engine.defaults INFO: Evaluation results for climatenet_test in csv format:
[05/29 18:47:46] d2.evaluation.testing INFO: copypaste: Mean IoU=0.34402414309016216
[05/29 18:47:46] d2.utils.events INFO:  eta: 1:14:37  iter: 4999  total_loss: 3.378  loss_ce: 0.0005774  loss_mask: 0.2413  loss_dice: 0.3107  loss_ce_0: 0.0006434  loss_mask_0: 0.2417  loss_dice_0: 0.3105  loss_ce_1: 0.0006827  loss_mask_1: 0.2416  loss_dice_1: 0.3103  loss_ce_2: 0.0006702  loss_mask_2: 0.241  loss_dice_2: 0.3104  loss_ce_3: 0.0006593  loss_mask_3: 0.2414  loss_dice_3: 0.3104  loss_ce_4: 0.0005953  loss_mask_4: 0.2414  loss_dice_4: 0.3102    time: 0.8989  last_time: 0.8761  data_time: 0.0604  last_data_time: 0.0478   lr: 5.3598e-05  max_mem: 11485M
[05/29 18:48:05] d2.utils.events INFO:  eta: 1:14:16  iter: 5019  total_loss: 3.372  loss_ce: 0.000576  loss_mask: 0.2406  loss_dice: 0.3093  loss_ce_0: 0.0006423  loss_mask_0: 0.2412  loss_dice_0: 0.3096  loss_ce_1: 0.0006813  loss_mask_1: 0.2409  loss_dice_1: 0.3092  loss_ce_2: 0.0006679  loss_mask_2: 0.2404  loss_dice_2: 0.3092  loss_ce_3: 0.0006567  loss_mask_3: 0.241  loss_dice_3: 0.3095  loss_ce_4: 0.0005941  loss_mask_4: 0.241  loss_dice_4: 0.3096    time: 0.8990  last_time: 0.8650  data_time: 0.0604  last_data_time: 0.0416   lr: 5.3405e-05  max_mem: 11485M
[05/29 18:48:22] d2.utils.events INFO:  eta: 1:13:46  iter: 5039  total_loss: 3.365  loss_ce: 0.000574  loss_mask: 0.2403  loss_dice: 0.3086  loss_ce_0: 0.0006412  loss_mask_0: 0.2408  loss_dice_0: 0.3087  loss_ce_1: 0.0006796  loss_mask_1: 0.2404  loss_dice_1: 0.3082  loss_ce_2: 0.0006663  loss_mask_2: 0.2402  loss_dice_2: 0.3084  loss_ce_3: 0.0006554  loss_mask_3: 0.2403  loss_dice_3: 0.3086  loss_ce_4: 0.0005917  loss_mask_4: 0.2401  loss_dice_4: 0.3086    time: 0.8988  last_time: 0.8483  data_time: 0.0604  last_data_time: 0.0367   lr: 5.3212e-05  max_mem: 11485M
[05/29 18:48:39] d2.utils.events INFO:  eta: 1:13:21  iter: 5059  total_loss: 3.361  loss_ce: 0.0005723  loss_mask: 0.2399  loss_dice: 0.3076  loss_ce_0: 0.0006398  loss_mask_0: 0.2403  loss_dice_0: 0.3079  loss_ce_1: 0.0006774  loss_mask_1: 0.2399  loss_dice_1: 0.3078  loss_ce_2: 0.0006649  loss_mask_2: 0.2398  loss_dice_2: 0.3078  loss_ce_3: 0.0006534  loss_mask_3: 0.2401  loss_dice_3: 0.3077  loss_ce_4: 0.0005888  loss_mask_4: 0.2398  loss_dice_4: 0.3082    time: 0.8987  last_time: 0.8673  data_time: 0.0603  last_data_time: 0.0410   lr: 5.3019e-05  max_mem: 11485M
[05/29 18:48:57] d2.utils.events INFO:  eta: 1:12:57  iter: 5079  total_loss: 3.351  loss_ce: 0.0005707  loss_mask: 0.2394  loss_dice: 0.3068  loss_ce_0: 0.0006389  loss_mask_0: 0.2396  loss_dice_0: 0.3072  loss_ce_1: 0.0006767  loss_mask_1: 0.2394  loss_dice_1: 0.307  loss_ce_2: 0.0006619  loss_mask_2: 0.2395  loss_dice_2: 0.307  loss_ce_3: 0.0006532  loss_mask_3: 0.2395  loss_dice_3: 0.3069  loss_ce_4: 0.0005872  loss_mask_4: 0.2393  loss_dice_4: 0.3075    time: 0.8985  last_time: 0.8352  data_time: 0.0602  last_data_time: 0.0358   lr: 5.2826e-05  max_mem: 11485M
[05/29 18:49:14] d2.utils.events INFO:  eta: 1:12:32  iter: 5099  total_loss: 3.344  loss_ce: 0.0005698  loss_mask: 0.2388  loss_dice: 0.306  loss_ce_0: 0.0006363  loss_mask_0: 0.2392  loss_dice_0: 0.3063  loss_ce_1: 0.0006754  loss_mask_1: 0.2386  loss_dice_1: 0.3065  loss_ce_2: 0.0006608  loss_mask_2: 0.2392  loss_dice_2: 0.3063  loss_ce_3: 0.0006523  loss_mask_3: 0.2387  loss_dice_3: 0.3061  loss_ce_4: 0.0005848  loss_mask_4: 0.2389  loss_dice_4: 0.3069    time: 0.8984  last_time: 0.8843  data_time: 0.0602  last_data_time: 0.0598   lr: 5.2633e-05  max_mem: 11485M
[05/29 18:49:31] d2.utils.events INFO:  eta: 1:12:06  iter: 5119  total_loss: 3.337  loss_ce: 0.0005674  loss_mask: 0.2383  loss_dice: 0.3057  loss_ce_0: 0.0006346  loss_mask_0: 0.2386  loss_dice_0: 0.3057  loss_ce_1: 0.0006727  loss_mask_1: 0.2383  loss_dice_1: 0.3054  loss_ce_2: 0.0006588  loss_mask_2: 0.2386  loss_dice_2: 0.3058  loss_ce_3: 0.000652  loss_mask_3: 0.2383  loss_dice_3: 0.3057  loss_ce_4: 0.0005831  loss_mask_4: 0.2381  loss_dice_4: 0.3059    time: 0.8982  last_time: 0.8385  data_time: 0.0601  last_data_time: 0.0395   lr: 5.2439e-05  max_mem: 11485M
[05/29 18:49:49] d2.utils.events INFO:  eta: 1:11:44  iter: 5139  total_loss: 3.327  loss_ce: 0.0005668  loss_mask: 0.2377  loss_dice: 0.3053  loss_ce_0: 0.0006345  loss_mask_0: 0.2383  loss_dice_0: 0.3051  loss_ce_1: 0.0006704  loss_mask_1: 0.238  loss_dice_1: 0.3049  loss_ce_2: 0.0006567  loss_mask_2: 0.238  loss_dice_2: 0.3051  loss_ce_3: 0.0006505  loss_mask_3: 0.2376  loss_dice_3: 0.3049  loss_ce_4: 0.0005811  loss_mask_4: 0.2377  loss_dice_4: 0.3049    time: 0.8981  last_time: 0.8710  data_time: 0.0600  last_data_time: 0.0479   lr: 5.2246e-05  max_mem: 11485M
[05/29 18:50:06] d2.utils.events INFO:  eta: 1:11:20  iter: 5159  total_loss: 3.321  loss_ce: 0.0005656  loss_mask: 0.2374  loss_dice: 0.3043  loss_ce_0: 0.0006337  loss_mask_0: 0.2378  loss_dice_0: 0.3041  loss_ce_1: 0.000668  loss_mask_1: 0.2376  loss_dice_1: 0.3044  loss_ce_2: 0.0006531  loss_mask_2: 0.2375  loss_dice_2: 0.3042  loss_ce_3: 0.0006481  loss_mask_3: 0.2372  loss_dice_3: 0.3043  loss_ce_4: 0.0005796  loss_mask_4: 0.2371  loss_dice_4: 0.3044    time: 0.8979  last_time: 0.8672  data_time: 0.0600  last_data_time: 0.0487   lr: 5.2052e-05  max_mem: 11485M
[05/29 18:50:23] d2.utils.events INFO:  eta: 1:10:56  iter: 5179  total_loss: 3.315  loss_ce: 0.0005642  loss_mask: 0.2369  loss_dice: 0.3034  loss_ce_0: 0.0006325  loss_mask_0: 0.2371  loss_dice_0: 0.3033  loss_ce_1: 0.0006666  loss_mask_1: 0.237  loss_dice_1: 0.3037  loss_ce_2: 0.0006516  loss_mask_2: 0.2367  loss_dice_2: 0.3034  loss_ce_3: 0.0006463  loss_mask_3: 0.2365  loss_dice_3: 0.3034  loss_ce_4: 0.0005789  loss_mask_4: 0.2363  loss_dice_4: 0.3035    time: 0.8978  last_time: 0.8740  data_time: 0.0599  last_data_time: 0.0398   lr: 5.1859e-05  max_mem: 11485M
[05/29 18:50:41] d2.utils.events INFO:  eta: 1:10:33  iter: 5199  total_loss: 3.308  loss_ce: 0.0005619  loss_mask: 0.2364  loss_dice: 0.3027  loss_ce_0: 0.0006306  loss_mask_0: 0.2367  loss_dice_0: 0.3026  loss_ce_1: 0.0006649  loss_mask_1: 0.2366  loss_dice_1: 0.3028  loss_ce_2: 0.0006499  loss_mask_2: 0.2364  loss_dice_2: 0.3029  loss_ce_3: 0.0006451  loss_mask_3: 0.236  loss_dice_3: 0.3026  loss_ce_4: 0.000576  loss_mask_4: 0.2359  loss_dice_4: 0.3028    time: 0.8977  last_time: 0.8656  data_time: 0.0598  last_data_time: 0.0407   lr: 5.1665e-05  max_mem: 11485M
[05/29 18:50:58] d2.utils.events INFO:  eta: 1:10:15  iter: 5219  total_loss: 3.303  loss_ce: 0.0005602  loss_mask: 0.2358  loss_dice: 0.3017  loss_ce_0: 0.0006283  loss_mask_0: 0.2361  loss_dice_0: 0.3015  loss_ce_1: 0.0006621  loss_mask_1: 0.236  loss_dice_1: 0.3015  loss_ce_2: 0.000648  loss_mask_2: 0.2357  loss_dice_2: 0.3016  loss_ce_3: 0.0006428  loss_mask_3: 0.2353  loss_dice_3: 0.3014  loss_ce_4: 0.0005731  loss_mask_4: 0.2353  loss_dice_4: 0.3018    time: 0.8975  last_time: 0.8639  data_time: 0.0597  last_data_time: 0.0426   lr: 5.1472e-05  max_mem: 11485M
[05/29 18:51:15] d2.utils.events INFO:  eta: 1:09:54  iter: 5239  total_loss: 3.294  loss_ce: 0.0005586  loss_mask: 0.2353  loss_dice: 0.3008  loss_ce_0: 0.0006275  loss_mask_0: 0.2356  loss_dice_0: 0.3009  loss_ce_1: 0.000661  loss_mask_1: 0.2357  loss_dice_1: 0.3007  loss_ce_2: 0.0006467  loss_mask_2: 0.2352  loss_dice_2: 0.3006  loss_ce_3: 0.0006418  loss_mask_3: 0.2349  loss_dice_3: 0.3008  loss_ce_4: 0.0005706  loss_mask_4: 0.2348  loss_dice_4: 0.3011    time: 0.8974  last_time: 0.8472  data_time: 0.0597  last_data_time: 0.0360   lr: 5.1278e-05  max_mem: 11485M
[05/29 18:51:33] d2.utils.events INFO:  eta: 1:09:35  iter: 5259  total_loss: 3.284  loss_ce: 0.0005572  loss_mask: 0.2348  loss_dice: 0.3  loss_ce_0: 0.0006254  loss_mask_0: 0.2352  loss_dice_0: 0.3003  loss_ce_1: 0.0006578  loss_mask_1: 0.2352  loss_dice_1: 0.3  loss_ce_2: 0.0006452  loss_mask_2: 0.235  loss_dice_2: 0.2998  loss_ce_3: 0.0006407  loss_mask_3: 0.2345  loss_dice_3: 0.3001  loss_ce_4: 0.0005687  loss_mask_4: 0.2344  loss_dice_4: 0.3005    time: 0.8972  last_time: 0.8371  data_time: 0.0596  last_data_time: 0.0337   lr: 5.1084e-05  max_mem: 11485M
[05/29 18:51:50] d2.utils.events INFO:  eta: 1:09:15  iter: 5279  total_loss: 3.271  loss_ce: 0.0005541  loss_mask: 0.2342  loss_dice: 0.2989  loss_ce_0: 0.0006242  loss_mask_0: 0.2346  loss_dice_0: 0.2995  loss_ce_1: 0.0006551  loss_mask_1: 0.2346  loss_dice_1: 0.2988  loss_ce_2: 0.0006442  loss_mask_2: 0.2343  loss_dice_2: 0.2986  loss_ce_3: 0.0006398  loss_mask_3: 0.234  loss_dice_3: 0.2995  loss_ce_4: 0.0005665  loss_mask_4: 0.234  loss_dice_4: 0.2995    time: 0.8971  last_time: 0.8837  data_time: 0.0595  last_data_time: 0.0479   lr: 5.089e-05  max_mem: 11485M
[05/29 18:52:07] d2.utils.events INFO:  eta: 1:08:56  iter: 5299  total_loss: 3.261  loss_ce: 0.0005519  loss_mask: 0.2331  loss_dice: 0.2978  loss_ce_0: 0.0006228  loss_mask_0: 0.234  loss_dice_0: 0.2983  loss_ce_1: 0.0006535  loss_mask_1: 0.2339  loss_dice_1: 0.2978  loss_ce_2: 0.000642  loss_mask_2: 0.2336  loss_dice_2: 0.2979  loss_ce_3: 0.0006374  loss_mask_3: 0.2338  loss_dice_3: 0.2981  loss_ce_4: 0.0005643  loss_mask_4: 0.2335  loss_dice_4: 0.2982    time: 0.8970  last_time: 0.8687  data_time: 0.0595  last_data_time: 0.0332   lr: 5.0696e-05  max_mem: 11485M
[05/29 18:52:25] d2.utils.events INFO:  eta: 1:08:36  iter: 5319  total_loss: 3.25  loss_ce: 0.0005502  loss_mask: 0.2325  loss_dice: 0.2972  loss_ce_0: 0.000621  loss_mask_0: 0.2331  loss_dice_0: 0.2973  loss_ce_1: 0.0006498  loss_mask_1: 0.2335  loss_dice_1: 0.297  loss_ce_2: 0.0006399  loss_mask_2: 0.2332  loss_dice_2: 0.297  loss_ce_3: 0.0006364  loss_mask_3: 0.2333  loss_dice_3: 0.297  loss_ce_4: 0.0005631  loss_mask_4: 0.233  loss_dice_4: 0.2972    time: 0.8969  last_time: 0.8845  data_time: 0.0594  last_data_time: 0.0602   lr: 5.0502e-05  max_mem: 11485M
[05/29 18:52:42] d2.utils.events INFO:  eta: 1:08:15  iter: 5339  total_loss: 3.238  loss_ce: 0.0005478  loss_mask: 0.2322  loss_dice: 0.2966  loss_ce_0: 0.0006202  loss_mask_0: 0.2326  loss_dice_0: 0.2966  loss_ce_1: 0.0006482  loss_mask_1: 0.2328  loss_dice_1: 0.2961  loss_ce_2: 0.0006394  loss_mask_2: 0.2325  loss_dice_2: 0.2962  loss_ce_3: 0.0006334  loss_mask_3: 0.2328  loss_dice_3: 0.2963  loss_ce_4: 0.0005598  loss_mask_4: 0.2324  loss_dice_4: 0.2965    time: 0.8968  last_time: 0.8628  data_time: 0.0593  last_data_time: 0.0378   lr: 5.0307e-05  max_mem: 11485M
[05/29 18:53:00] d2.utils.events INFO:  eta: 1:07:55  iter: 5359  total_loss: 3.228  loss_ce: 0.0005463  loss_mask: 0.2316  loss_dice: 0.2954  loss_ce_0: 0.0006177  loss_mask_0: 0.2322  loss_dice_0: 0.2957  loss_ce_1: 0.0006459  loss_mask_1: 0.2323  loss_dice_1: 0.2955  loss_ce_2: 0.0006375  loss_mask_2: 0.2318  loss_dice_2: 0.2953  loss_ce_3: 0.0006304  loss_mask_3: 0.2318  loss_dice_3: 0.295  loss_ce_4: 0.0005587  loss_mask_4: 0.2319  loss_dice_4: 0.2961    time: 0.8967  last_time: 0.8664  data_time: 0.0593  last_data_time: 0.0419   lr: 5.0113e-05  max_mem: 11485M
[05/29 18:53:17] d2.utils.events INFO:  eta: 1:07:36  iter: 5379  total_loss: 3.216  loss_ce: 0.0005448  loss_mask: 0.2311  loss_dice: 0.2944  loss_ce_0: 0.0006163  loss_mask_0: 0.2315  loss_dice_0: 0.2948  loss_ce_1: 0.000643  loss_mask_1: 0.2317  loss_dice_1: 0.2948  loss_ce_2: 0.0006353  loss_mask_2: 0.2313  loss_dice_2: 0.2943  loss_ce_3: 0.0006286  loss_mask_3: 0.2314  loss_dice_3: 0.2942  loss_ce_4: 0.0005566  loss_mask_4: 0.2316  loss_dice_4: 0.2949    time: 0.8966  last_time: 0.8684  data_time: 0.0592  last_data_time: 0.0479   lr: 4.9919e-05  max_mem: 11485M
[05/29 18:53:35] d2.utils.events INFO:  eta: 1:07:13  iter: 5399  total_loss: 3.209  loss_ce: 0.0005431  loss_mask: 0.2305  loss_dice: 0.2931  loss_ce_0: 0.0006152  loss_mask_0: 0.231  loss_dice_0: 0.2934  loss_ce_1: 0.0006413  loss_mask_1: 0.2309  loss_dice_1: 0.2937  loss_ce_2: 0.0006324  loss_mask_2: 0.2305  loss_dice_2: 0.2932  loss_ce_3: 0.0006265  loss_mask_3: 0.2306  loss_dice_3: 0.2935  loss_ce_4: 0.0005556  loss_mask_4: 0.2311  loss_dice_4: 0.2935    time: 0.8965  last_time: 0.8736  data_time: 0.0591  last_data_time: 0.0487   lr: 4.9724e-05  max_mem: 11485M
[05/29 18:53:52] d2.utils.events INFO:  eta: 1:06:54  iter: 5419  total_loss: 3.203  loss_ce: 0.0005406  loss_mask: 0.23  loss_dice: 0.2926  loss_ce_0: 0.0006126  loss_mask_0: 0.2308  loss_dice_0: 0.2924  loss_ce_1: 0.0006384  loss_mask_1: 0.2303  loss_dice_1: 0.2928  loss_ce_2: 0.0006303  loss_mask_2: 0.23  loss_dice_2: 0.2923  loss_ce_3: 0.000625  loss_mask_3: 0.2301  loss_dice_3: 0.2921  loss_ce_4: 0.0005538  loss_mask_4: 0.2304  loss_dice_4: 0.2922    time: 0.8964  last_time: 0.8602  data_time: 0.0591  last_data_time: 0.0332   lr: 4.953e-05  max_mem: 11485M
[05/29 18:54:10] d2.utils.events INFO:  eta: 1:06:35  iter: 5439  total_loss: 3.19  loss_ce: 0.0005394  loss_mask: 0.2297  loss_dice: 0.2917  loss_ce_0: 0.0006107  loss_mask_0: 0.2303  loss_dice_0: 0.2913  loss_ce_1: 0.0006357  loss_mask_1: 0.2299  loss_dice_1: 0.2918  loss_ce_2: 0.0006282  loss_mask_2: 0.2296  loss_dice_2: 0.2917  loss_ce_3: 0.0006229  loss_mask_3: 0.2298  loss_dice_3: 0.2914  loss_ce_4: 0.0005511  loss_mask_4: 0.2298  loss_dice_4: 0.2909    time: 0.8962  last_time: 0.8582  data_time: 0.0590  last_data_time: 0.0315   lr: 4.9335e-05  max_mem: 11485M
[05/29 18:54:27] d2.utils.events INFO:  eta: 1:06:17  iter: 5459  total_loss: 3.179  loss_ce: 0.0005374  loss_mask: 0.2293  loss_dice: 0.2904  loss_ce_0: 0.00061  loss_mask_0: 0.2296  loss_dice_0: 0.2901  loss_ce_1: 0.0006345  loss_mask_1: 0.2295  loss_dice_1: 0.29  loss_ce_2: 0.000627  loss_mask_2: 0.2291  loss_dice_2: 0.2908  loss_ce_3: 0.000621  loss_mask_3: 0.2293  loss_dice_3: 0.2907  loss_ce_4: 0.0005498  loss_mask_4: 0.2293  loss_dice_4: 0.2901    time: 0.8961  last_time: 0.8988  data_time: 0.0589  last_data_time: 0.0549   lr: 4.914e-05  max_mem: 11485M
[05/29 18:54:45] d2.utils.events INFO:  eta: 1:05:56  iter: 5479  total_loss: 3.171  loss_ce: 0.0005369  loss_mask: 0.2288  loss_dice: 0.2895  loss_ce_0: 0.0006092  loss_mask_0: 0.2291  loss_dice_0: 0.2893  loss_ce_1: 0.0006332  loss_mask_1: 0.2293  loss_dice_1: 0.2893  loss_ce_2: 0.000625  loss_mask_2: 0.2287  loss_dice_2: 0.2898  loss_ce_3: 0.0006194  loss_mask_3: 0.2289  loss_dice_3: 0.2899  loss_ce_4: 0.0005492  loss_mask_4: 0.2288  loss_dice_4: 0.2893    time: 0.8960  last_time: 0.8673  data_time: 0.0589  last_data_time: 0.0417   lr: 4.8945e-05  max_mem: 11485M
[05/29 18:55:02] d2.utils.events INFO:  eta: 1:05:37  iter: 5499  total_loss: 3.166  loss_ce: 0.0005349  loss_mask: 0.2284  loss_dice: 0.2886  loss_ce_0: 0.0006072  loss_mask_0: 0.2287  loss_dice_0: 0.2882  loss_ce_1: 0.000632  loss_mask_1: 0.2287  loss_dice_1: 0.2885  loss_ce_2: 0.0006234  loss_mask_2: 0.2282  loss_dice_2: 0.2885  loss_ce_3: 0.0006175  loss_mask_3: 0.2284  loss_dice_3: 0.2887  loss_ce_4: 0.0005476  loss_mask_4: 0.2283  loss_dice_4: 0.2888    time: 0.8959  last_time: 0.8555  data_time: 0.0588  last_data_time: 0.0401   lr: 4.875e-05  max_mem: 11485M
[05/29 18:55:19] d2.utils.events INFO:  eta: 1:05:18  iter: 5519  total_loss: 3.157  loss_ce: 0.0005334  loss_mask: 0.2281  loss_dice: 0.2879  loss_ce_0: 0.000606  loss_mask_0: 0.2283  loss_dice_0: 0.2875  loss_ce_1: 0.0006311  loss_mask_1: 0.2279  loss_dice_1: 0.2879  loss_ce_2: 0.0006223  loss_mask_2: 0.2278  loss_dice_2: 0.2878  loss_ce_3: 0.0006162  loss_mask_3: 0.228  loss_dice_3: 0.2882  loss_ce_4: 0.0005468  loss_mask_4: 0.2277  loss_dice_4: 0.288    time: 0.8958  last_time: 0.8794  data_time: 0.0587  last_data_time: 0.0547   lr: 4.8555e-05  max_mem: 11485M
[05/29 18:55:37] d2.utils.events INFO:  eta: 1:04:58  iter: 5539  total_loss: 3.15  loss_ce: 0.0005316  loss_mask: 0.2276  loss_dice: 0.287  loss_ce_0: 0.0006053  loss_mask_0: 0.2279  loss_dice_0: 0.287  loss_ce_1: 0.0006296  loss_mask_1: 0.2272  loss_dice_1: 0.2871  loss_ce_2: 0.0006202  loss_mask_2: 0.2271  loss_dice_2: 0.287  loss_ce_3: 0.0006146  loss_mask_3: 0.2276  loss_dice_3: 0.2873  loss_ce_4: 0.000544  loss_mask_4: 0.2274  loss_dice_4: 0.287    time: 0.8957  last_time: 0.8513  data_time: 0.0587  last_data_time: 0.0321   lr: 4.836e-05  max_mem: 11485M
[05/29 18:55:54] d2.utils.events INFO:  eta: 1:04:37  iter: 5559  total_loss: 3.14  loss_ce: 0.0005292  loss_mask: 0.2272  loss_dice: 0.2864  loss_ce_0: 0.0006041  loss_mask_0: 0.2271  loss_dice_0: 0.2861  loss_ce_1: 0.0006276  loss_mask_1: 0.2268  loss_dice_1: 0.2863  loss_ce_2: 0.0006181  loss_mask_2: 0.2267  loss_dice_2: 0.2865  loss_ce_3: 0.000613  loss_mask_3: 0.2273  loss_dice_3: 0.2866  loss_ce_4: 0.0005413  loss_mask_4: 0.2268  loss_dice_4: 0.2862    time: 0.8956  last_time: 0.8693  data_time: 0.0586  last_data_time: 0.0440   lr: 4.8165e-05  max_mem: 11485M
[05/29 18:56:12] d2.utils.events INFO:  eta: 1:04:16  iter: 5579  total_loss: 3.13  loss_ce: 0.0005278  loss_mask: 0.2266  loss_dice: 0.2856  loss_ce_0: 0.0006018  loss_mask_0: 0.2267  loss_dice_0: 0.2857  loss_ce_1: 0.0006259  loss_mask_1: 0.2263  loss_dice_1: 0.2855  loss_ce_2: 0.000615  loss_mask_2: 0.2264  loss_dice_2: 0.2857  loss_ce_3: 0.0006115  loss_mask_3: 0.2267  loss_dice_3: 0.2858  loss_ce_4: 0.0005397  loss_mask_4: 0.2261  loss_dice_4: 0.2851    time: 0.8955  last_time: 0.8890  data_time: 0.0586  last_data_time: 0.0479   lr: 4.797e-05  max_mem: 11485M
[05/29 18:56:29] d2.utils.events INFO:  eta: 1:03:55  iter: 5599  total_loss: 3.118  loss_ce: 0.0005256  loss_mask: 0.2262  loss_dice: 0.2846  loss_ce_0: 0.0005997  loss_mask_0: 0.2263  loss_dice_0: 0.2851  loss_ce_1: 0.0006233  loss_mask_1: 0.2261  loss_dice_1: 0.2847  loss_ce_2: 0.0006124  loss_mask_2: 0.226  loss_dice_2: 0.2846  loss_ce_3: 0.000609  loss_mask_3: 0.2262  loss_dice_3: 0.285  loss_ce_4: 0.0005377  loss_mask_4: 0.2257  loss_dice_4: 0.2844    time: 0.8953  last_time: 0.8769  data_time: 0.0585  last_data_time: 0.0541   lr: 4.7775e-05  max_mem: 11485M
[05/29 18:56:47] d2.utils.events INFO:  eta: 1:03:35  iter: 5619  total_loss: 3.112  loss_ce: 0.0005246  loss_mask: 0.2256  loss_dice: 0.2839  loss_ce_0: 0.0005993  loss_mask_0: 0.2259  loss_dice_0: 0.2837  loss_ce_1: 0.000621  loss_mask_1: 0.2255  loss_dice_1: 0.2838  loss_ce_2: 0.0006115  loss_mask_2: 0.2254  loss_dice_2: 0.2835  loss_ce_3: 0.0006084  loss_mask_3: 0.2258  loss_dice_3: 0.2841  loss_ce_4: 0.0005367  loss_mask_4: 0.2253  loss_dice_4: 0.2837    time: 0.8953  last_time: 0.8648  data_time: 0.0584  last_data_time: 0.0411   lr: 4.7579e-05  max_mem: 11485M
[05/29 18:57:05] d2.utils.events INFO:  eta: 1:03:17  iter: 5639  total_loss: 3.105  loss_ce: 0.0005228  loss_mask: 0.2249  loss_dice: 0.283  loss_ce_0: 0.0005983  loss_mask_0: 0.2252  loss_dice_0: 0.2829  loss_ce_1: 0.0006182  loss_mask_1: 0.225  loss_dice_1: 0.2829  loss_ce_2: 0.000608  loss_mask_2: 0.225  loss_dice_2: 0.2827  loss_ce_3: 0.0006053  loss_mask_3: 0.2251  loss_dice_3: 0.2831  loss_ce_4: 0.0005339  loss_mask_4: 0.2247  loss_dice_4: 0.2828    time: 0.8952  last_time: 0.8675  data_time: 0.0584  last_data_time: 0.0452   lr: 4.7384e-05  max_mem: 11485M
[05/29 18:57:23] d2.utils.events INFO:  eta: 1:03:00  iter: 5659  total_loss: 3.098  loss_ce: 0.0005215  loss_mask: 0.2244  loss_dice: 0.2821  loss_ce_0: 0.0005962  loss_mask_0: 0.2243  loss_dice_0: 0.2823  loss_ce_1: 0.0006157  loss_mask_1: 0.2242  loss_dice_1: 0.282  loss_ce_2: 0.0006061  loss_mask_2: 0.2244  loss_dice_2: 0.2819  loss_ce_3: 0.0006033  loss_mask_3: 0.2246  loss_dice_3: 0.2822  loss_ce_4: 0.0005315  loss_mask_4: 0.2242  loss_dice_4: 0.2816    time: 0.8953  last_time: 0.8988  data_time: 0.0585  last_data_time: 0.0545   lr: 4.7188e-05  max_mem: 11485M
[05/29 18:57:41] d2.utils.events INFO:  eta: 1:02:42  iter: 5679  total_loss: 3.083  loss_ce: 0.0005202  loss_mask: 0.2238  loss_dice: 0.281  loss_ce_0: 0.0005947  loss_mask_0: 0.2239  loss_dice_0: 0.281  loss_ce_1: 0.0006139  loss_mask_1: 0.2238  loss_dice_1: 0.2808  loss_ce_2: 0.0006028  loss_mask_2: 0.2238  loss_dice_2: 0.281  loss_ce_3: 0.0006012  loss_mask_3: 0.224  loss_dice_3: 0.2812  loss_ce_4: 0.0005301  loss_mask_4: 0.2236  loss_dice_4: 0.281    time: 0.8953  last_time: 0.8968  data_time: 0.0585  last_data_time: 0.0611   lr: 4.6992e-05  max_mem: 11485M
[05/29 18:58:00] d2.utils.events INFO:  eta: 1:02:25  iter: 5699  total_loss: 3.077  loss_ce: 0.0005191  loss_mask: 0.2232  loss_dice: 0.2802  loss_ce_0: 0.000594  loss_mask_0: 0.2236  loss_dice_0: 0.2802  loss_ce_1: 0.000613  loss_mask_1: 0.2233  loss_dice_1: 0.2801  loss_ce_2: 0.0006006  loss_mask_2: 0.2233  loss_dice_2: 0.2799  loss_ce_3: 0.0006002  loss_mask_3: 0.2238  loss_dice_3: 0.2805  loss_ce_4: 0.0005288  loss_mask_4: 0.2233  loss_dice_4: 0.28    time: 0.8954  last_time: 0.9483  data_time: 0.0585  last_data_time: 0.0897   lr: 4.6796e-05  max_mem: 11485M
[05/29 18:58:18] d2.utils.events INFO:  eta: 1:02:07  iter: 5719  total_loss: 3.069  loss_ce: 0.000518  loss_mask: 0.2227  loss_dice: 0.279  loss_ce_0: 0.0005925  loss_mask_0: 0.2231  loss_dice_0: 0.2794  loss_ce_1: 0.0006113  loss_mask_1: 0.2229  loss_dice_1: 0.279  loss_ce_2: 0.0005985  loss_mask_2: 0.223  loss_dice_2: 0.2792  loss_ce_3: 0.0006002  loss_mask_3: 0.2232  loss_dice_3: 0.2794  loss_ce_4: 0.0005275  loss_mask_4: 0.2229  loss_dice_4: 0.279    time: 0.8954  last_time: 0.8686  data_time: 0.0585  last_data_time: 0.0344   lr: 4.6601e-05  max_mem: 11485M
[05/29 18:58:35] d2.utils.events INFO:  eta: 1:01:47  iter: 5739  total_loss: 3.061  loss_ce: 0.0005165  loss_mask: 0.2222  loss_dice: 0.2783  loss_ce_0: 0.0005916  loss_mask_0: 0.2224  loss_dice_0: 0.2784  loss_ce_1: 0.0006093  loss_mask_1: 0.2225  loss_dice_1: 0.2784  loss_ce_2: 0.000597  loss_mask_2: 0.222  loss_dice_2: 0.2782  loss_ce_3: 0.000598  loss_mask_3: 0.2228  loss_dice_3: 0.2786  loss_ce_4: 0.0005257  loss_mask_4: 0.2222  loss_dice_4: 0.2782    time: 0.8953  last_time: 0.8716  data_time: 0.0585  last_data_time: 0.0405   lr: 4.6405e-05  max_mem: 11485M
[05/29 18:58:52] d2.utils.events INFO:  eta: 1:01:27  iter: 5759  total_loss: 3.047  loss_ce: 0.0005149  loss_mask: 0.2218  loss_dice: 0.277  loss_ce_0: 0.0005904  loss_mask_0: 0.222  loss_dice_0: 0.2772  loss_ce_1: 0.0006061  loss_mask_1: 0.2219  loss_dice_1: 0.2773  loss_ce_2: 0.0005949  loss_mask_2: 0.2216  loss_dice_2: 0.277  loss_ce_3: 0.0005961  loss_mask_3: 0.222  loss_dice_3: 0.277  loss_ce_4: 0.000524  loss_mask_4: 0.2217  loss_dice_4: 0.2773    time: 0.8952  last_time: 0.8664  data_time: 0.0584  last_data_time: 0.0444   lr: 4.6208e-05  max_mem: 11485M
[05/29 18:59:10] d2.utils.events INFO:  eta: 1:01:07  iter: 5779  total_loss: 3.041  loss_ce: 0.0005136  loss_mask: 0.2211  loss_dice: 0.2758  loss_ce_0: 0.0005893  loss_mask_0: 0.2218  loss_dice_0: 0.2763  loss_ce_1: 0.0006044  loss_mask_1: 0.2215  loss_dice_1: 0.2758  loss_ce_2: 0.0005931  loss_mask_2: 0.2213  loss_dice_2: 0.276  loss_ce_3: 0.0005949  loss_mask_3: 0.2218  loss_dice_3: 0.2758  loss_ce_4: 0.0005219  loss_mask_4: 0.2215  loss_dice_4: 0.2758    time: 0.8950  last_time: 0.8566  data_time: 0.0583  last_data_time: 0.0392   lr: 4.6012e-05  max_mem: 11485M
[05/29 18:59:28] d2.utils.events INFO:  eta: 1:00:50  iter: 5799  total_loss: 3.034  loss_ce: 0.0005119  loss_mask: 0.2208  loss_dice: 0.2752  loss_ce_0: 0.0005872  loss_mask_0: 0.2208  loss_dice_0: 0.2755  loss_ce_1: 0.0006008  loss_mask_1: 0.2211  loss_dice_1: 0.2752  loss_ce_2: 0.0005914  loss_mask_2: 0.2206  loss_dice_2: 0.2751  loss_ce_3: 0.0005936  loss_mask_3: 0.2214  loss_dice_3: 0.2754  loss_ce_4: 0.00052  loss_mask_4: 0.2208  loss_dice_4: 0.275    time: 0.8950  last_time: 0.8844  data_time: 0.0583  last_data_time: 0.0536   lr: 4.5816e-05  max_mem: 11485M
[05/29 18:59:45] d2.utils.events INFO:  eta: 1:00:32  iter: 5819  total_loss: 3.022  loss_ce: 0.0005104  loss_mask: 0.2204  loss_dice: 0.2743  loss_ce_0: 0.0005858  loss_mask_0: 0.2203  loss_dice_0: 0.2748  loss_ce_1: 0.0005988  loss_mask_1: 0.2203  loss_dice_1: 0.2747  loss_ce_2: 0.0005893  loss_mask_2: 0.22  loss_dice_2: 0.2743  loss_ce_3: 0.0005921  loss_mask_3: 0.221  loss_dice_3: 0.275  loss_ce_4: 0.0005182  loss_mask_4: 0.2203  loss_dice_4: 0.2748    time: 0.8950  last_time: 0.8688  data_time: 0.0583  last_data_time: 0.0422   lr: 4.562e-05  max_mem: 11485M
[05/29 19:00:03] d2.utils.events INFO:  eta: 1:00:15  iter: 5839  total_loss: 3.014  loss_ce: 0.0005089  loss_mask: 0.2194  loss_dice: 0.274  loss_ce_0: 0.000585  loss_mask_0: 0.2196  loss_dice_0: 0.2741  loss_ce_1: 0.0005971  loss_mask_1: 0.2197  loss_dice_1: 0.2741  loss_ce_2: 0.0005873  loss_mask_2: 0.2193  loss_dice_2: 0.2737  loss_ce_3: 0.0005902  loss_mask_3: 0.2201  loss_dice_3: 0.2744  loss_ce_4: 0.0005174  loss_mask_4: 0.2196  loss_dice_4: 0.2742    time: 0.8949  last_time: 0.8680  data_time: 0.0583  last_data_time: 0.0483   lr: 4.5423e-05  max_mem: 11485M
[05/29 19:00:21] d2.utils.events INFO:  eta: 0:59:57  iter: 5859  total_loss: 3.008  loss_ce: 0.000507  loss_mask: 0.2188  loss_dice: 0.2735  loss_ce_0: 0.0005822  loss_mask_0: 0.2192  loss_dice_0: 0.2734  loss_ce_1: 0.0005951  loss_mask_1: 0.2189  loss_dice_1: 0.2735  loss_ce_2: 0.0005863  loss_mask_2: 0.2189  loss_dice_2: 0.2733  loss_ce_3: 0.0005887  loss_mask_3: 0.2195  loss_dice_3: 0.2737  loss_ce_4: 0.000516  loss_mask_4: 0.2188  loss_dice_4: 0.2735    time: 0.8948  last_time: 0.8757  data_time: 0.0582  last_data_time: 0.0443   lr: 4.5227e-05  max_mem: 11485M
[05/29 19:00:38] d2.utils.events INFO:  eta: 0:59:39  iter: 5879  total_loss: 3  loss_ce: 0.0005053  loss_mask: 0.2183  loss_dice: 0.273  loss_ce_0: 0.0005791  loss_mask_0: 0.2189  loss_dice_0: 0.2728  loss_ce_1: 0.0005939  loss_mask_1: 0.2185  loss_dice_1: 0.2728  loss_ce_2: 0.0005847  loss_mask_2: 0.2185  loss_dice_2: 0.2728  loss_ce_3: 0.0005872  loss_mask_3: 0.2191  loss_dice_3: 0.2728  loss_ce_4: 0.000514  loss_mask_4: 0.2182  loss_dice_4: 0.2731    time: 0.8948  last_time: 0.9262  data_time: 0.0582  last_data_time: 0.0940   lr: 4.503e-05  max_mem: 11485M
[05/29 19:00:56] d2.utils.events INFO:  eta: 0:59:21  iter: 5899  total_loss: 2.992  loss_ce: 0.0005038  loss_mask: 0.218  loss_dice: 0.2725  loss_ce_0: 0.0005772  loss_mask_0: 0.2184  loss_dice_0: 0.2725  loss_ce_1: 0.0005933  loss_mask_1: 0.2182  loss_dice_1: 0.2723  loss_ce_2: 0.0005829  loss_mask_2: 0.218  loss_dice_2: 0.2721  loss_ce_3: 0.0005846  loss_mask_3: 0.2187  loss_dice_3: 0.2723  loss_ce_4: 0.0005121  loss_mask_4: 0.2178  loss_dice_4: 0.2724    time: 0.8947  last_time: 0.8481  data_time: 0.0582  last_data_time: 0.0308   lr: 4.4833e-05  max_mem: 11485M
[05/29 19:01:13] d2.utils.events INFO:  eta: 0:59:02  iter: 5919  total_loss: 2.984  loss_ce: 0.0005026  loss_mask: 0.2177  loss_dice: 0.272  loss_ce_0: 0.0005757  loss_mask_0: 0.2179  loss_dice_0: 0.272  loss_ce_1: 0.0005916  loss_mask_1: 0.2178  loss_dice_1: 0.2718  loss_ce_2: 0.0005812  loss_mask_2: 0.2176  loss_dice_2: 0.2717  loss_ce_3: 0.0005829  loss_mask_3: 0.2181  loss_dice_3: 0.2715  loss_ce_4: 0.000511  loss_mask_4: 0.2174  loss_dice_4: 0.2715    time: 0.8946  last_time: 0.8521  data_time: 0.0581  last_data_time: 0.0330   lr: 4.4636e-05  max_mem: 11485M
[05/29 19:01:31] d2.utils.events INFO:  eta: 0:58:43  iter: 5939  total_loss: 2.979  loss_ce: 0.0005003  loss_mask: 0.2168  loss_dice: 0.2709  loss_ce_0: 0.000574  loss_mask_0: 0.2172  loss_dice_0: 0.2713  loss_ce_1: 0.00059  loss_mask_1: 0.2172  loss_dice_1: 0.2709  loss_ce_2: 0.0005796  loss_mask_2: 0.2171  loss_dice_2: 0.271  loss_ce_3: 0.0005822  loss_mask_3: 0.2177  loss_dice_3: 0.271  loss_ce_4: 0.0005098  loss_mask_4: 0.217  loss_dice_4: 0.271    time: 0.8945  last_time: 0.8703  data_time: 0.0580  last_data_time: 0.0410   lr: 4.444e-05  max_mem: 11485M
[05/29 19:01:48] d2.utils.events INFO:  eta: 0:58:25  iter: 5959  total_loss: 2.969  loss_ce: 0.0004982  loss_mask: 0.2163  loss_dice: 0.2702  loss_ce_0: 0.0005716  loss_mask_0: 0.2168  loss_dice_0: 0.2706  loss_ce_1: 0.0005881  loss_mask_1: 0.2163  loss_dice_1: 0.2703  loss_ce_2: 0.0005764  loss_mask_2: 0.2165  loss_dice_2: 0.2704  loss_ce_3: 0.000581  loss_mask_3: 0.2169  loss_dice_3: 0.2705  loss_ce_4: 0.0005076  loss_mask_4: 0.2161  loss_dice_4: 0.2705    time: 0.8944  last_time: 0.8347  data_time: 0.0580  last_data_time: 0.0378   lr: 4.4243e-05  max_mem: 11485M
[05/29 19:02:06] d2.utils.events INFO:  eta: 0:58:07  iter: 5979  total_loss: 2.96  loss_ce: 0.000497  loss_mask: 0.2158  loss_dice: 0.2697  loss_ce_0: 0.0005703  loss_mask_0: 0.2161  loss_dice_0: 0.2701  loss_ce_1: 0.0005859  loss_mask_1: 0.2156  loss_dice_1: 0.2695  loss_ce_2: 0.0005734  loss_mask_2: 0.216  loss_dice_2: 0.2698  loss_ce_3: 0.0005789  loss_mask_3: 0.2163  loss_dice_3: 0.2699  loss_ce_4: 0.0005063  loss_mask_4: 0.2157  loss_dice_4: 0.2697    time: 0.8943  last_time: 0.8581  data_time: 0.0580  last_data_time: 0.0480   lr: 4.4045e-05  max_mem: 11485M
[05/29 19:02:23] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/climatenet_v2/model_0005999.pth
[05/29 19:02:24] d2.utils.events INFO:  eta: 0:57:49  iter: 5999  total_loss: 2.956  loss_ce: 0.0004952  loss_mask: 0.2154  loss_dice: 0.2694  loss_ce_0: 0.0005684  loss_mask_0: 0.2156  loss_dice_0: 0.2694  loss_ce_1: 0.0005838  loss_mask_1: 0.2152  loss_dice_1: 0.269  loss_ce_2: 0.0005716  loss_mask_2: 0.2151  loss_dice_2: 0.2693  loss_ce_3: 0.0005778  loss_mask_3: 0.2159  loss_dice_3: 0.2694  loss_ce_4: 0.0005045  loss_mask_4: 0.2154  loss_dice_4: 0.2693    time: 0.8942  last_time: 0.8593  data_time: 0.0579  last_data_time: 0.0399   lr: 4.3848e-05  max_mem: 11485M
[05/29 19:02:41] d2.utils.events INFO:  eta: 0:57:31  iter: 6019  total_loss: 2.95  loss_ce: 0.0004929  loss_mask: 0.2148  loss_dice: 0.2686  loss_ce_0: 0.0005676  loss_mask_0: 0.215  loss_dice_0: 0.2688  loss_ce_1: 0.0005808  loss_mask_1: 0.2149  loss_dice_1: 0.2686  loss_ce_2: 0.0005691  loss_mask_2: 0.2143  loss_dice_2: 0.2688  loss_ce_3: 0.0005754  loss_mask_3: 0.2154  loss_dice_3: 0.2692  loss_ce_4: 0.0005031  loss_mask_4: 0.2147  loss_dice_4: 0.2686    time: 0.8941  last_time: 0.8804  data_time: 0.0579  last_data_time: 0.0483   lr: 4.3651e-05  max_mem: 11485M
[05/29 19:02:58] d2.utils.events INFO:  eta: 0:57:14  iter: 6039  total_loss: 2.939  loss_ce: 0.0004913  loss_mask: 0.2141  loss_dice: 0.2684  loss_ce_0: 0.0005651  loss_mask_0: 0.2144  loss_dice_0: 0.268  loss_ce_1: 0.000578  loss_mask_1: 0.2143  loss_dice_1: 0.268  loss_ce_2: 0.0005665  loss_mask_2: 0.2139  loss_dice_2: 0.2683  loss_ce_3: 0.0005738  loss_mask_3: 0.2151  loss_dice_3: 0.2687  loss_ce_4: 0.000502  loss_mask_4: 0.2142  loss_dice_4: 0.2682    time: 0.8940  last_time: 0.8531  data_time: 0.0578  last_data_time: 0.0398   lr: 4.3453e-05  max_mem: 11485M
[05/29 19:03:16] d2.utils.events INFO:  eta: 0:56:56  iter: 6059  total_loss: 2.933  loss_ce: 0.0004899  loss_mask: 0.2136  loss_dice: 0.268  loss_ce_0: 0.0005625  loss_mask_0: 0.214  loss_dice_0: 0.2675  loss_ce_1: 0.0005749  loss_mask_1: 0.2135  loss_dice_1: 0.2675  loss_ce_2: 0.0005638  loss_mask_2: 0.2137  loss_dice_2: 0.2678  loss_ce_3: 0.0005712  loss_mask_3: 0.2144  loss_dice_3: 0.2681  loss_ce_4: 0.0004995  loss_mask_4: 0.2136  loss_dice_4: 0.2677    time: 0.8939  last_time: 0.8566  data_time: 0.0577  last_data_time: 0.0466   lr: 4.3256e-05  max_mem: 11485M
[05/29 19:03:33] d2.utils.events INFO:  eta: 0:56:38  iter: 6079  total_loss: 2.925  loss_ce: 0.0004886  loss_mask: 0.2129  loss_dice: 0.2675  loss_ce_0: 0.0005599  loss_mask_0: 0.2135  loss_dice_0: 0.2672  loss_ce_1: 0.000573  loss_mask_1: 0.2131  loss_dice_1: 0.2669  loss_ce_2: 0.0005616  loss_mask_2: 0.213  loss_dice_2: 0.2674  loss_ce_3: 0.0005687  loss_mask_3: 0.2137  loss_dice_3: 0.2676  loss_ce_4: 0.0004968  loss_mask_4: 0.2129  loss_dice_4: 0.2672    time: 0.8938  last_time: 0.8675  data_time: 0.0577  last_data_time: 0.0347   lr: 4.3058e-05  max_mem: 11485M
[05/29 19:03:51] d2.utils.events INFO:  eta: 0:56:22  iter: 6099  total_loss: 2.915  loss_ce: 0.0004872  loss_mask: 0.2124  loss_dice: 0.2669  loss_ce_0: 0.0005577  loss_mask_0: 0.2131  loss_dice_0: 0.2665  loss_ce_1: 0.0005713  loss_mask_1: 0.2124  loss_dice_1: 0.2664  loss_ce_2: 0.0005576  loss_mask_2: 0.2124  loss_dice_2: 0.2667  loss_ce_3: 0.000567  loss_mask_3: 0.2133  loss_dice_3: 0.267  loss_ce_4: 0.0004946  loss_mask_4: 0.2124  loss_dice_4: 0.2666    time: 0.8938  last_time: 0.9135  data_time: 0.0577  last_data_time: 0.0602   lr: 4.2861e-05  max_mem: 11485M
[05/29 19:04:09] d2.utils.events INFO:  eta: 0:56:06  iter: 6119  total_loss: 2.91  loss_ce: 0.000485  loss_mask: 0.2119  loss_dice: 0.2663  loss_ce_0: 0.0005561  loss_mask_0: 0.2126  loss_dice_0: 0.2661  loss_ce_1: 0.0005693  loss_mask_1: 0.2118  loss_dice_1: 0.2659  loss_ce_2: 0.0005555  loss_mask_2: 0.2118  loss_dice_2: 0.2661  loss_ce_3: 0.0005657  loss_mask_3: 0.2128  loss_dice_3: 0.2666  loss_ce_4: 0.0004937  loss_mask_4: 0.2122  loss_dice_4: 0.2662    time: 0.8938  last_time: 0.9147  data_time: 0.0577  last_data_time: 0.0637   lr: 4.2663e-05  max_mem: 11485M
[05/29 19:04:27] d2.utils.events INFO:  eta: 0:55:50  iter: 6139  total_loss: 2.903  loss_ce: 0.0004842  loss_mask: 0.2117  loss_dice: 0.2657  loss_ce_0: 0.0005548  loss_mask_0: 0.2121  loss_dice_0: 0.2656  loss_ce_1: 0.0005675  loss_mask_1: 0.2113  loss_dice_1: 0.2656  loss_ce_2: 0.0005528  loss_mask_2: 0.2112  loss_dice_2: 0.2656  loss_ce_3: 0.0005644  loss_mask_3: 0.2122  loss_dice_3: 0.2661  loss_ce_4: 0.0004911  loss_mask_4: 0.2112  loss_dice_4: 0.2654    time: 0.8938  last_time: 0.9452  data_time: 0.0577  last_data_time: 0.0926   lr: 4.2465e-05  max_mem: 11485M
[05/29 19:04:45] d2.utils.events INFO:  eta: 0:55:33  iter: 6159  total_loss: 2.895  loss_ce: 0.0004822  loss_mask: 0.2112  loss_dice: 0.2653  loss_ce_0: 0.0005538  loss_mask_0: 0.2113  loss_dice_0: 0.2652  loss_ce_1: 0.0005662  loss_mask_1: 0.2109  loss_dice_1: 0.2651  loss_ce_2: 0.0005505  loss_mask_2: 0.2108  loss_dice_2: 0.265  loss_ce_3: 0.0005624  loss_mask_3: 0.2116  loss_dice_3: 0.2656  loss_ce_4: 0.0004887  loss_mask_4: 0.2109  loss_dice_4: 0.2651    time: 0.8937  last_time: 0.8542  data_time: 0.0576  last_data_time: 0.0402   lr: 4.2267e-05  max_mem: 11485M
[05/29 19:05:02] d2.utils.events INFO:  eta: 0:55:16  iter: 6179  total_loss: 2.889  loss_ce: 0.0004815  loss_mask: 0.2107  loss_dice: 0.2649  loss_ce_0: 0.0005534  loss_mask_0: 0.2107  loss_dice_0: 0.2644  loss_ce_1: 0.0005653  loss_mask_1: 0.2103  loss_dice_1: 0.2648  loss_ce_2: 0.0005493  loss_mask_2: 0.2102  loss_dice_2: 0.2647  loss_ce_3: 0.0005608  loss_mask_3: 0.2111  loss_dice_3: 0.2651  loss_ce_4: 0.0004866  loss_mask_4: 0.2104  loss_dice_4: 0.2647    time: 0.8937  last_time: 0.8566  data_time: 0.0576  last_data_time: 0.0421   lr: 4.2069e-05  max_mem: 11485M
[05/29 19:05:21] d2.utils.events INFO:  eta: 0:55:00  iter: 6199  total_loss: 2.883  loss_ce: 0.0004795  loss_mask: 0.2102  loss_dice: 0.2645  loss_ce_0: 0.0005513  loss_mask_0: 0.2104  loss_dice_0: 0.2637  loss_ce_1: 0.0005622  loss_mask_1: 0.2098  loss_dice_1: 0.2643  loss_ce_2: 0.000546  loss_mask_2: 0.2098  loss_dice_2: 0.2642  loss_ce_3: 0.0005572  loss_mask_3: 0.2107  loss_dice_3: 0.2645  loss_ce_4: 0.0004851  loss_mask_4: 0.21  loss_dice_4: 0.2644    time: 0.8937  last_time: 0.9435  data_time: 0.0576  last_data_time: 0.0892   lr: 4.187e-05  max_mem: 11485M
[05/29 19:05:39] d2.utils.events INFO:  eta: 0:54:44  iter: 6219  total_loss: 2.875  loss_ce: 0.0004778  loss_mask: 0.2096  loss_dice: 0.2641  loss_ce_0: 0.0005498  loss_mask_0: 0.2095  loss_dice_0: 0.2633  loss_ce_1: 0.0005595  loss_mask_1: 0.2091  loss_dice_1: 0.2637  loss_ce_2: 0.0005434  loss_mask_2: 0.2092  loss_dice_2: 0.2637  loss_ce_3: 0.0005562  loss_mask_3: 0.2104  loss_dice_3: 0.2638  loss_ce_4: 0.0004832  loss_mask_4: 0.2092  loss_dice_4: 0.2638    time: 0.8938  last_time: 0.9214  data_time: 0.0577  last_data_time: 0.0780   lr: 4.1672e-05  max_mem: 11485M
[05/29 19:05:58] d2.utils.events INFO:  eta: 0:54:30  iter: 6239  total_loss: 2.867  loss_ce: 0.0004756  loss_mask: 0.2088  loss_dice: 0.2637  loss_ce_0: 0.0005472  loss_mask_0: 0.209  loss_dice_0: 0.2629  loss_ce_1: 0.0005578  loss_mask_1: 0.2088  loss_dice_1: 0.2632  loss_ce_2: 0.0005427  loss_mask_2: 0.2087  loss_dice_2: 0.2632  loss_ce_3: 0.0005556  loss_mask_3: 0.21  loss_dice_3: 0.2633  loss_ce_4: 0.0004813  loss_mask_4: 0.2088  loss_dice_4: 0.2634    time: 0.8939  last_time: 0.9418  data_time: 0.0578  last_data_time: 0.0897   lr: 4.1474e-05  max_mem: 11485M
[05/29 19:06:17] d2.utils.events INFO:  eta: 0:54:15  iter: 6259  total_loss: 2.863  loss_ce: 0.0004731  loss_mask: 0.2084  loss_dice: 0.2629  loss_ce_0: 0.0005456  loss_mask_0: 0.2085  loss_dice_0: 0.2623  loss_ce_1: 0.0005553  loss_mask_1: 0.2084  loss_dice_1: 0.2625  loss_ce_2: 0.0005411  loss_mask_2: 0.2081  loss_dice_2: 0.2628  loss_ce_3: 0.0005534  loss_mask_3: 0.2098  loss_dice_3: 0.2629  loss_ce_4: 0.0004793  loss_mask_4: 0.2083  loss_dice_4: 0.2631    time: 0.8940  last_time: 0.9074  data_time: 0.0578  last_data_time: 0.0544   lr: 4.1275e-05  max_mem: 11485M
[05/29 19:06:36] d2.utils.events INFO:  eta: 0:54:00  iter: 6279  total_loss: 2.857  loss_ce: 0.0004705  loss_mask: 0.2079  loss_dice: 0.2623  loss_ce_0: 0.000544  loss_mask_0: 0.2081  loss_dice_0: 0.262  loss_ce_1: 0.0005531  loss_mask_1: 0.2079  loss_dice_1: 0.2621  loss_ce_2: 0.0005391  loss_mask_2: 0.2077  loss_dice_2: 0.2621  loss_ce_3: 0.0005518  loss_mask_3: 0.2093  loss_dice_3: 0.2623  loss_ce_4: 0.0004781  loss_mask_4: 0.2076  loss_dice_4: 0.2627    time: 0.8942  last_time: 0.9509  data_time: 0.0579  last_data_time: 0.0891   lr: 4.1077e-05  max_mem: 11485M
[05/29 19:06:54] d2.utils.events INFO:  eta: 0:53:45  iter: 6299  total_loss: 2.847  loss_ce: 0.000468  loss_mask: 0.2074  loss_dice: 0.2615  loss_ce_0: 0.0005423  loss_mask_0: 0.2078  loss_dice_0: 0.2617  loss_ce_1: 0.0005506  loss_mask_1: 0.2073  loss_dice_1: 0.2618  loss_ce_2: 0.0005376  loss_mask_2: 0.2073  loss_dice_2: 0.2614  loss_ce_3: 0.0005501  loss_mask_3: 0.2084  loss_dice_3: 0.262  loss_ce_4: 0.000476  loss_mask_4: 0.2069  loss_dice_4: 0.262    time: 0.8942  last_time: 0.9260  data_time: 0.0579  last_data_time: 0.0882   lr: 4.0878e-05  max_mem: 11485M
[05/29 19:07:13] d2.utils.events INFO:  eta: 0:53:29  iter: 6319  total_loss: 2.836  loss_ce: 0.0004672  loss_mask: 0.2067  loss_dice: 0.261  loss_ce_0: 0.0005408  loss_mask_0: 0.2071  loss_dice_0: 0.2613  loss_ce_1: 0.0005481  loss_mask_1: 0.2068  loss_dice_1: 0.2613  loss_ce_2: 0.0005358  loss_mask_2: 0.2068  loss_dice_2: 0.261  loss_ce_3: 0.0005472  loss_mask_3: 0.2078  loss_dice_3: 0.2613  loss_ce_4: 0.0004734  loss_mask_4: 0.2064  loss_dice_4: 0.2614    time: 0.8943  last_time: 0.9446  data_time: 0.0580  last_data_time: 0.0923   lr: 4.0679e-05  max_mem: 11485M
[05/29 19:07:32] d2.utils.events INFO:  eta: 0:53:15  iter: 6339  total_loss: 2.828  loss_ce: 0.0004661  loss_mask: 0.2064  loss_dice: 0.2606  loss_ce_0: 0.0005385  loss_mask_0: 0.2068  loss_dice_0: 0.2609  loss_ce_1: 0.000547  loss_mask_1: 0.2064  loss_dice_1: 0.2608  loss_ce_2: 0.0005341  loss_mask_2: 0.2064  loss_dice_2: 0.2604  loss_ce_3: 0.0005457  loss_mask_3: 0.2075  loss_dice_3: 0.2608  loss_ce_4: 0.000472  loss_mask_4: 0.2061  loss_dice_4: 0.2609    time: 0.8945  last_time: 0.9171  data_time: 0.0581  last_data_time: 0.0867   lr: 4.048e-05  max_mem: 11485M
[05/29 19:07:51] d2.utils.events INFO:  eta: 0:53:00  iter: 6359  total_loss: 2.824  loss_ce: 0.0004651  loss_mask: 0.2056  loss_dice: 0.2603  loss_ce_0: 0.0005372  loss_mask_0: 0.2061  loss_dice_0: 0.2604  loss_ce_1: 0.0005451  loss_mask_1: 0.206  loss_dice_1: 0.2605  loss_ce_2: 0.0005302  loss_mask_2: 0.2058  loss_dice_2: 0.2601  loss_ce_3: 0.0005431  loss_mask_3: 0.2068  loss_dice_3: 0.2603  loss_ce_4: 0.0004703  loss_mask_4: 0.2053  loss_dice_4: 0.2603    time: 0.8946  last_time: 0.9161  data_time: 0.0582  last_data_time: 0.0725   lr: 4.0281e-05  max_mem: 11485M
[05/29 19:08:09] d2.utils.events INFO:  eta: 0:52:47  iter: 6379  total_loss: 2.817  loss_ce: 0.0004636  loss_mask: 0.2053  loss_dice: 0.2597  loss_ce_0: 0.0005346  loss_mask_0: 0.2054  loss_dice_0: 0.2597  loss_ce_1: 0.0005421  loss_mask_1: 0.2055  loss_dice_1: 0.2601  loss_ce_2: 0.0005268  loss_mask_2: 0.2052  loss_dice_2: 0.2595  loss_ce_3: 0.0005406  loss_mask_3: 0.2064  loss_dice_3: 0.26  loss_ce_4: 0.0004683  loss_mask_4: 0.2047  loss_dice_4: 0.2596    time: 0.8947  last_time: 0.9222  data_time: 0.0582  last_data_time: 0.0812   lr: 4.0082e-05  max_mem: 11485M
[05/29 19:08:28] d2.utils.events INFO:  eta: 0:52:32  iter: 6399  total_loss: 2.809  loss_ce: 0.0004629  loss_mask: 0.2045  loss_dice: 0.2592  loss_ce_0: 0.000533  loss_mask_0: 0.205  loss_dice_0: 0.2593  loss_ce_1: 0.0005402  loss_mask_1: 0.2051  loss_dice_1: 0.2593  loss_ce_2: 0.0005232  loss_mask_2: 0.2047  loss_dice_2: 0.2589  loss_ce_3: 0.0005388  loss_mask_3: 0.206  loss_dice_3: 0.2594  loss_ce_4: 0.0004673  loss_mask_4: 0.2043  loss_dice_4: 0.2592    time: 0.8948  last_time: 0.9414  data_time: 0.0583  last_data_time: 0.0896   lr: 3.9882e-05  max_mem: 11485M
[05/29 19:08:47] d2.utils.events INFO:  eta: 0:52:18  iter: 6419  total_loss: 2.801  loss_ce: 0.0004612  loss_mask: 0.204  loss_dice: 0.2588  loss_ce_0: 0.0005301  loss_mask_0: 0.2046  loss_dice_0: 0.2587  loss_ce_1: 0.0005378  loss_mask_1: 0.2044  loss_dice_1: 0.2588  loss_ce_2: 0.0005205  loss_mask_2: 0.2042  loss_dice_2: 0.2587  loss_ce_3: 0.0005368  loss_mask_3: 0.2056  loss_dice_3: 0.2586  loss_ce_4: 0.0004653  loss_mask_4: 0.2037  loss_dice_4: 0.2584    time: 0.8949  last_time: 0.9294  data_time: 0.0584  last_data_time: 0.0749   lr: 3.9683e-05  max_mem: 11485M
[05/29 19:09:06] d2.utils.events INFO:  eta: 0:52:07  iter: 6439  total_loss: 2.794  loss_ce: 0.0004603  loss_mask: 0.2034  loss_dice: 0.2581  loss_ce_0: 0.0005287  loss_mask_0: 0.2041  loss_dice_0: 0.2582  loss_ce_1: 0.0005352  loss_mask_1: 0.204  loss_dice_1: 0.2579  loss_ce_2: 0.0005182  loss_mask_2: 0.2039  loss_dice_2: 0.258  loss_ce_3: 0.0005347  loss_mask_3: 0.205  loss_dice_3: 0.258  loss_ce_4: 0.0004615  loss_mask_4: 0.2035  loss_dice_4: 0.2579    time: 0.8950  last_time: 0.9206  data_time: 0.0585  last_data_time: 0.0647   lr: 3.9483e-05  max_mem: 11485M
[05/29 19:09:24] d2.utils.events INFO:  eta: 0:51:52  iter: 6459  total_loss: 2.786  loss_ce: 0.0004584  loss_mask: 0.2031  loss_dice: 0.2572  loss_ce_0: 0.0005269  loss_mask_0: 0.2037  loss_dice_0: 0.2577  loss_ce_1: 0.0005332  loss_mask_1: 0.2034  loss_dice_1: 0.2574  loss_ce_2: 0.0005156  loss_mask_2: 0.2035  loss_dice_2: 0.2576  loss_ce_3: 0.0005324  loss_mask_3: 0.2046  loss_dice_3: 0.2572  loss_ce_4: 0.0004592  loss_mask_4: 0.203  loss_dice_4: 0.2576    time: 0.8950  last_time: 0.9431  data_time: 0.0585  last_data_time: 0.0972   lr: 3.9284e-05  max_mem: 11485M
[05/29 19:09:43] d2.utils.events INFO:  eta: 0:51:40  iter: 6479  total_loss: 2.78  loss_ce: 0.0004572  loss_mask: 0.2028  loss_dice: 0.2568  loss_ce_0: 0.0005244  loss_mask_0: 0.2032  loss_dice_0: 0.2571  loss_ce_1: 0.0005308  loss_mask_1: 0.2029  loss_dice_1: 0.257  loss_ce_2: 0.0005124  loss_mask_2: 0.2032  loss_dice_2: 0.2574  loss_ce_3: 0.000531  loss_mask_3: 0.2042  loss_dice_3: 0.2568  loss_ce_4: 0.0004558  loss_mask_4: 0.2025  loss_dice_4: 0.2569    time: 0.8951  last_time: 0.9473  data_time: 0.0586  last_data_time: 0.1033   lr: 3.9084e-05  max_mem: 11485M
[05/29 19:10:01] d2.utils.events INFO:  eta: 0:51:31  iter: 6499  total_loss: 2.774  loss_ce: 0.0004554  loss_mask: 0.2019  loss_dice: 0.2564  loss_ce_0: 0.000523  loss_mask_0: 0.2027  loss_dice_0: 0.2565  loss_ce_1: 0.0005274  loss_mask_1: 0.2021  loss_dice_1: 0.2565  loss_ce_2: 0.0005093  loss_mask_2: 0.2026  loss_dice_2: 0.2567  loss_ce_3: 0.0005295  loss_mask_3: 0.2034  loss_dice_3: 0.2566  loss_ce_4: 0.0004537  loss_mask_4: 0.2021  loss_dice_4: 0.2563    time: 0.8952  last_time: 0.9175  data_time: 0.0587  last_data_time: 0.0696   lr: 3.8884e-05  max_mem: 11485M
[05/29 19:10:20] d2.utils.events INFO:  eta: 0:51:21  iter: 6519  total_loss: 2.766  loss_ce: 0.0004537  loss_mask: 0.2016  loss_dice: 0.2559  loss_ce_0: 0.0005218  loss_mask_0: 0.2023  loss_dice_0: 0.2562  loss_ce_1: 0.0005259  loss_mask_1: 0.2015  loss_dice_1: 0.2561  loss_ce_2: 0.0005065  loss_mask_2: 0.2023  loss_dice_2: 0.2562  loss_ce_3: 0.0005277  loss_mask_3: 0.2031  loss_dice_3: 0.2562  loss_ce_4: 0.0004515  loss_mask_4: 0.2015  loss_dice_4: 0.2559    time: 0.8953  last_time: 0.9392  data_time: 0.0588  last_data_time: 0.0960   lr: 3.8684e-05  max_mem: 11485M
[05/29 19:10:39] d2.utils.events INFO:  eta: 0:51:12  iter: 6539  total_loss: 2.76  loss_ce: 0.0004525  loss_mask: 0.2013  loss_dice: 0.2555  loss_ce_0: 0.0005189  loss_mask_0: 0.2017  loss_dice_0: 0.2555  loss_ce_1: 0.0005239  loss_mask_1: 0.2012  loss_dice_1: 0.2556  loss_ce_2: 0.0005032  loss_mask_2: 0.2019  loss_dice_2: 0.2558  loss_ce_3: 0.0005254  loss_mask_3: 0.2027  loss_dice_3: 0.2557  loss_ce_4: 0.0004484  loss_mask_4: 0.2012  loss_dice_4: 0.2555    time: 0.8954  last_time: 0.9176  data_time: 0.0588  last_data_time: 0.0789   lr: 3.8484e-05  max_mem: 11485M
[05/29 19:10:58] d2.utils.events INFO:  eta: 0:51:08  iter: 6559  total_loss: 2.755  loss_ce: 0.0004514  loss_mask: 0.2009  loss_dice: 0.2553  loss_ce_0: 0.0005183  loss_mask_0: 0.2012  loss_dice_0: 0.2551  loss_ce_1: 0.0005223  loss_mask_1: 0.2007  loss_dice_1: 0.2552  loss_ce_2: 0.0005026  loss_mask_2: 0.2013  loss_dice_2: 0.2554  loss_ce_3: 0.000524  loss_mask_3: 0.2022  loss_dice_3: 0.255  loss_ce_4: 0.0004474  loss_mask_4: 0.2007  loss_dice_4: 0.2552    time: 0.8955  last_time: 0.9143  data_time: 0.0589  last_data_time: 0.0803   lr: 3.8284e-05  max_mem: 11485M
[05/29 19:11:16] d2.utils.events INFO:  eta: 0:51:01  iter: 6579  total_loss: 2.75  loss_ce: 0.0004504  loss_mask: 0.2005  loss_dice: 0.2549  loss_ce_0: 0.0005169  loss_mask_0: 0.2006  loss_dice_0: 0.2546  loss_ce_1: 0.0005203  loss_mask_1: 0.2003  loss_dice_1: 0.255  loss_ce_2: 0.0005017  loss_mask_2: 0.2006  loss_dice_2: 0.2548  loss_ce_3: 0.0005216  loss_mask_3: 0.2018  loss_dice_3: 0.2546  loss_ce_4: 0.0004446  loss_mask_4: 0.2004  loss_dice_4: 0.2548    time: 0.8956  last_time: 0.9447  data_time: 0.0589  last_data_time: 0.1057   lr: 3.8084e-05  max_mem: 11485M
[05/29 19:11:35] d2.utils.events INFO:  eta: 0:50:54  iter: 6599  total_loss: 2.741  loss_ce: 0.0004476  loss_mask: 0.2  loss_dice: 0.2544  loss_ce_0: 0.0005135  loss_mask_0: 0.2002  loss_dice_0: 0.2542  loss_ce_1: 0.0005172  loss_mask_1: 0.1998  loss_dice_1: 0.2544  loss_ce_2: 0.0004984  loss_mask_2: 0.2001  loss_dice_2: 0.2545  loss_ce_3: 0.0005172  loss_mask_3: 0.2013  loss_dice_3: 0.2544  loss_ce_4: 0.000443  loss_mask_4: 0.2  loss_dice_4: 0.2544    time: 0.8957  last_time: 0.9338  data_time: 0.0590  last_data_time: 0.0867   lr: 3.7883e-05  max_mem: 11485M
[05/29 19:11:54] d2.utils.events INFO:  eta: 0:50:47  iter: 6619  total_loss: 2.736  loss_ce: 0.0004454  loss_mask: 0.1997  loss_dice: 0.254  loss_ce_0: 0.0005114  loss_mask_0: 0.1997  loss_dice_0: 0.2536  loss_ce_1: 0.0005147  loss_mask_1: 0.1994  loss_dice_1: 0.2538  loss_ce_2: 0.0004959  loss_mask_2: 0.1997  loss_dice_2: 0.2541  loss_ce_3: 0.0005158  loss_mask_3: 0.2008  loss_dice_3: 0.2538  loss_ce_4: 0.0004404  loss_mask_4: 0.1995  loss_dice_4: 0.2541    time: 0.8958  last_time: 0.9077  data_time: 0.0591  last_data_time: 0.0679   lr: 3.7683e-05  max_mem: 11485M
[05/29 19:12:12] d2.utils.events INFO:  eta: 0:50:34  iter: 6639  total_loss: 2.731  loss_ce: 0.0004438  loss_mask: 0.1993  loss_dice: 0.2534  loss_ce_0: 0.0005096  loss_mask_0: 0.1994  loss_dice_0: 0.2533  loss_ce_1: 0.0005116  loss_mask_1: 0.199  loss_dice_1: 0.2536  loss_ce_2: 0.000492  loss_mask_2: 0.1992  loss_dice_2: 0.2537  loss_ce_3: 0.0005128  loss_mask_3: 0.2005  loss_dice_3: 0.2533  loss_ce_4: 0.000439  loss_mask_4: 0.1991  loss_dice_4: 0.2535    time: 0.8958  last_time: 0.9405  data_time: 0.0591  last_data_time: 0.1019   lr: 3.7482e-05  max_mem: 11485M
[05/29 19:12:31] d2.utils.events INFO:  eta: 0:50:20  iter: 6659  total_loss: 2.727  loss_ce: 0.0004414  loss_mask: 0.199  loss_dice: 0.2529  loss_ce_0: 0.0005072  loss_mask_0: 0.1991  loss_dice_0: 0.253  loss_ce_1: 0.0005081  loss_mask_1: 0.1989  loss_dice_1: 0.2532  loss_ce_2: 0.0004906  loss_mask_2: 0.199  loss_dice_2: 0.2533  loss_ce_3: 0.0005104  loss_mask_3: 0.1999  loss_dice_3: 0.2529  loss_ce_4: 0.0004384  loss_mask_4: 0.1986  loss_dice_4: 0.253    time: 0.8959  last_time: 0.9259  data_time: 0.0592  last_data_time: 0.1000   lr: 3.7281e-05  max_mem: 11485M
[05/29 19:12:50] d2.utils.events INFO:  eta: 0:50:03  iter: 6679  total_loss: 2.72  loss_ce: 0.0004394  loss_mask: 0.1984  loss_dice: 0.2526  loss_ce_0: 0.0005054  loss_mask_0: 0.1988  loss_dice_0: 0.2527  loss_ce_1: 0.0005045  loss_mask_1: 0.1981  loss_dice_1: 0.2529  loss_ce_2: 0.0004864  loss_mask_2: 0.1985  loss_dice_2: 0.2529  loss_ce_3: 0.0005048  loss_mask_3: 0.1996  loss_dice_3: 0.2523  loss_ce_4: 0.0004359  loss_mask_4: 0.1982  loss_dice_4: 0.2523    time: 0.8960  last_time: 0.9091  data_time: 0.0593  last_data_time: 0.0618   lr: 3.708e-05  max_mem: 11485M
[05/29 19:13:08] d2.utils.events INFO:  eta: 0:49:44  iter: 6699  total_loss: 2.715  loss_ce: 0.0004375  loss_mask: 0.1981  loss_dice: 0.2522  loss_ce_0: 0.0005035  loss_mask_0: 0.1983  loss_dice_0: 0.2521  loss_ce_1: 0.0005027  loss_mask_1: 0.1977  loss_dice_1: 0.2526  loss_ce_2: 0.0004844  loss_mask_2: 0.1981  loss_dice_2: 0.2525  loss_ce_3: 0.0005027  loss_mask_3: 0.1994  loss_dice_3: 0.252  loss_ce_4: 0.0004343  loss_mask_4: 0.1977  loss_dice_4: 0.252    time: 0.8960  last_time: 0.8521  data_time: 0.0593  last_data_time: 0.0387   lr: 3.6879e-05  max_mem: 11485M
[05/29 19:13:25] d2.utils.events INFO:  eta: 0:49:25  iter: 6719  total_loss: 2.712  loss_ce: 0.0004365  loss_mask: 0.1974  loss_dice: 0.2519  loss_ce_0: 0.0005007  loss_mask_0: 0.1979  loss_dice_0: 0.2518  loss_ce_1: 0.0005007  loss_mask_1: 0.1973  loss_dice_1: 0.2518  loss_ce_2: 0.0004831  loss_mask_2: 0.1977  loss_dice_2: 0.2522  loss_ce_3: 0.0005006  loss_mask_3: 0.1988  loss_dice_3: 0.2517  loss_ce_4: 0.0004323  loss_mask_4: 0.1972  loss_dice_4: 0.2516    time: 0.8959  last_time: 0.8567  data_time: 0.0593  last_data_time: 0.0417   lr: 3.6678e-05  max_mem: 11485M
[05/29 19:13:43] d2.utils.events INFO:  eta: 0:49:07  iter: 6739  total_loss: 2.708  loss_ce: 0.0004348  loss_mask: 0.1971  loss_dice: 0.2516  loss_ce_0: 0.0004987  loss_mask_0: 0.1974  loss_dice_0: 0.2513  loss_ce_1: 0.0004979  loss_mask_1: 0.1968  loss_dice_1: 0.2514  loss_ce_2: 0.0004815  loss_mask_2: 0.1973  loss_dice_2: 0.2515  loss_ce_3: 0.000497  loss_mask_3: 0.1982  loss_dice_3: 0.2513  loss_ce_4: 0.0004301  loss_mask_4: 0.197  loss_dice_4: 0.2512    time: 0.8958  last_time: 0.8799  data_time: 0.0592  last_data_time: 0.0597   lr: 3.6477e-05  max_mem: 11485M
[05/29 19:14:00] d2.utils.events INFO:  eta: 0:48:50  iter: 6759  total_loss: 2.702  loss_ce: 0.0004311  loss_mask: 0.1965  loss_dice: 0.2512  loss_ce_0: 0.0004953  loss_mask_0: 0.197  loss_dice_0: 0.2509  loss_ce_1: 0.0004958  loss_mask_1: 0.1963  loss_dice_1: 0.251  loss_ce_2: 0.0004799  loss_mask_2: 0.1968  loss_dice_2: 0.2512  loss_ce_3: 0.0004941  loss_mask_3: 0.1977  loss_dice_3: 0.2507  loss_ce_4: 0.0004274  loss_mask_4: 0.1966  loss_dice_4: 0.2509    time: 0.8958  last_time: 0.8739  data_time: 0.0592  last_data_time: 0.0425   lr: 3.6275e-05  max_mem: 11485M
[05/29 19:14:18] d2.utils.events INFO:  eta: 0:48:32  iter: 6779  total_loss: 2.697  loss_ce: 0.0004285  loss_mask: 0.1961  loss_dice: 0.2509  loss_ce_0: 0.0004939  loss_mask_0: 0.1964  loss_dice_0: 0.2506  loss_ce_1: 0.0004927  loss_mask_1: 0.1957  loss_dice_1: 0.2505  loss_ce_2: 0.0004775  loss_mask_2: 0.1961  loss_dice_2: 0.2508  loss_ce_3: 0.0004917  loss_mask_3: 0.1975  loss_dice_3: 0.2504  loss_ce_4: 0.0004245  loss_mask_4: 0.196  loss_dice_4: 0.2505    time: 0.8957  last_time: 0.9245  data_time: 0.0591  last_data_time: 0.0745   lr: 3.6074e-05  max_mem: 11485M
[05/29 19:14:36] d2.utils.events INFO:  eta: 0:48:15  iter: 6799  total_loss: 2.688  loss_ce: 0.0004257  loss_mask: 0.1957  loss_dice: 0.2501  loss_ce_0: 0.0004921  loss_mask_0: 0.1961  loss_dice_0: 0.2503  loss_ce_1: 0.0004919  loss_mask_1: 0.1953  loss_dice_1: 0.2502  loss_ce_2: 0.0004758  loss_mask_2: 0.1956  loss_dice_2: 0.2504  loss_ce_3: 0.0004901  loss_mask_3: 0.197  loss_dice_3: 0.2502  loss_ce_4: 0.0004229  loss_mask_4: 0.1956  loss_dice_4: 0.2502    time: 0.8957  last_time: 0.8802  data_time: 0.0591  last_data_time: 0.0516   lr: 3.5872e-05  max_mem: 11485M
[05/29 19:14:54] d2.utils.events INFO:  eta: 0:47:58  iter: 6819  total_loss: 2.682  loss_ce: 0.0004223  loss_mask: 0.1954  loss_dice: 0.2499  loss_ce_0: 0.0004891  loss_mask_0: 0.1958  loss_dice_0: 0.2499  loss_ce_1: 0.0004895  loss_mask_1: 0.1949  loss_dice_1: 0.2496  loss_ce_2: 0.0004736  loss_mask_2: 0.1951  loss_dice_2: 0.25  loss_ce_3: 0.0004886  loss_mask_3: 0.1966  loss_dice_3: 0.2498  loss_ce_4: 0.0004191  loss_mask_4: 0.1952  loss_dice_4: 0.2498    time: 0.8957  last_time: 0.9023  data_time: 0.0591  last_data_time: 0.0498   lr: 3.567e-05  max_mem: 11485M
[05/29 19:15:12] d2.utils.events INFO:  eta: 0:47:40  iter: 6839  total_loss: 2.679  loss_ce: 0.0004193  loss_mask: 0.1949  loss_dice: 0.2495  loss_ce_0: 0.0004865  loss_mask_0: 0.1952  loss_dice_0: 0.2495  loss_ce_1: 0.0004879  loss_mask_1: 0.1946  loss_dice_1: 0.2494  loss_ce_2: 0.000472  loss_mask_2: 0.1948  loss_dice_2: 0.2498  loss_ce_3: 0.0004846  loss_mask_3: 0.1961  loss_dice_3: 0.2492  loss_ce_4: 0.0004168  loss_mask_4: 0.1947  loss_dice_4: 0.2494    time: 0.8957  last_time: 0.8564  data_time: 0.0591  last_data_time: 0.0356   lr: 3.5468e-05  max_mem: 11485M
[05/29 19:15:29] d2.utils.events INFO:  eta: 0:47:21  iter: 6859  total_loss: 2.673  loss_ce: 0.0004167  loss_mask: 0.1945  loss_dice: 0.2491  loss_ce_0: 0.0004842  loss_mask_0: 0.1946  loss_dice_0: 0.2491  loss_ce_1: 0.0004856  loss_mask_1: 0.1942  loss_dice_1: 0.249  loss_ce_2: 0.0004705  loss_mask_2: 0.1943  loss_dice_2: 0.2491  loss_ce_3: 0.0004822  loss_mask_3: 0.1957  loss_dice_3: 0.2487  loss_ce_4: 0.0004149  loss_mask_4: 0.1945  loss_dice_4: 0.2489    time: 0.8956  last_time: 0.8709  data_time: 0.0591  last_data_time: 0.0452   lr: 3.5266e-05  max_mem: 11485M
[05/29 19:15:47] d2.utils.events INFO:  eta: 0:47:02  iter: 6879  total_loss: 2.668  loss_ce: 0.0004141  loss_mask: 0.194  loss_dice: 0.2484  loss_ce_0: 0.0004818  loss_mask_0: 0.1941  loss_dice_0: 0.2488  loss_ce_1: 0.000481  loss_mask_1: 0.1936  loss_dice_1: 0.2486  loss_ce_2: 0.0004672  loss_mask_2: 0.1939  loss_dice_2: 0.2486  loss_ce_3: 0.0004794  loss_mask_3: 0.1951  loss_dice_3: 0.2483  loss_ce_4: 0.0004127  loss_mask_4: 0.194  loss_dice_4: 0.2485    time: 0.8955  last_time: 0.8624  data_time: 0.0590  last_data_time: 0.0401   lr: 3.5064e-05  max_mem: 11485M
[05/29 19:16:05] d2.utils.events INFO:  eta: 0:46:44  iter: 6899  total_loss: 2.662  loss_ce: 0.0004127  loss_mask: 0.1936  loss_dice: 0.2482  loss_ce_0: 0.00048  loss_mask_0: 0.1938  loss_dice_0: 0.2483  loss_ce_1: 0.0004792  loss_mask_1: 0.1932  loss_dice_1: 0.2481  loss_ce_2: 0.0004665  loss_mask_2: 0.1936  loss_dice_2: 0.2482  loss_ce_3: 0.0004774  loss_mask_3: 0.1945  loss_dice_3: 0.2479  loss_ce_4: 0.0004109  loss_mask_4: 0.1934  loss_dice_4: 0.248    time: 0.8955  last_time: 0.8560  data_time: 0.0590  last_data_time: 0.0369   lr: 3.4862e-05  max_mem: 11485M
[05/29 19:16:22] d2.utils.events INFO:  eta: 0:46:25  iter: 6919  total_loss: 2.656  loss_ce: 0.0004099  loss_mask: 0.193  loss_dice: 0.2476  loss_ce_0: 0.0004767  loss_mask_0: 0.1933  loss_dice_0: 0.2479  loss_ce_1: 0.000475  loss_mask_1: 0.1929  loss_dice_1: 0.2477  loss_ce_2: 0.0004641  loss_mask_2: 0.193  loss_dice_2: 0.2477  loss_ce_3: 0.0004746  loss_mask_3: 0.1939  loss_dice_3: 0.2477  loss_ce_4: 0.0004085  loss_mask_4: 0.193  loss_dice_4: 0.2475    time: 0.8954  last_time: 0.8470  data_time: 0.0589  last_data_time: 0.0330   lr: 3.466e-05  max_mem: 11485M
[05/29 19:16:40] d2.utils.events INFO:  eta: 0:46:07  iter: 6939  total_loss: 2.65  loss_ce: 0.0004071  loss_mask: 0.1926  loss_dice: 0.2471  loss_ce_0: 0.0004749  loss_mask_0: 0.1929  loss_dice_0: 0.2474  loss_ce_1: 0.0004725  loss_mask_1: 0.1923  loss_dice_1: 0.2473  loss_ce_2: 0.0004631  loss_mask_2: 0.1925  loss_dice_2: 0.2472  loss_ce_3: 0.0004731  loss_mask_3: 0.1935  loss_dice_3: 0.2473  loss_ce_4: 0.0004071  loss_mask_4: 0.1924  loss_dice_4: 0.2471    time: 0.8953  last_time: 0.8615  data_time: 0.0589  last_data_time: 0.0426   lr: 3.4457e-05  max_mem: 11485M
[05/29 19:16:57] d2.utils.events INFO:  eta: 0:45:48  iter: 6959  total_loss: 2.645  loss_ce: 0.0004013  loss_mask: 0.1923  loss_dice: 0.2468  loss_ce_0: 0.0004741  loss_mask_0: 0.1923  loss_dice_0: 0.2469  loss_ce_1: 0.0004695  loss_mask_1: 0.192  loss_dice_1: 0.2469  loss_ce_2: 0.0004609  loss_mask_2: 0.1921  loss_dice_2: 0.2468  loss_ce_3: 0.0004706  loss_mask_3: 0.193  loss_dice_3: 0.2469  loss_ce_4: 0.0004053  loss_mask_4: 0.192  loss_dice_4: 0.2465    time: 0.8952  last_time: 0.8895  data_time: 0.0589  last_data_time: 0.0511   lr: 3.4254e-05  max_mem: 11485M
[05/29 19:17:15] d2.utils.events INFO:  eta: 0:45:31  iter: 6979  total_loss: 2.641  loss_ce: 0.0003982  loss_mask: 0.1919  loss_dice: 0.2464  loss_ce_0: 0.0004714  loss_mask_0: 0.192  loss_dice_0: 0.2464  loss_ce_1: 0.0004672  loss_mask_1: 0.1916  loss_dice_1: 0.2465  loss_ce_2: 0.0004586  loss_mask_2: 0.1916  loss_dice_2: 0.2464  loss_ce_3: 0.0004686  loss_mask_3: 0.1926  loss_dice_3: 0.2462  loss_ce_4: 0.0004026  loss_mask_4: 0.1917  loss_dice_4: 0.2461    time: 0.8951  last_time: 0.8428  data_time: 0.0588  last_data_time: 0.0358   lr: 3.4051e-05  max_mem: 11485M
[05/29 19:17:32] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/climatenet_v2/model_0006999.pth
[05/29 19:17:33] d2.utils.events INFO:  eta: 0:45:13  iter: 6999  total_loss: 2.638  loss_ce: 0.0003965  loss_mask: 0.1914  loss_dice: 0.2456  loss_ce_0: 0.0004699  loss_mask_0: 0.1917  loss_dice_0: 0.246  loss_ce_1: 0.0004635  loss_mask_1: 0.191  loss_dice_1: 0.2461  loss_ce_2: 0.0004567  loss_mask_2: 0.1913  loss_dice_2: 0.246  loss_ce_3: 0.0004663  loss_mask_3: 0.1922  loss_dice_3: 0.2457  loss_ce_4: 0.0003993  loss_mask_4: 0.1913  loss_dice_4: 0.2457    time: 0.8950  last_time: 0.8419  data_time: 0.0588  last_data_time: 0.0375   lr: 3.3848e-05  max_mem: 11485M
[05/29 19:17:50] d2.utils.events INFO:  eta: 0:44:55  iter: 7019  total_loss: 2.635  loss_ce: 0.0003936  loss_mask: 0.1911  loss_dice: 0.2453  loss_ce_0: 0.0004674  loss_mask_0: 0.1912  loss_dice_0: 0.2456  loss_ce_1: 0.0004602  loss_mask_1: 0.1907  loss_dice_1: 0.2456  loss_ce_2: 0.0004553  loss_mask_2: 0.1911  loss_dice_2: 0.2456  loss_ce_3: 0.0004636  loss_mask_3: 0.1917  loss_dice_3: 0.2453  loss_ce_4: 0.0003975  loss_mask_4: 0.1907  loss_dice_4: 0.2453    time: 0.8950  last_time: 0.8597  data_time: 0.0588  last_data_time: 0.0412   lr: 3.3645e-05  max_mem: 11485M
[05/29 19:18:08] d2.utils.events INFO:  eta: 0:44:39  iter: 7039  total_loss: 2.63  loss_ce: 0.0003918  loss_mask: 0.1903  loss_dice: 0.245  loss_ce_0: 0.0004642  loss_mask_0: 0.1905  loss_dice_0: 0.2453  loss_ce_1: 0.0004584  loss_mask_1: 0.1902  loss_dice_1: 0.245  loss_ce_2: 0.0004532  loss_mask_2: 0.1906  loss_dice_2: 0.245  loss_ce_3: 0.0004624  loss_mask_3: 0.1913  loss_dice_3: 0.2451  loss_ce_4: 0.0003937  loss_mask_4: 0.1903  loss_dice_4: 0.2449    time: 0.8950  last_time: 0.9397  data_time: 0.0588  last_data_time: 0.0814   lr: 3.3442e-05  max_mem: 11485M
[05/29 19:18:26] d2.utils.events INFO:  eta: 0:44:21  iter: 7059  total_loss: 2.626  loss_ce: 0.0003888  loss_mask: 0.19  loss_dice: 0.2446  loss_ce_0: 0.0004622  loss_mask_0: 0.1902  loss_dice_0: 0.245  loss_ce_1: 0.0004555  loss_mask_1: 0.1899  loss_dice_1: 0.2448  loss_ce_2: 0.0004516  loss_mask_2: 0.1903  loss_dice_2: 0.2447  loss_ce_3: 0.0004588  loss_mask_3: 0.1909  loss_dice_3: 0.2447  loss_ce_4: 0.0003915  loss_mask_4: 0.1898  loss_dice_4: 0.2445    time: 0.8949  last_time: 0.8856  data_time: 0.0587  last_data_time: 0.0534   lr: 3.3239e-05  max_mem: 11485M
[05/29 19:18:43] d2.utils.events INFO:  eta: 0:44:03  iter: 7079  total_loss: 2.62  loss_ce: 0.0003868  loss_mask: 0.1897  loss_dice: 0.244  loss_ce_0: 0.0004589  loss_mask_0: 0.1899  loss_dice_0: 0.2445  loss_ce_1: 0.0004513  loss_mask_1: 0.1896  loss_dice_1: 0.2443  loss_ce_2: 0.000449  loss_mask_2: 0.1899  loss_dice_2: 0.2444  loss_ce_3: 0.0004553  loss_mask_3: 0.1906  loss_dice_3: 0.2443  loss_ce_4: 0.0003884  loss_mask_4: 0.1892  loss_dice_4: 0.2442    time: 0.8948  last_time: 0.8672  data_time: 0.0587  last_data_time: 0.0434   lr: 3.3035e-05  max_mem: 11485M
[05/29 19:19:01] d2.utils.events INFO:  eta: 0:43:43  iter: 7099  total_loss: 2.614  loss_ce: 0.0003836  loss_mask: 0.1895  loss_dice: 0.2435  loss_ce_0: 0.0004559  loss_mask_0: 0.1896  loss_dice_0: 0.2439  loss_ce_1: 0.0004483  loss_mask_1: 0.1893  loss_dice_1: 0.244  loss_ce_2: 0.0004473  loss_mask_2: 0.1895  loss_dice_2: 0.2439  loss_ce_3: 0.0004529  loss_mask_3: 0.1903  loss_dice_3: 0.2439  loss_ce_4: 0.0003849  loss_mask_4: 0.1889  loss_dice_4: 0.2438    time: 0.8948  last_time: 0.9125  data_time: 0.0586  last_data_time: 0.0546   lr: 3.2832e-05  max_mem: 11485M
[05/29 19:19:18] d2.utils.events INFO:  eta: 0:43:24  iter: 7119  total_loss: 2.612  loss_ce: 0.0003813  loss_mask: 0.1891  loss_dice: 0.2433  loss_ce_0: 0.0004526  loss_mask_0: 0.1892  loss_dice_0: 0.2434  loss_ce_1: 0.0004457  loss_mask_1: 0.1889  loss_dice_1: 0.2434  loss_ce_2: 0.0004438  loss_mask_2: 0.1893  loss_dice_2: 0.2436  loss_ce_3: 0.0004497  loss_mask_3: 0.1899  loss_dice_3: 0.2436  loss_ce_4: 0.0003824  loss_mask_4: 0.1887  loss_dice_4: 0.2434    time: 0.8947  last_time: 0.8476  data_time: 0.0586  last_data_time: 0.0341   lr: 3.2628e-05  max_mem: 11485M
[05/29 19:19:36] d2.utils.events INFO:  eta: 0:43:05  iter: 7139  total_loss: 2.606  loss_ce: 0.0003773  loss_mask: 0.1886  loss_dice: 0.2429  loss_ce_0: 0.000449  loss_mask_0: 0.1889  loss_dice_0: 0.2431  loss_ce_1: 0.0004435  loss_mask_1: 0.1886  loss_dice_1: 0.243  loss_ce_2: 0.0004402  loss_mask_2: 0.1888  loss_dice_2: 0.2433  loss_ce_3: 0.0004473  loss_mask_3: 0.1895  loss_dice_3: 0.2432  loss_ce_4: 0.0003751  loss_mask_4: 0.1885  loss_dice_4: 0.2429    time: 0.8946  last_time: 0.8774  data_time: 0.0586  last_data_time: 0.0505   lr: 3.2424e-05  max_mem: 11485M
[05/29 19:19:53] d2.utils.events INFO:  eta: 0:42:46  iter: 7159  total_loss: 2.602  loss_ce: 0.0003747  loss_mask: 0.1883  loss_dice: 0.2426  loss_ce_0: 0.0004453  loss_mask_0: 0.1884  loss_dice_0: 0.2427  loss_ce_1: 0.0004416  loss_mask_1: 0.1881  loss_dice_1: 0.2427  loss_ce_2: 0.0004373  loss_mask_2: 0.1884  loss_dice_2: 0.243  loss_ce_3: 0.0004435  loss_mask_3: 0.1891  loss_dice_3: 0.2428  loss_ce_4: 0.0003705  loss_mask_4: 0.1882  loss_dice_4: 0.2426    time: 0.8945  last_time: 0.8762  data_time: 0.0585  last_data_time: 0.0403   lr: 3.222e-05  max_mem: 11485M
[05/29 19:20:11] d2.utils.events INFO:  eta: 0:42:27  iter: 7179  total_loss: 2.599  loss_ce: 0.0003724  loss_mask: 0.188  loss_dice: 0.2422  loss_ce_0: 0.0004425  loss_mask_0: 0.1881  loss_dice_0: 0.2423  loss_ce_1: 0.0004385  loss_mask_1: 0.1876  loss_dice_1: 0.2424  loss_ce_2: 0.0004352  loss_mask_2: 0.188  loss_dice_2: 0.2427  loss_ce_3: 0.0004405  loss_mask_3: 0.1889  loss_dice_3: 0.2425  loss_ce_4: 0.0003682  loss_mask_4: 0.1879  loss_dice_4: 0.2423    time: 0.8945  last_time: 0.9015  data_time: 0.0585  last_data_time: 0.0602   lr: 3.2016e-05  max_mem: 11485M
[05/29 19:20:28] d2.utils.events INFO:  eta: 0:42:06  iter: 7199  total_loss: 2.596  loss_ce: 0.0003709  loss_mask: 0.1877  loss_dice: 0.2419  loss_ce_0: 0.0004391  loss_mask_0: 0.1877  loss_dice_0: 0.242  loss_ce_1: 0.0004343  loss_mask_1: 0.1874  loss_dice_1: 0.2421  loss_ce_2: 0.0004319  loss_mask_2: 0.1877  loss_dice_2: 0.2424  loss_ce_3: 0.000439  loss_mask_3: 0.1886  loss_dice_3: 0.242  loss_ce_4: 0.0003661  loss_mask_4: 0.1875  loss_dice_4: 0.2421    time: 0.8944  last_time: 0.9260  data_time: 0.0584  last_data_time: 0.0848   lr: 3.1811e-05  max_mem: 11485M
[05/29 19:20:47] d2.utils.events INFO:  eta: 0:41:45  iter: 7219  total_loss: 2.589  loss_ce: 0.0003695  loss_mask: 0.1873  loss_dice: 0.2417  loss_ce_0: 0.000436  loss_mask_0: 0.1873  loss_dice_0: 0.2416  loss_ce_1: 0.0004319  loss_mask_1: 0.187  loss_dice_1: 0.2418  loss_ce_2: 0.0004286  loss_mask_2: 0.1875  loss_dice_2: 0.242  loss_ce_3: 0.0004348  loss_mask_3: 0.1883  loss_dice_3: 0.2417  loss_ce_4: 0.0003631  loss_mask_4: 0.187  loss_dice_4: 0.2418    time: 0.8944  last_time: 0.9005  data_time: 0.0585  last_data_time: 0.0735   lr: 3.1607e-05  max_mem: 11485M
[05/29 19:21:05] d2.utils.events INFO:  eta: 0:41:23  iter: 7239  total_loss: 2.586  loss_ce: 0.000366  loss_mask: 0.1869  loss_dice: 0.2414  loss_ce_0: 0.0004331  loss_mask_0: 0.1869  loss_dice_0: 0.2415  loss_ce_1: 0.000428  loss_mask_1: 0.1866  loss_dice_1: 0.2414  loss_ce_2: 0.0004253  loss_mask_2: 0.1871  loss_dice_2: 0.2417  loss_ce_3: 0.0004321  loss_mask_3: 0.188  loss_dice_3: 0.2414  loss_ce_4: 0.0003612  loss_mask_4: 0.1867  loss_dice_4: 0.2415    time: 0.8944  last_time: 0.9259  data_time: 0.0585  last_data_time: 0.0863   lr: 3.1402e-05  max_mem: 11485M
[05/29 19:21:23] d2.utils.events INFO:  eta: 0:41:03  iter: 7259  total_loss: 2.583  loss_ce: 0.0003633  loss_mask: 0.1865  loss_dice: 0.2409  loss_ce_0: 0.0004312  loss_mask_0: 0.1866  loss_dice_0: 0.2411  loss_ce_1: 0.000424  loss_mask_1: 0.1864  loss_dice_1: 0.2412  loss_ce_2: 0.0004222  loss_mask_2: 0.1867  loss_dice_2: 0.2413  loss_ce_3: 0.0004287  loss_mask_3: 0.1877  loss_dice_3: 0.2412  loss_ce_4: 0.0003572  loss_mask_4: 0.1863  loss_dice_4: 0.2413    time: 0.8945  last_time: 0.8994  data_time: 0.0585  last_data_time: 0.0541   lr: 3.1197e-05  max_mem: 11485M
[05/29 19:21:41] d2.utils.events INFO:  eta: 0:40:42  iter: 7279  total_loss: 2.579  loss_ce: 0.0003619  loss_mask: 0.1862  loss_dice: 0.2406  loss_ce_0: 0.0004295  loss_mask_0: 0.1865  loss_dice_0: 0.2407  loss_ce_1: 0.0004223  loss_mask_1: 0.186  loss_dice_1: 0.241  loss_ce_2: 0.0004173  loss_mask_2: 0.1864  loss_dice_2: 0.2407  loss_ce_3: 0.0004247  loss_mask_3: 0.1875  loss_dice_3: 0.2407  loss_ce_4: 0.0003548  loss_mask_4: 0.1859  loss_dice_4: 0.2409    time: 0.8945  last_time: 0.9195  data_time: 0.0585  last_data_time: 0.0569   lr: 3.0992e-05  max_mem: 11485M
[05/29 19:21:59] d2.utils.events INFO:  eta: 0:40:22  iter: 7299  total_loss: 2.575  loss_ce: 0.00036  loss_mask: 0.1859  loss_dice: 0.2404  loss_ce_0: 0.000428  loss_mask_0: 0.1862  loss_dice_0: 0.2405  loss_ce_1: 0.0004214  loss_mask_1: 0.1856  loss_dice_1: 0.2407  loss_ce_2: 0.0004152  loss_mask_2: 0.1861  loss_dice_2: 0.2405  loss_ce_3: 0.0004231  loss_mask_3: 0.1872  loss_dice_3: 0.2404  loss_ce_4: 0.0003521  loss_mask_4: 0.1856  loss_dice_4: 0.2407    time: 0.8945  last_time: 0.8867  data_time: 0.0585  last_data_time: 0.0500   lr: 3.0787e-05  max_mem: 11485M
[05/29 19:22:17] d2.utils.events INFO:  eta: 0:39:59  iter: 7319  total_loss: 2.571  loss_ce: 0.0003567  loss_mask: 0.1855  loss_dice: 0.2399  loss_ce_0: 0.000426  loss_mask_0: 0.1858  loss_dice_0: 0.2402  loss_ce_1: 0.0004189  loss_mask_1: 0.185  loss_dice_1: 0.2403  loss_ce_2: 0.000412  loss_mask_2: 0.1856  loss_dice_2: 0.2401  loss_ce_3: 0.0004192  loss_mask_3: 0.1869  loss_dice_3: 0.2401  loss_ce_4: 0.0003485  loss_mask_4: 0.1854  loss_dice_4: 0.2403    time: 0.8944  last_time: 0.8745  data_time: 0.0585  last_data_time: 0.0367   lr: 3.0582e-05  max_mem: 11485M
[05/29 19:22:35] d2.utils.events INFO:  eta: 0:39:33  iter: 7339  total_loss: 2.568  loss_ce: 0.0003539  loss_mask: 0.1853  loss_dice: 0.2396  loss_ce_0: 0.0004223  loss_mask_0: 0.1852  loss_dice_0: 0.2399  loss_ce_1: 0.0004165  loss_mask_1: 0.1847  loss_dice_1: 0.24  loss_ce_2: 0.0004102  loss_mask_2: 0.1852  loss_dice_2: 0.2399  loss_ce_3: 0.0004162  loss_mask_3: 0.1864  loss_dice_3: 0.2397  loss_ce_4: 0.0003454  loss_mask_4: 0.185  loss_dice_4: 0.2398    time: 0.8944  last_time: 0.8571  data_time: 0.0585  last_data_time: 0.0392   lr: 3.0377e-05  max_mem: 11485M
[05/29 19:22:52] d2.utils.events INFO:  eta: 0:39:13  iter: 7359  total_loss: 2.563  loss_ce: 0.000352  loss_mask: 0.1849  loss_dice: 0.2392  loss_ce_0: 0.0004189  loss_mask_0: 0.1848  loss_dice_0: 0.2394  loss_ce_1: 0.0004128  loss_mask_1: 0.1845  loss_dice_1: 0.2398  loss_ce_2: 0.0004075  loss_mask_2: 0.1846  loss_dice_2: 0.2396  loss_ce_3: 0.0004124  loss_mask_3: 0.1859  loss_dice_3: 0.2393  loss_ce_4: 0.0003425  loss_mask_4: 0.1844  loss_dice_4: 0.2393    time: 0.8943  last_time: 0.8964  data_time: 0.0584  last_data_time: 0.0701   lr: 3.0171e-05  max_mem: 11485M
[05/29 19:23:11] d2.utils.events INFO:  eta: 0:38:54  iter: 7379  total_loss: 2.559  loss_ce: 0.0003494  loss_mask: 0.1842  loss_dice: 0.2389  loss_ce_0: 0.0004176  loss_mask_0: 0.1844  loss_dice_0: 0.2393  loss_ce_1: 0.0004113  loss_mask_1: 0.1843  loss_dice_1: 0.2395  loss_ce_2: 0.0004054  loss_mask_2: 0.1842  loss_dice_2: 0.2393  loss_ce_3: 0.0004087  loss_mask_3: 0.1854  loss_dice_3: 0.2389  loss_ce_4: 0.0003394  loss_mask_4: 0.1841  loss_dice_4: 0.239    time: 0.8944  last_time: 0.8827  data_time: 0.0585  last_data_time: 0.0518   lr: 2.9965e-05  max_mem: 11485M
[05/29 19:23:28] d2.utils.events INFO:  eta: 0:38:30  iter: 7399  total_loss: 2.552  loss_ce: 0.0003485  loss_mask: 0.1836  loss_dice: 0.2386  loss_ce_0: 0.0004156  loss_mask_0: 0.1839  loss_dice_0: 0.2386  loss_ce_1: 0.0004087  loss_mask_1: 0.1841  loss_dice_1: 0.2392  loss_ce_2: 0.0004022  loss_mask_2: 0.1838  loss_dice_2: 0.2388  loss_ce_3: 0.0004035  loss_mask_3: 0.1851  loss_dice_3: 0.2387  loss_ce_4: 0.0003362  loss_mask_4: 0.1837  loss_dice_4: 0.2388    time: 0.8943  last_time: 0.8549  data_time: 0.0585  last_data_time: 0.0368   lr: 2.976e-05  max_mem: 11485M
[05/29 19:23:46] d2.utils.events INFO:  eta: 0:38:07  iter: 7419  total_loss: 2.547  loss_ce: 0.0003434  loss_mask: 0.1833  loss_dice: 0.2382  loss_ce_0: 0.0004131  loss_mask_0: 0.1837  loss_dice_0: 0.2385  loss_ce_1: 0.0004067  loss_mask_1: 0.1837  loss_dice_1: 0.2388  loss_ce_2: 0.0003979  loss_mask_2: 0.1834  loss_dice_2: 0.2385  loss_ce_3: 0.0004012  loss_mask_3: 0.1847  loss_dice_3: 0.2384  loss_ce_4: 0.000331  loss_mask_4: 0.1834  loss_dice_4: 0.2386    time: 0.8943  last_time: 0.9008  data_time: 0.0584  last_data_time: 0.0597   lr: 2.9554e-05  max_mem: 11485M
[05/29 19:24:03] d2.utils.events INFO:  eta: 0:37:46  iter: 7439  total_loss: 2.542  loss_ce: 0.0003397  loss_mask: 0.1829  loss_dice: 0.238  loss_ce_0: 0.0004103  loss_mask_0: 0.1832  loss_dice_0: 0.238  loss_ce_1: 0.0004039  loss_mask_1: 0.1833  loss_dice_1: 0.2384  loss_ce_2: 0.0003951  loss_mask_2: 0.1831  loss_dice_2: 0.2382  loss_ce_3: 0.0003976  loss_mask_3: 0.1843  loss_dice_3: 0.2381  loss_ce_4: 0.0003269  loss_mask_4: 0.1827  loss_dice_4: 0.2381    time: 0.8942  last_time: 0.8794  data_time: 0.0584  last_data_time: 0.0453   lr: 2.9347e-05  max_mem: 11485M
[05/29 19:24:21] d2.utils.events INFO:  eta: 0:37:25  iter: 7459  total_loss: 2.538  loss_ce: 0.0003369  loss_mask: 0.1825  loss_dice: 0.2377  loss_ce_0: 0.0004056  loss_mask_0: 0.183  loss_dice_0: 0.2378  loss_ce_1: 0.0004012  loss_mask_1: 0.1829  loss_dice_1: 0.238  loss_ce_2: 0.0003925  loss_mask_2: 0.1829  loss_dice_2: 0.2379  loss_ce_3: 0.000391  loss_mask_3: 0.1837  loss_dice_3: 0.2379  loss_ce_4: 0.000324  loss_mask_4: 0.1823  loss_dice_4: 0.2379    time: 0.8942  last_time: 0.8616  data_time: 0.0584  last_data_time: 0.0401   lr: 2.9141e-05  max_mem: 11485M
[05/29 19:24:39] d2.utils.events INFO:  eta: 0:37:03  iter: 7479  total_loss: 2.534  loss_ce: 0.000336  loss_mask: 0.1821  loss_dice: 0.2375  loss_ce_0: 0.0004038  loss_mask_0: 0.1827  loss_dice_0: 0.2375  loss_ce_1: 0.0003999  loss_mask_1: 0.1824  loss_dice_1: 0.2376  loss_ce_2: 0.0003892  loss_mask_2: 0.1826  loss_dice_2: 0.2376  loss_ce_3: 0.0003882  loss_mask_3: 0.1834  loss_dice_3: 0.2377  loss_ce_4: 0.0003228  loss_mask_4: 0.182  loss_dice_4: 0.2376    time: 0.8941  last_time: 0.8773  data_time: 0.0583  last_data_time: 0.0489   lr: 2.8934e-05  max_mem: 11485M
[05/29 19:24:56] d2.utils.events INFO:  eta: 0:36:41  iter: 7499  total_loss: 2.532  loss_ce: 0.0003345  loss_mask: 0.1817  loss_dice: 0.2371  loss_ce_0: 0.0004003  loss_mask_0: 0.1823  loss_dice_0: 0.237  loss_ce_1: 0.0003971  loss_mask_1: 0.1819  loss_dice_1: 0.2373  loss_ce_2: 0.0003838  loss_mask_2: 0.182  loss_dice_2: 0.2374  loss_ce_3: 0.0003851  loss_mask_3: 0.183  loss_dice_3: 0.2373  loss_ce_4: 0.0003184  loss_mask_4: 0.1815  loss_dice_4: 0.2373    time: 0.8940  last_time: 0.8856  data_time: 0.0583  last_data_time: 0.0540   lr: 2.8728e-05  max_mem: 11485M
[05/29 19:25:14] d2.utils.events INFO:  eta: 0:36:21  iter: 7519  total_loss: 2.527  loss_ce: 0.0003313  loss_mask: 0.1815  loss_dice: 0.2369  loss_ce_0: 0.0003975  loss_mask_0: 0.1816  loss_dice_0: 0.2368  loss_ce_1: 0.0003946  loss_mask_1: 0.1816  loss_dice_1: 0.2369  loss_ce_2: 0.0003804  loss_mask_2: 0.1817  loss_dice_2: 0.2369  loss_ce_3: 0.0003812  loss_mask_3: 0.1826  loss_dice_3: 0.2369  loss_ce_4: 0.0003146  loss_mask_4: 0.1813  loss_dice_4: 0.237    time: 0.8939  last_time: 0.8753  data_time: 0.0582  last_data_time: 0.0493   lr: 2.8521e-05  max_mem: 11485M
[05/29 19:25:31] d2.utils.events INFO:  eta: 0:36:00  iter: 7539  total_loss: 2.524  loss_ce: 0.0003296  loss_mask: 0.1812  loss_dice: 0.2366  loss_ce_0: 0.0003949  loss_mask_0: 0.1813  loss_dice_0: 0.2365  loss_ce_1: 0.0003928  loss_mask_1: 0.1812  loss_dice_1: 0.2365  loss_ce_2: 0.0003776  loss_mask_2: 0.1814  loss_dice_2: 0.2366  loss_ce_3: 0.000379  loss_mask_3: 0.1824  loss_dice_3: 0.2365  loss_ce_4: 0.000312  loss_mask_4: 0.181  loss_dice_4: 0.2368    time: 0.8939  last_time: 0.8619  data_time: 0.0582  last_data_time: 0.0422   lr: 2.8314e-05  max_mem: 11485M
[05/29 19:25:49] d2.utils.events INFO:  eta: 0:35:40  iter: 7559  total_loss: 2.52  loss_ce: 0.0003268  loss_mask: 0.181  loss_dice: 0.2362  loss_ce_0: 0.0003938  loss_mask_0: 0.181  loss_dice_0: 0.2362  loss_ce_1: 0.0003901  loss_mask_1: 0.1808  loss_dice_1: 0.2361  loss_ce_2: 0.0003752  loss_mask_2: 0.1811  loss_dice_2: 0.2362  loss_ce_3: 0.0003769  loss_mask_3: 0.1821  loss_dice_3: 0.2362  loss_ce_4: 0.0003093  loss_mask_4: 0.1806  loss_dice_4: 0.2365    time: 0.8938  last_time: 0.8481  data_time: 0.0581  last_data_time: 0.0326   lr: 2.8107e-05  max_mem: 11485M
[05/29 19:26:06] d2.utils.events INFO:  eta: 0:35:20  iter: 7579  total_loss: 2.517  loss_ce: 0.0003239  loss_mask: 0.1805  loss_dice: 0.236  loss_ce_0: 0.0003908  loss_mask_0: 0.1807  loss_dice_0: 0.2358  loss_ce_1: 0.0003892  loss_mask_1: 0.1805  loss_dice_1: 0.2358  loss_ce_2: 0.0003707  loss_mask_2: 0.1806  loss_dice_2: 0.2357  loss_ce_3: 0.0003735  loss_mask_3: 0.1818  loss_dice_3: 0.236  loss_ce_4: 0.0003083  loss_mask_4: 0.1803  loss_dice_4: 0.2358    time: 0.8937  last_time: 0.8623  data_time: 0.0581  last_data_time: 0.0428   lr: 2.7899e-05  max_mem: 11485M
[05/29 19:26:24] d2.utils.events INFO:  eta: 0:35:01  iter: 7599  total_loss: 2.513  loss_ce: 0.0003211  loss_mask: 0.1803  loss_dice: 0.2357  loss_ce_0: 0.0003885  loss_mask_0: 0.1804  loss_dice_0: 0.2353  loss_ce_1: 0.000386  loss_mask_1: 0.1803  loss_dice_1: 0.2355  loss_ce_2: 0.0003681  loss_mask_2: 0.1803  loss_dice_2: 0.2353  loss_ce_3: 0.0003698  loss_mask_3: 0.1814  loss_dice_3: 0.2357  loss_ce_4: 0.0003067  loss_mask_4: 0.18  loss_dice_4: 0.2355    time: 0.8937  last_time: 0.8705  data_time: 0.0580  last_data_time: 0.0352   lr: 2.7692e-05  max_mem: 11485M
[05/29 19:26:41] d2.utils.events INFO:  eta: 0:34:41  iter: 7619  total_loss: 2.509  loss_ce: 0.0003188  loss_mask: 0.18  loss_dice: 0.2352  loss_ce_0: 0.0003868  loss_mask_0: 0.1802  loss_dice_0: 0.2349  loss_ce_1: 0.000383  loss_mask_1: 0.18  loss_dice_1: 0.2352  loss_ce_2: 0.0003659  loss_mask_2: 0.18  loss_dice_2: 0.2351  loss_ce_3: 0.0003664  loss_mask_3: 0.1812  loss_dice_3: 0.2353  loss_ce_4: 0.0003056  loss_mask_4: 0.1798  loss_dice_4: 0.2352    time: 0.8936  last_time: 0.8801  data_time: 0.0580  last_data_time: 0.0493   lr: 2.7484e-05  max_mem: 11485M
[05/29 19:26:59] d2.utils.events INFO:  eta: 0:34:21  iter: 7639  total_loss: 2.506  loss_ce: 0.0003162  loss_mask: 0.1799  loss_dice: 0.2349  loss_ce_0: 0.0003832  loss_mask_0: 0.1798  loss_dice_0: 0.2346  loss_ce_1: 0.0003802  loss_mask_1: 0.1797  loss_dice_1: 0.235  loss_ce_2: 0.0003623  loss_mask_2: 0.1798  loss_dice_2: 0.2347  loss_ce_3: 0.0003631  loss_mask_3: 0.181  loss_dice_3: 0.2349  loss_ce_4: 0.000302  loss_mask_4: 0.1797  loss_dice_4: 0.2348    time: 0.8935  last_time: 0.8839  data_time: 0.0580  last_data_time: 0.0516   lr: 2.7276e-05  max_mem: 11485M
[05/29 19:27:16] d2.utils.events INFO:  eta: 0:34:02  iter: 7659  total_loss: 2.5  loss_ce: 0.0003151  loss_mask: 0.1797  loss_dice: 0.2344  loss_ce_0: 0.0003818  loss_mask_0: 0.1795  loss_dice_0: 0.2341  loss_ce_1: 0.0003791  loss_mask_1: 0.1794  loss_dice_1: 0.2345  loss_ce_2: 0.0003602  loss_mask_2: 0.1796  loss_dice_2: 0.2344  loss_ce_3: 0.0003594  loss_mask_3: 0.1809  loss_dice_3: 0.2345  loss_ce_4: 0.0002992  loss_mask_4: 0.1795  loss_dice_4: 0.2343    time: 0.8934  last_time: 0.8656  data_time: 0.0579  last_data_time: 0.0412   lr: 2.7068e-05  max_mem: 11485M
[05/29 19:27:34] d2.utils.events INFO:  eta: 0:33:44  iter: 7679  total_loss: 2.495  loss_ce: 0.0003123  loss_mask: 0.1793  loss_dice: 0.234  loss_ce_0: 0.0003781  loss_mask_0: 0.1793  loss_dice_0: 0.2339  loss_ce_1: 0.0003759  loss_mask_1: 0.1791  loss_dice_1: 0.2342  loss_ce_2: 0.0003587  loss_mask_2: 0.1792  loss_dice_2: 0.2341  loss_ce_3: 0.0003562  loss_mask_3: 0.1805  loss_dice_3: 0.2342  loss_ce_4: 0.0002977  loss_mask_4: 0.1793  loss_dice_4: 0.2341    time: 0.8934  last_time: 0.8366  data_time: 0.0579  last_data_time: 0.0353   lr: 2.686e-05  max_mem: 11485M
[05/29 19:27:51] d2.utils.events INFO:  eta: 0:33:25  iter: 7699  total_loss: 2.491  loss_ce: 0.0003105  loss_mask: 0.1791  loss_dice: 0.2338  loss_ce_0: 0.0003753  loss_mask_0: 0.179  loss_dice_0: 0.2336  loss_ce_1: 0.0003701  loss_mask_1: 0.1787  loss_dice_1: 0.2337  loss_ce_2: 0.0003544  loss_mask_2: 0.179  loss_dice_2: 0.2338  loss_ce_3: 0.0003492  loss_mask_3: 0.1801  loss_dice_3: 0.2339  loss_ce_4: 0.0002952  loss_mask_4: 0.179  loss_dice_4: 0.2335    time: 0.8933  last_time: 0.8583  data_time: 0.0578  last_data_time: 0.0336   lr: 2.6652e-05  max_mem: 11485M
[05/29 19:28:08] d2.utils.events INFO:  eta: 0:33:08  iter: 7719  total_loss: 2.489  loss_ce: 0.000308  loss_mask: 0.1788  loss_dice: 0.2335  loss_ce_0: 0.0003729  loss_mask_0: 0.1787  loss_dice_0: 0.2333  loss_ce_1: 0.000369  loss_mask_1: 0.1783  loss_dice_1: 0.2333  loss_ce_2: 0.0003522  loss_mask_2: 0.1787  loss_dice_2: 0.2336  loss_ce_3: 0.0003477  loss_mask_3: 0.1798  loss_dice_3: 0.2336  loss_ce_4: 0.0002932  loss_mask_4: 0.1785  loss_dice_4: 0.2333    time: 0.8932  last_time: 0.8663  data_time: 0.0578  last_data_time: 0.0402   lr: 2.6443e-05  max_mem: 11485M
[05/29 19:28:26] d2.utils.events INFO:  eta: 0:32:51  iter: 7739  total_loss: 2.484  loss_ce: 0.0003061  loss_mask: 0.1785  loss_dice: 0.2332  loss_ce_0: 0.000371  loss_mask_0: 0.1784  loss_dice_0: 0.2332  loss_ce_1: 0.0003684  loss_mask_1: 0.1781  loss_dice_1: 0.2332  loss_ce_2: 0.0003482  loss_mask_2: 0.1784  loss_dice_2: 0.2333  loss_ce_3: 0.0003446  loss_mask_3: 0.1794  loss_dice_3: 0.2333  loss_ce_4: 0.0002922  loss_mask_4: 0.1783  loss_dice_4: 0.2331    time: 0.8931  last_time: 0.8728  data_time: 0.0577  last_data_time: 0.0420   lr: 2.6234e-05  max_mem: 11485M
[05/29 19:28:43] d2.utils.events INFO:  eta: 0:32:33  iter: 7759  total_loss: 2.479  loss_ce: 0.0003028  loss_mask: 0.1782  loss_dice: 0.2329  loss_ce_0: 0.000368  loss_mask_0: 0.1781  loss_dice_0: 0.2329  loss_ce_1: 0.0003664  loss_mask_1: 0.1776  loss_dice_1: 0.2328  loss_ce_2: 0.0003465  loss_mask_2: 0.1782  loss_dice_2: 0.2328  loss_ce_3: 0.0003425  loss_mask_3: 0.1792  loss_dice_3: 0.2329  loss_ce_4: 0.0002884  loss_mask_4: 0.1781  loss_dice_4: 0.2328    time: 0.8931  last_time: 0.8755  data_time: 0.0577  last_data_time: 0.0424   lr: 2.6025e-05  max_mem: 11485M
[05/29 19:29:01] d2.utils.events INFO:  eta: 0:32:15  iter: 7779  total_loss: 2.476  loss_ce: 0.0003008  loss_mask: 0.178  loss_dice: 0.2326  loss_ce_0: 0.0003636  loss_mask_0: 0.1779  loss_dice_0: 0.2327  loss_ce_1: 0.0003639  loss_mask_1: 0.1774  loss_dice_1: 0.2326  loss_ce_2: 0.0003446  loss_mask_2: 0.1779  loss_dice_2: 0.2325  loss_ce_3: 0.0003391  loss_mask_3: 0.1789  loss_dice_3: 0.2326  loss_ce_4: 0.0002861  loss_mask_4: 0.1779  loss_dice_4: 0.2326    time: 0.8930  last_time: 0.8674  data_time: 0.0576  last_data_time: 0.0428   lr: 2.5816e-05  max_mem: 11485M
[05/29 19:29:18] d2.utils.events INFO:  eta: 0:31:57  iter: 7799  total_loss: 2.471  loss_ce: 0.0002991  loss_mask: 0.1775  loss_dice: 0.2322  loss_ce_0: 0.0003591  loss_mask_0: 0.1774  loss_dice_0: 0.2322  loss_ce_1: 0.000361  loss_mask_1: 0.1772  loss_dice_1: 0.2324  loss_ce_2: 0.0003417  loss_mask_2: 0.1777  loss_dice_2: 0.2322  loss_ce_3: 0.0003343  loss_mask_3: 0.1787  loss_dice_3: 0.2324  loss_ce_4: 0.0002841  loss_mask_4: 0.1775  loss_dice_4: 0.2323    time: 0.8929  last_time: 0.8731  data_time: 0.0576  last_data_time: 0.0417   lr: 2.5607e-05  max_mem: 11485M
[05/29 19:29:36] d2.utils.events INFO:  eta: 0:31:38  iter: 7819  total_loss: 2.467  loss_ce: 0.0002962  loss_mask: 0.1772  loss_dice: 0.2319  loss_ce_0: 0.0003577  loss_mask_0: 0.1772  loss_dice_0: 0.2319  loss_ce_1: 0.0003587  loss_mask_1: 0.1769  loss_dice_1: 0.232  loss_ce_2: 0.00034  loss_mask_2: 0.1774  loss_dice_2: 0.232  loss_ce_3: 0.0003312  loss_mask_3: 0.1783  loss_dice_3: 0.2321  loss_ce_4: 0.0002829  loss_mask_4: 0.1771  loss_dice_4: 0.2321    time: 0.8929  last_time: 0.8756  data_time: 0.0576  last_data_time: 0.0496   lr: 2.5397e-05  max_mem: 11485M
[05/29 19:29:53] d2.utils.events INFO:  eta: 0:31:19  iter: 7839  total_loss: 2.463  loss_ce: 0.0002957  loss_mask: 0.1769  loss_dice: 0.2316  loss_ce_0: 0.0003554  loss_mask_0: 0.1767  loss_dice_0: 0.2317  loss_ce_1: 0.0003564  loss_mask_1: 0.1766  loss_dice_1: 0.2317  loss_ce_2: 0.0003391  loss_mask_2: 0.177  loss_dice_2: 0.2316  loss_ce_3: 0.000327  loss_mask_3: 0.178  loss_dice_3: 0.2316  loss_ce_4: 0.0002817  loss_mask_4: 0.1768  loss_dice_4: 0.2318    time: 0.8928  last_time: 0.8483  data_time: 0.0575  last_data_time: 0.0318   lr: 2.5188e-05  max_mem: 11485M
[05/29 19:30:11] d2.utils.events INFO:  eta: 0:31:02  iter: 7859  total_loss: 2.46  loss_ce: 0.0002945  loss_mask: 0.1766  loss_dice: 0.2314  loss_ce_0: 0.0003526  loss_mask_0: 0.1764  loss_dice_0: 0.2314  loss_ce_1: 0.0003537  loss_mask_1: 0.1764  loss_dice_1: 0.2315  loss_ce_2: 0.0003363  loss_mask_2: 0.1765  loss_dice_2: 0.2314  loss_ce_3: 0.0003247  loss_mask_3: 0.1776  loss_dice_3: 0.2313  loss_ce_4: 0.000281  loss_mask_4: 0.1763  loss_dice_4: 0.2315    time: 0.8927  last_time: 0.8845  data_time: 0.0575  last_data_time: 0.0604   lr: 2.4978e-05  max_mem: 11485M
[05/29 19:30:28] d2.utils.events INFO:  eta: 0:30:44  iter: 7879  total_loss: 2.456  loss_ce: 0.000293  loss_mask: 0.1761  loss_dice: 0.2312  loss_ce_0: 0.0003493  loss_mask_0: 0.1761  loss_dice_0: 0.2311  loss_ce_1: 0.0003514  loss_mask_1: 0.1761  loss_dice_1: 0.2313  loss_ce_2: 0.0003344  loss_mask_2: 0.1761  loss_dice_2: 0.2311  loss_ce_3: 0.0003224  loss_mask_3: 0.1773  loss_dice_3: 0.231  loss_ce_4: 0.0002786  loss_mask_4: 0.1759  loss_dice_4: 0.2311    time: 0.8927  last_time: 0.8702  data_time: 0.0574  last_data_time: 0.0440   lr: 2.4768e-05  max_mem: 11485M
[05/29 19:30:46] d2.utils.events INFO:  eta: 0:30:27  iter: 7899  total_loss: 2.453  loss_ce: 0.000291  loss_mask: 0.1758  loss_dice: 0.231  loss_ce_0: 0.0003463  loss_mask_0: 0.1759  loss_dice_0: 0.2308  loss_ce_1: 0.0003495  loss_mask_1: 0.1759  loss_dice_1: 0.2311  loss_ce_2: 0.0003329  loss_mask_2: 0.1758  loss_dice_2: 0.2308  loss_ce_3: 0.0003185  loss_mask_3: 0.1771  loss_dice_3: 0.2307  loss_ce_4: 0.0002766  loss_mask_4: 0.1757  loss_dice_4: 0.231    time: 0.8926  last_time: 0.8657  data_time: 0.0574  last_data_time: 0.0429   lr: 2.4557e-05  max_mem: 11485M
[05/29 19:31:04] d2.utils.events INFO:  eta: 0:30:09  iter: 7919  total_loss: 2.449  loss_ce: 0.0002901  loss_mask: 0.1753  loss_dice: 0.2307  loss_ce_0: 0.0003445  loss_mask_0: 0.1756  loss_dice_0: 0.2307  loss_ce_1: 0.0003472  loss_mask_1: 0.1756  loss_dice_1: 0.2308  loss_ce_2: 0.0003312  loss_mask_2: 0.1754  loss_dice_2: 0.2305  loss_ce_3: 0.0003154  loss_mask_3: 0.1768  loss_dice_3: 0.2305  loss_ce_4: 0.0002731  loss_mask_4: 0.1755  loss_dice_4: 0.2308    time: 0.8925  last_time: 0.8411  data_time: 0.0574  last_data_time: 0.0320   lr: 2.4347e-05  max_mem: 11485M
[05/29 19:31:21] d2.utils.events INFO:  eta: 0:29:53  iter: 7939  total_loss: 2.445  loss_ce: 0.0002887  loss_mask: 0.175  loss_dice: 0.2306  loss_ce_0: 0.0003421  loss_mask_0: 0.1754  loss_dice_0: 0.2303  loss_ce_1: 0.0003464  loss_mask_1: 0.1752  loss_dice_1: 0.2306  loss_ce_2: 0.0003284  loss_mask_2: 0.1752  loss_dice_2: 0.2303  loss_ce_3: 0.0003133  loss_mask_3: 0.1764  loss_dice_3: 0.2302  loss_ce_4: 0.0002716  loss_mask_4: 0.1752  loss_dice_4: 0.2305    time: 0.8925  last_time: 0.8670  data_time: 0.0573  last_data_time: 0.0463   lr: 2.4136e-05  max_mem: 11485M
[05/29 19:31:39] d2.utils.events INFO:  eta: 0:29:34  iter: 7959  total_loss: 2.443  loss_ce: 0.0002876  loss_mask: 0.1748  loss_dice: 0.2302  loss_ce_0: 0.0003396  loss_mask_0: 0.175  loss_dice_0: 0.2301  loss_ce_1: 0.000344  loss_mask_1: 0.1749  loss_dice_1: 0.2303  loss_ce_2: 0.0003258  loss_mask_2: 0.1748  loss_dice_2: 0.2301  loss_ce_3: 0.0003099  loss_mask_3: 0.176  loss_dice_3: 0.2301  loss_ce_4: 0.0002677  loss_mask_4: 0.1749  loss_dice_4: 0.2303    time: 0.8924  last_time: 0.8559  data_time: 0.0573  last_data_time: 0.0335   lr: 2.3925e-05  max_mem: 11485M
[05/29 19:31:56] d2.utils.events INFO:  eta: 0:29:17  iter: 7979  total_loss: 2.44  loss_ce: 0.0002859  loss_mask: 0.1746  loss_dice: 0.23  loss_ce_0: 0.0003361  loss_mask_0: 0.1747  loss_dice_0: 0.2298  loss_ce_1: 0.0003418  loss_mask_1: 0.1745  loss_dice_1: 0.23  loss_ce_2: 0.000323  loss_mask_2: 0.1744  loss_dice_2: 0.2299  loss_ce_3: 0.0003071  loss_mask_3: 0.1756  loss_dice_3: 0.2299  loss_ce_4: 0.0002663  loss_mask_4: 0.1745  loss_dice_4: 0.2301    time: 0.8924  last_time: 0.8758  data_time: 0.0573  last_data_time: 0.0408   lr: 2.3714e-05  max_mem: 11485M
[05/29 19:32:13] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/climatenet_v2/model_0007999.pth
[05/29 19:32:14] d2.utils.events INFO:  eta: 0:28:59  iter: 7999  total_loss: 2.438  loss_ce: 0.0002828  loss_mask: 0.1742  loss_dice: 0.2297  loss_ce_0: 0.000334  loss_mask_0: 0.1743  loss_dice_0: 0.2295  loss_ce_1: 0.0003407  loss_mask_1: 0.1742  loss_dice_1: 0.2298  loss_ce_2: 0.0003218  loss_mask_2: 0.1742  loss_dice_2: 0.2298  loss_ce_3: 0.0003042  loss_mask_3: 0.1753  loss_dice_3: 0.2297  loss_ce_4: 0.000265  loss_mask_4: 0.1741  loss_dice_4: 0.2299    time: 0.8923  last_time: 0.8691  data_time: 0.0572  last_data_time: 0.0506   lr: 2.3503e-05  max_mem: 11485M
[05/29 19:32:31] d2.utils.events INFO:  eta: 0:28:42  iter: 8019  total_loss: 2.43  loss_ce: 0.0002805  loss_mask: 0.1737  loss_dice: 0.2294  loss_ce_0: 0.0003325  loss_mask_0: 0.174  loss_dice_0: 0.2292  loss_ce_1: 0.0003368  loss_mask_1: 0.1738  loss_dice_1: 0.2295  loss_ce_2: 0.0003195  loss_mask_2: 0.1739  loss_dice_2: 0.2294  loss_ce_3: 0.0003014  loss_mask_3: 0.175  loss_dice_3: 0.2294  loss_ce_4: 0.0002626  loss_mask_4: 0.1738  loss_dice_4: 0.2295    time: 0.8922  last_time: 0.8575  data_time: 0.0572  last_data_time: 0.0392   lr: 2.3291e-05  max_mem: 11485M
[05/29 19:32:49] d2.utils.events INFO:  eta: 0:28:23  iter: 8039  total_loss: 2.428  loss_ce: 0.000279  loss_mask: 0.1733  loss_dice: 0.2292  loss_ce_0: 0.0003308  loss_mask_0: 0.1738  loss_dice_0: 0.229  loss_ce_1: 0.0003351  loss_mask_1: 0.1734  loss_dice_1: 0.2292  loss_ce_2: 0.0003178  loss_mask_2: 0.1735  loss_dice_2: 0.229  loss_ce_3: 0.0002995  loss_mask_3: 0.1747  loss_dice_3: 0.2292  loss_ce_4: 0.0002603  loss_mask_4: 0.1735  loss_dice_4: 0.2293    time: 0.8921  last_time: 0.8443  data_time: 0.0571  last_data_time: 0.0378   lr: 2.308e-05  max_mem: 11485M
[05/29 19:33:07] d2.utils.events INFO:  eta: 0:28:06  iter: 8059  total_loss: 2.427  loss_ce: 0.0002775  loss_mask: 0.1732  loss_dice: 0.2289  loss_ce_0: 0.0003274  loss_mask_0: 0.1734  loss_dice_0: 0.2287  loss_ce_1: 0.0003324  loss_mask_1: 0.173  loss_dice_1: 0.2288  loss_ce_2: 0.000315  loss_mask_2: 0.1732  loss_dice_2: 0.2286  loss_ce_3: 0.0002978  loss_mask_3: 0.1744  loss_dice_3: 0.2289  loss_ce_4: 0.0002582  loss_mask_4: 0.1731  loss_dice_4: 0.2289    time: 0.8921  last_time: 0.9214  data_time: 0.0571  last_data_time: 0.0769   lr: 2.2868e-05  max_mem: 11485M
[05/29 19:33:25] d2.utils.events INFO:  eta: 0:27:50  iter: 8079  total_loss: 2.424  loss_ce: 0.0002762  loss_mask: 0.1728  loss_dice: 0.2284  loss_ce_0: 0.0003242  loss_mask_0: 0.1732  loss_dice_0: 0.2283  loss_ce_1: 0.0003293  loss_mask_1: 0.1727  loss_dice_1: 0.2285  loss_ce_2: 0.0003119  loss_mask_2: 0.1728  loss_dice_2: 0.2283  loss_ce_3: 0.0002955  loss_mask_3: 0.1739  loss_dice_3: 0.2286  loss_ce_4: 0.0002563  loss_mask_4: 0.1727  loss_dice_4: 0.2286    time: 0.8922  last_time: 0.8729  data_time: 0.0572  last_data_time: 0.0482   lr: 2.2656e-05  max_mem: 11485M
[05/29 19:33:42] d2.utils.events INFO:  eta: 0:27:32  iter: 8099  total_loss: 2.42  loss_ce: 0.0002755  loss_mask: 0.1723  loss_dice: 0.2282  loss_ce_0: 0.0003226  loss_mask_0: 0.173  loss_dice_0: 0.2279  loss_ce_1: 0.0003278  loss_mask_1: 0.1723  loss_dice_1: 0.2282  loss_ce_2: 0.0003096  loss_mask_2: 0.1725  loss_dice_2: 0.228  loss_ce_3: 0.0002949  loss_mask_3: 0.1737  loss_dice_3: 0.2284  loss_ce_4: 0.0002556  loss_mask_4: 0.1725  loss_dice_4: 0.2281    time: 0.8921  last_time: 0.8504  data_time: 0.0571  last_data_time: 0.0309   lr: 2.2443e-05  max_mem: 11485M
[05/29 19:34:00] d2.utils.events INFO:  eta: 0:27:14  iter: 8119  total_loss: 2.415  loss_ce: 0.0002743  loss_mask: 0.1719  loss_dice: 0.2279  loss_ce_0: 0.0003209  loss_mask_0: 0.1725  loss_dice_0: 0.2276  loss_ce_1: 0.0003242  loss_mask_1: 0.1718  loss_dice_1: 0.2279  loss_ce_2: 0.0003067  loss_mask_2: 0.172  loss_dice_2: 0.2278  loss_ce_3: 0.0002921  loss_mask_3: 0.1733  loss_dice_3: 0.228  loss_ce_4: 0.000253  loss_mask_4: 0.1721  loss_dice_4: 0.2279    time: 0.8920  last_time: 0.8470  data_time: 0.0571  last_data_time: 0.0374   lr: 2.2231e-05  max_mem: 11485M
[05/29 19:34:17] d2.utils.events INFO:  eta: 0:26:58  iter: 8139  total_loss: 2.414  loss_ce: 0.0002727  loss_mask: 0.1717  loss_dice: 0.2276  loss_ce_0: 0.0003192  loss_mask_0: 0.1723  loss_dice_0: 0.2274  loss_ce_1: 0.000322  loss_mask_1: 0.1715  loss_dice_1: 0.2277  loss_ce_2: 0.0003053  loss_mask_2: 0.1718  loss_dice_2: 0.2276  loss_ce_3: 0.0002899  loss_mask_3: 0.173  loss_dice_3: 0.2276  loss_ce_4: 0.0002516  loss_mask_4: 0.1719  loss_dice_4: 0.2275    time: 0.8920  last_time: 0.8730  data_time: 0.0571  last_data_time: 0.0428   lr: 2.2018e-05  max_mem: 11485M
[05/29 19:34:36] d2.utils.events INFO:  eta: 0:26:41  iter: 8159  total_loss: 2.41  loss_ce: 0.0002715  loss_mask: 0.1714  loss_dice: 0.2274  loss_ce_0: 0.0003168  loss_mask_0: 0.1717  loss_dice_0: 0.2272  loss_ce_1: 0.0003208  loss_mask_1: 0.1711  loss_dice_1: 0.2276  loss_ce_2: 0.0003035  loss_mask_2: 0.1715  loss_dice_2: 0.2272  loss_ce_3: 0.0002876  loss_mask_3: 0.1726  loss_dice_3: 0.2273  loss_ce_4: 0.0002504  loss_mask_4: 0.1715  loss_dice_4: 0.2273    time: 0.8920  last_time: 0.9216  data_time: 0.0571  last_data_time: 0.0824   lr: 2.1805e-05  max_mem: 11485M
[05/29 19:34:54] d2.utils.events INFO:  eta: 0:26:25  iter: 8179  total_loss: 2.405  loss_ce: 0.0002702  loss_mask: 0.1712  loss_dice: 0.2272  loss_ce_0: 0.0003136  loss_mask_0: 0.1714  loss_dice_0: 0.2269  loss_ce_1: 0.0003182  loss_mask_1: 0.1709  loss_dice_1: 0.2272  loss_ce_2: 0.0003021  loss_mask_2: 0.1713  loss_dice_2: 0.2271  loss_ce_3: 0.0002834  loss_mask_3: 0.1723  loss_dice_3: 0.2272  loss_ce_4: 0.0002487  loss_mask_4: 0.1709  loss_dice_4: 0.227    time: 0.8920  last_time: 0.9017  data_time: 0.0571  last_data_time: 0.0764   lr: 2.1591e-05  max_mem: 11485M
[05/29 19:35:12] d2.utils.events INFO:  eta: 0:26:08  iter: 8199  total_loss: 2.402  loss_ce: 0.0002678  loss_mask: 0.1708  loss_dice: 0.2266  loss_ce_0: 0.0003126  loss_mask_0: 0.1712  loss_dice_0: 0.2268  loss_ce_1: 0.0003162  loss_mask_1: 0.1707  loss_dice_1: 0.2268  loss_ce_2: 0.0002995  loss_mask_2: 0.171  loss_dice_2: 0.2269  loss_ce_3: 0.0002817  loss_mask_3: 0.1719  loss_dice_3: 0.2268  loss_ce_4: 0.0002474  loss_mask_4: 0.1708  loss_dice_4: 0.2268    time: 0.8920  last_time: 0.8897  data_time: 0.0571  last_data_time: 0.0536   lr: 2.1378e-05  max_mem: 11485M
[05/29 19:35:30] d2.utils.events INFO:  eta: 0:25:51  iter: 8219  total_loss: 2.399  loss_ce: 0.000266  loss_mask: 0.1706  loss_dice: 0.2264  loss_ce_0: 0.0003114  loss_mask_0: 0.1709  loss_dice_0: 0.2266  loss_ce_1: 0.0003136  loss_mask_1: 0.1706  loss_dice_1: 0.2265  loss_ce_2: 0.0002954  loss_mask_2: 0.1706  loss_dice_2: 0.2265  loss_ce_3: 0.0002766  loss_mask_3: 0.1718  loss_dice_3: 0.2264  loss_ce_4: 0.0002458  loss_mask_4: 0.1705  loss_dice_4: 0.2265    time: 0.8920  last_time: 0.9139  data_time: 0.0571  last_data_time: 0.0855   lr: 2.1164e-05  max_mem: 11485M
[05/29 19:35:48] d2.utils.events INFO:  eta: 0:25:33  iter: 8239  total_loss: 2.395  loss_ce: 0.0002645  loss_mask: 0.1703  loss_dice: 0.2261  loss_ce_0: 0.0003092  loss_mask_0: 0.1705  loss_dice_0: 0.2262  loss_ce_1: 0.0003116  loss_mask_1: 0.1703  loss_dice_1: 0.2262  loss_ce_2: 0.0002925  loss_mask_2: 0.1703  loss_dice_2: 0.2262  loss_ce_3: 0.0002752  loss_mask_3: 0.1713  loss_dice_3: 0.2262  loss_ce_4: 0.0002444  loss_mask_4: 0.1702  loss_dice_4: 0.2262    time: 0.8920  last_time: 0.8508  data_time: 0.0571  last_data_time: 0.0352   lr: 2.095e-05  max_mem: 11485M
[05/29 19:36:05] d2.utils.events INFO:  eta: 0:25:14  iter: 8259  total_loss: 2.392  loss_ce: 0.0002636  loss_mask: 0.1699  loss_dice: 0.2257  loss_ce_0: 0.000307  loss_mask_0: 0.1703  loss_dice_0: 0.2259  loss_ce_1: 0.0003109  loss_mask_1: 0.17  loss_dice_1: 0.2259  loss_ce_2: 0.0002896  loss_mask_2: 0.1701  loss_dice_2: 0.226  loss_ce_3: 0.0002727  loss_mask_3: 0.171  loss_dice_3: 0.2258  loss_ce_4: 0.0002429  loss_mask_4: 0.1697  loss_dice_4: 0.226    time: 0.8919  last_time: 0.8383  data_time: 0.0571  last_data_time: 0.0370   lr: 2.0736e-05  max_mem: 11485M
[05/29 19:36:23] d2.utils.events INFO:  eta: 0:24:55  iter: 8279  total_loss: 2.389  loss_ce: 0.0002624  loss_mask: 0.1697  loss_dice: 0.2255  loss_ce_0: 0.0003044  loss_mask_0: 0.1699  loss_dice_0: 0.2256  loss_ce_1: 0.0003095  loss_mask_1: 0.1698  loss_dice_1: 0.2256  loss_ce_2: 0.0002885  loss_mask_2: 0.1697  loss_dice_2: 0.2256  loss_ce_3: 0.0002704  loss_mask_3: 0.1709  loss_dice_3: 0.2255  loss_ce_4: 0.0002412  loss_mask_4: 0.1694  loss_dice_4: 0.2256    time: 0.8918  last_time: 0.8677  data_time: 0.0570  last_data_time: 0.0443   lr: 2.0521e-05  max_mem: 11485M
[05/29 19:36:40] d2.utils.events INFO:  eta: 0:24:38  iter: 8299  total_loss: 2.386  loss_ce: 0.0002599  loss_mask: 0.1693  loss_dice: 0.2251  loss_ce_0: 0.0003026  loss_mask_0: 0.1695  loss_dice_0: 0.2253  loss_ce_1: 0.0003072  loss_mask_1: 0.1694  loss_dice_1: 0.2254  loss_ce_2: 0.0002867  loss_mask_2: 0.1695  loss_dice_2: 0.2254  loss_ce_3: 0.0002679  loss_mask_3: 0.1706  loss_dice_3: 0.2252  loss_ce_4: 0.0002404  loss_mask_4: 0.1691  loss_dice_4: 0.2252    time: 0.8918  last_time: 0.8923  data_time: 0.0570  last_data_time: 0.0562   lr: 2.0306e-05  max_mem: 11485M
[05/29 19:36:58] d2.utils.events INFO:  eta: 0:24:21  iter: 8319  total_loss: 2.38  loss_ce: 0.000258  loss_mask: 0.169  loss_dice: 0.225  loss_ce_0: 0.000301  loss_mask_0: 0.1692  loss_dice_0: 0.2251  loss_ce_1: 0.0003052  loss_mask_1: 0.1691  loss_dice_1: 0.2253  loss_ce_2: 0.0002845  loss_mask_2: 0.1693  loss_dice_2: 0.2252  loss_ce_3: 0.0002641  loss_mask_3: 0.1701  loss_dice_3: 0.225  loss_ce_4: 0.0002391  loss_mask_4: 0.1688  loss_dice_4: 0.2251    time: 0.8918  last_time: 0.8765  data_time: 0.0570  last_data_time: 0.0482   lr: 2.0091e-05  max_mem: 11485M
[05/29 19:37:16] d2.utils.events INFO:  eta: 0:24:03  iter: 8339  total_loss: 2.377  loss_ce: 0.000256  loss_mask: 0.1687  loss_dice: 0.2247  loss_ce_0: 0.0002998  loss_mask_0: 0.1689  loss_dice_0: 0.2249  loss_ce_1: 0.0003045  loss_mask_1: 0.1688  loss_dice_1: 0.2249  loss_ce_2: 0.0002833  loss_mask_2: 0.1689  loss_dice_2: 0.225  loss_ce_3: 0.0002626  loss_mask_3: 0.1699  loss_dice_3: 0.2249  loss_ce_4: 0.0002383  loss_mask_4: 0.1685  loss_dice_4: 0.2249    time: 0.8918  last_time: 0.8601  data_time: 0.0570  last_data_time: 0.0398   lr: 1.9876e-05  max_mem: 11485M
[05/29 19:37:33] d2.utils.events INFO:  eta: 0:23:45  iter: 8359  total_loss: 2.373  loss_ce: 0.0002554  loss_mask: 0.1685  loss_dice: 0.2245  loss_ce_0: 0.0002987  loss_mask_0: 0.1686  loss_dice_0: 0.2247  loss_ce_1: 0.0003034  loss_mask_1: 0.1684  loss_dice_1: 0.2247  loss_ce_2: 0.0002823  loss_mask_2: 0.1687  loss_dice_2: 0.2248  loss_ce_3: 0.0002623  loss_mask_3: 0.1697  loss_dice_3: 0.2246  loss_ce_4: 0.0002378  loss_mask_4: 0.1683  loss_dice_4: 0.2247    time: 0.8917  last_time: 0.8669  data_time: 0.0570  last_data_time: 0.0455   lr: 1.9661e-05  max_mem: 11485M
[05/29 19:37:51] d2.utils.events INFO:  eta: 0:23:27  iter: 8379  total_loss: 2.37  loss_ce: 0.0002541  loss_mask: 0.1682  loss_dice: 0.2244  loss_ce_0: 0.0002968  loss_mask_0: 0.1684  loss_dice_0: 0.2246  loss_ce_1: 0.0003004  loss_mask_1: 0.168  loss_dice_1: 0.2245  loss_ce_2: 0.0002787  loss_mask_2: 0.1683  loss_dice_2: 0.2247  loss_ce_3: 0.0002581  loss_mask_3: 0.1694  loss_dice_3: 0.2245  loss_ce_4: 0.0002357  loss_mask_4: 0.168  loss_dice_4: 0.2245    time: 0.8916  last_time: 0.8520  data_time: 0.0569  last_data_time: 0.0333   lr: 1.9445e-05  max_mem: 11485M
[05/29 19:38:08] d2.utils.events INFO:  eta: 0:23:10  iter: 8399  total_loss: 2.367  loss_ce: 0.0002525  loss_mask: 0.168  loss_dice: 0.2242  loss_ce_0: 0.0002951  loss_mask_0: 0.1682  loss_dice_0: 0.2244  loss_ce_1: 0.0002992  loss_mask_1: 0.1678  loss_dice_1: 0.2243  loss_ce_2: 0.0002762  loss_mask_2: 0.1681  loss_dice_2: 0.2243  loss_ce_3: 0.0002528  loss_mask_3: 0.1692  loss_dice_3: 0.2242  loss_ce_4: 0.0002341  loss_mask_4: 0.1679  loss_dice_4: 0.2242    time: 0.8916  last_time: 0.8648  data_time: 0.0569  last_data_time: 0.0434   lr: 1.9229e-05  max_mem: 11485M
[05/29 19:38:26] d2.utils.events INFO:  eta: 0:22:52  iter: 8419  total_loss: 2.364  loss_ce: 0.000251  loss_mask: 0.1677  loss_dice: 0.224  loss_ce_0: 0.0002929  loss_mask_0: 0.168  loss_dice_0: 0.2242  loss_ce_1: 0.0002972  loss_mask_1: 0.1676  loss_dice_1: 0.2241  loss_ce_2: 0.0002731  loss_mask_2: 0.1677  loss_dice_2: 0.2241  loss_ce_3: 0.0002491  loss_mask_3: 0.1689  loss_dice_3: 0.224  loss_ce_4: 0.0002328  loss_mask_4: 0.1677  loss_dice_4: 0.224    time: 0.8915  last_time: 0.9076  data_time: 0.0569  last_data_time: 0.0683   lr: 1.9012e-05  max_mem: 11485M
[05/29 19:38:43] d2.utils.events INFO:  eta: 0:22:35  iter: 8439  total_loss: 2.361  loss_ce: 0.0002505  loss_mask: 0.1674  loss_dice: 0.2239  loss_ce_0: 0.0002913  loss_mask_0: 0.1677  loss_dice_0: 0.224  loss_ce_1: 0.0002957  loss_mask_1: 0.1673  loss_dice_1: 0.224  loss_ce_2: 0.0002714  loss_mask_2: 0.1675  loss_dice_2: 0.2238  loss_ce_3: 0.000248  loss_mask_3: 0.1687  loss_dice_3: 0.2238  loss_ce_4: 0.0002319  loss_mask_4: 0.1673  loss_dice_4: 0.2239    time: 0.8915  last_time: 0.8847  data_time: 0.0569  last_data_time: 0.0506   lr: 1.8796e-05  max_mem: 11485M
[05/29 19:39:01] d2.utils.events INFO:  eta: 0:22:17  iter: 8459  total_loss: 2.357  loss_ce: 0.0002495  loss_mask: 0.1672  loss_dice: 0.2235  loss_ce_0: 0.000289  loss_mask_0: 0.1674  loss_dice_0: 0.2238  loss_ce_1: 0.0002927  loss_mask_1: 0.167  loss_dice_1: 0.2238  loss_ce_2: 0.0002689  loss_mask_2: 0.1673  loss_dice_2: 0.2237  loss_ce_3: 0.0002458  loss_mask_3: 0.1684  loss_dice_3: 0.2235  loss_ce_4: 0.0002302  loss_mask_4: 0.1671  loss_dice_4: 0.2236    time: 0.8914  last_time: 0.9229  data_time: 0.0568  last_data_time: 0.0820   lr: 1.8579e-05  max_mem: 11485M
[05/29 19:39:19] d2.utils.events INFO:  eta: 0:22:00  iter: 8479  total_loss: 2.352  loss_ce: 0.0002478  loss_mask: 0.1668  loss_dice: 0.2233  loss_ce_0: 0.0002881  loss_mask_0: 0.167  loss_dice_0: 0.2235  loss_ce_1: 0.0002894  loss_mask_1: 0.1667  loss_dice_1: 0.2234  loss_ce_2: 0.000267  loss_mask_2: 0.167  loss_dice_2: 0.2234  loss_ce_3: 0.0002445  loss_mask_3: 0.1681  loss_dice_3: 0.2234  loss_ce_4: 0.0002289  loss_mask_4: 0.1668  loss_dice_4: 0.2233    time: 0.8914  last_time: 0.8704  data_time: 0.0568  last_data_time: 0.0367   lr: 1.8362e-05  max_mem: 11485M
[05/29 19:39:36] d2.utils.events INFO:  eta: 0:21:43  iter: 8499  total_loss: 2.349  loss_ce: 0.0002463  loss_mask: 0.1667  loss_dice: 0.223  loss_ce_0: 0.0002864  loss_mask_0: 0.1667  loss_dice_0: 0.2233  loss_ce_1: 0.0002875  loss_mask_1: 0.1665  loss_dice_1: 0.2232  loss_ce_2: 0.0002642  loss_mask_2: 0.1666  loss_dice_2: 0.2231  loss_ce_3: 0.0002427  loss_mask_3: 0.1679  loss_dice_3: 0.2232  loss_ce_4: 0.0002278  loss_mask_4: 0.1666  loss_dice_4: 0.2232    time: 0.8913  last_time: 0.8603  data_time: 0.0568  last_data_time: 0.0321   lr: 1.8144e-05  max_mem: 11485M
[05/29 19:39:54] d2.utils.events INFO:  eta: 0:21:25  iter: 8519  total_loss: 2.344  loss_ce: 0.0002457  loss_mask: 0.1664  loss_dice: 0.2228  loss_ce_0: 0.0002851  loss_mask_0: 0.1664  loss_dice_0: 0.2231  loss_ce_1: 0.0002865  loss_mask_1: 0.1662  loss_dice_1: 0.2228  loss_ce_2: 0.0002609  loss_mask_2: 0.1664  loss_dice_2: 0.2229  loss_ce_3: 0.0002409  loss_mask_3: 0.1676  loss_dice_3: 0.2231  loss_ce_4: 0.0002264  loss_mask_4: 0.1664  loss_dice_4: 0.223    time: 0.8912  last_time: 0.8686  data_time: 0.0567  last_data_time: 0.0421   lr: 1.7927e-05  max_mem: 11485M
[05/29 19:40:11] d2.utils.events INFO:  eta: 0:21:08  iter: 8539  total_loss: 2.34  loss_ce: 0.0002452  loss_mask: 0.1662  loss_dice: 0.2226  loss_ce_0: 0.0002838  loss_mask_0: 0.1662  loss_dice_0: 0.2229  loss_ce_1: 0.0002849  loss_mask_1: 0.1659  loss_dice_1: 0.2226  loss_ce_2: 0.0002589  loss_mask_2: 0.1662  loss_dice_2: 0.2228  loss_ce_3: 0.00024  loss_mask_3: 0.1674  loss_dice_3: 0.2228  loss_ce_4: 0.0002251  loss_mask_4: 0.1661  loss_dice_4: 0.2228    time: 0.8912  last_time: 0.8410  data_time: 0.0567  last_data_time: 0.0363   lr: 1.7709e-05  max_mem: 11485M
[05/29 19:40:29] d2.utils.events INFO:  eta: 0:20:50  iter: 8559  total_loss: 2.337  loss_ce: 0.0002433  loss_mask: 0.1661  loss_dice: 0.2224  loss_ce_0: 0.0002825  loss_mask_0: 0.1658  loss_dice_0: 0.2226  loss_ce_1: 0.0002827  loss_mask_1: 0.1657  loss_dice_1: 0.2224  loss_ce_2: 0.0002562  loss_mask_2: 0.166  loss_dice_2: 0.2225  loss_ce_3: 0.0002385  loss_mask_3: 0.1672  loss_dice_3: 0.2225  loss_ce_4: 0.0002236  loss_mask_4: 0.1659  loss_dice_4: 0.2226    time: 0.8911  last_time: 0.8534  data_time: 0.0567  last_data_time: 0.0325   lr: 1.749e-05  max_mem: 11485M
[05/29 19:40:46] d2.utils.events INFO:  eta: 0:20:33  iter: 8579  total_loss: 2.334  loss_ce: 0.0002424  loss_mask: 0.1658  loss_dice: 0.2223  loss_ce_0: 0.0002801  loss_mask_0: 0.1656  loss_dice_0: 0.2223  loss_ce_1: 0.0002811  loss_mask_1: 0.1654  loss_dice_1: 0.2222  loss_ce_2: 0.0002525  loss_mask_2: 0.1656  loss_dice_2: 0.2224  loss_ce_3: 0.0002363  loss_mask_3: 0.1667  loss_dice_3: 0.2223  loss_ce_4: 0.0002218  loss_mask_4: 0.1657  loss_dice_4: 0.2222    time: 0.8910  last_time: 0.8965  data_time: 0.0566  last_data_time: 0.0760   lr: 1.7272e-05  max_mem: 11485M
[05/29 19:41:04] d2.utils.events INFO:  eta: 0:20:16  iter: 8599  total_loss: 2.332  loss_ce: 0.0002411  loss_mask: 0.1656  loss_dice: 0.2221  loss_ce_0: 0.0002787  loss_mask_0: 0.1654  loss_dice_0: 0.2221  loss_ce_1: 0.0002792  loss_mask_1: 0.1653  loss_dice_1: 0.222  loss_ce_2: 0.0002509  loss_mask_2: 0.1652  loss_dice_2: 0.2222  loss_ce_3: 0.0002347  loss_mask_3: 0.1665  loss_dice_3: 0.222  loss_ce_4: 0.0002206  loss_mask_4: 0.1654  loss_dice_4: 0.222    time: 0.8910  last_time: 0.8808  data_time: 0.0566  last_data_time: 0.0500   lr: 1.7053e-05  max_mem: 11485M
[05/29 19:41:22] d2.utils.events INFO:  eta: 0:19:59  iter: 8619  total_loss: 2.328  loss_ce: 0.0002392  loss_mask: 0.1654  loss_dice: 0.2219  loss_ce_0: 0.0002771  loss_mask_0: 0.1652  loss_dice_0: 0.2219  loss_ce_1: 0.0002774  loss_mask_1: 0.165  loss_dice_1: 0.2218  loss_ce_2: 0.0002489  loss_mask_2: 0.165  loss_dice_2: 0.2219  loss_ce_3: 0.0002336  loss_mask_3: 0.1662  loss_dice_3: 0.2218  loss_ce_4: 0.0002199  loss_mask_4: 0.165  loss_dice_4: 0.2218    time: 0.8911  last_time: 0.9078  data_time: 0.0566  last_data_time: 0.0743   lr: 1.6833e-05  max_mem: 11485M
[05/29 19:41:40] d2.utils.events INFO:  eta: 0:19:43  iter: 8639  total_loss: 2.325  loss_ce: 0.0002386  loss_mask: 0.1649  loss_dice: 0.2218  loss_ce_0: 0.0002758  loss_mask_0: 0.1649  loss_dice_0: 0.2218  loss_ce_1: 0.0002758  loss_mask_1: 0.1649  loss_dice_1: 0.2216  loss_ce_2: 0.000247  loss_mask_2: 0.1647  loss_dice_2: 0.2216  loss_ce_3: 0.0002323  loss_mask_3: 0.166  loss_dice_3: 0.2216  loss_ce_4: 0.0002195  loss_mask_4: 0.1648  loss_dice_4: 0.2216    time: 0.8911  last_time: 0.9073  data_time: 0.0566  last_data_time: 0.0714   lr: 1.6614e-05  max_mem: 11485M
[05/29 19:41:58] d2.utils.events INFO:  eta: 0:19:26  iter: 8659  total_loss: 2.322  loss_ce: 0.0002367  loss_mask: 0.1647  loss_dice: 0.2214  loss_ce_0: 0.0002738  loss_mask_0: 0.1646  loss_dice_0: 0.2215  loss_ce_1: 0.0002731  loss_mask_1: 0.1645  loss_dice_1: 0.2213  loss_ce_2: 0.0002447  loss_mask_2: 0.1644  loss_dice_2: 0.2213  loss_ce_3: 0.0002311  loss_mask_3: 0.1657  loss_dice_3: 0.2215  loss_ce_4: 0.0002181  loss_mask_4: 0.1645  loss_dice_4: 0.2213    time: 0.8910  last_time: 0.8570  data_time: 0.0566  last_data_time: 0.0391   lr: 1.6394e-05  max_mem: 11485M
[05/29 19:42:16] d2.utils.events INFO:  eta: 0:19:08  iter: 8679  total_loss: 2.321  loss_ce: 0.0002355  loss_mask: 0.1644  loss_dice: 0.2212  loss_ce_0: 0.0002724  loss_mask_0: 0.1644  loss_dice_0: 0.2213  loss_ce_1: 0.0002714  loss_mask_1: 0.1644  loss_dice_1: 0.2211  loss_ce_2: 0.0002424  loss_mask_2: 0.1642  loss_dice_2: 0.2211  loss_ce_3: 0.0002295  loss_mask_3: 0.1655  loss_dice_3: 0.2211  loss_ce_4: 0.0002173  loss_mask_4: 0.1643  loss_dice_4: 0.2211    time: 0.8910  last_time: 0.9458  data_time: 0.0566  last_data_time: 0.0872   lr: 1.6174e-05  max_mem: 11485M
[05/29 19:42:35] d2.utils.events INFO:  eta: 0:18:52  iter: 8699  total_loss: 2.317  loss_ce: 0.0002347  loss_mask: 0.1642  loss_dice: 0.221  loss_ce_0: 0.0002708  loss_mask_0: 0.1642  loss_dice_0: 0.2211  loss_ce_1: 0.0002686  loss_mask_1: 0.1642  loss_dice_1: 0.2208  loss_ce_2: 0.0002398  loss_mask_2: 0.164  loss_dice_2: 0.2209  loss_ce_3: 0.0002273  loss_mask_3: 0.1652  loss_dice_3: 0.2209  loss_ce_4: 0.000216  loss_mask_4: 0.1642  loss_dice_4: 0.2207    time: 0.8911  last_time: 0.9381  data_time: 0.0567  last_data_time: 0.0929   lr: 1.5953e-05  max_mem: 11485M
[05/29 19:42:54] d2.utils.events INFO:  eta: 0:18:35  iter: 8719  total_loss: 2.314  loss_ce: 0.0002331  loss_mask: 0.1639  loss_dice: 0.2207  loss_ce_0: 0.0002693  loss_mask_0: 0.1639  loss_dice_0: 0.221  loss_ce_1: 0.0002661  loss_mask_1: 0.1639  loss_dice_1: 0.2206  loss_ce_2: 0.000236  loss_mask_2: 0.1638  loss_dice_2: 0.2206  loss_ce_3: 0.0002254  loss_mask_3: 0.1649  loss_dice_3: 0.2206  loss_ce_4: 0.0002139  loss_mask_4: 0.1639  loss_dice_4: 0.2205    time: 0.8913  last_time: 0.9494  data_time: 0.0568  last_data_time: 0.0961   lr: 1.5732e-05  max_mem: 11485M
[05/29 19:43:13] d2.utils.events INFO:  eta: 0:18:19  iter: 8739  total_loss: 2.312  loss_ce: 0.0002327  loss_mask: 0.1636  loss_dice: 0.2205  loss_ce_0: 0.0002679  loss_mask_0: 0.1637  loss_dice_0: 0.2207  loss_ce_1: 0.0002643  loss_mask_1: 0.1636  loss_dice_1: 0.2204  loss_ce_2: 0.0002342  loss_mask_2: 0.1635  loss_dice_2: 0.2203  loss_ce_3: 0.0002238  loss_mask_3: 0.1645  loss_dice_3: 0.2204  loss_ce_4: 0.0002127  loss_mask_4: 0.1637  loss_dice_4: 0.2203    time: 0.8914  last_time: 0.9229  data_time: 0.0568  last_data_time: 0.0598   lr: 1.5511e-05  max_mem: 11485M
[05/29 19:43:33] d2.utils.events INFO:  eta: 0:18:02  iter: 8759  total_loss: 2.309  loss_ce: 0.0002315  loss_mask: 0.1635  loss_dice: 0.2203  loss_ce_0: 0.0002654  loss_mask_0: 0.1635  loss_dice_0: 0.2205  loss_ce_1: 0.0002625  loss_mask_1: 0.1635  loss_dice_1: 0.2202  loss_ce_2: 0.000233  loss_mask_2: 0.1633  loss_dice_2: 0.2201  loss_ce_3: 0.0002218  loss_mask_3: 0.1643  loss_dice_3: 0.2201  loss_ce_4: 0.0002118  loss_mask_4: 0.1634  loss_dice_4: 0.2201    time: 0.8915  last_time: 0.9495  data_time: 0.0569  last_data_time: 0.0755   lr: 1.529e-05  max_mem: 11485M
[05/29 19:43:52] d2.utils.events INFO:  eta: 0:17:45  iter: 8779  total_loss: 2.306  loss_ce: 0.00023  loss_mask: 0.1632  loss_dice: 0.22  loss_ce_0: 0.0002636  loss_mask_0: 0.1632  loss_dice_0: 0.2203  loss_ce_1: 0.0002608  loss_mask_1: 0.1632  loss_dice_1: 0.2199  loss_ce_2: 0.0002308  loss_mask_2: 0.1631  loss_dice_2: 0.2197  loss_ce_3: 0.0002205  loss_mask_3: 0.1642  loss_dice_3: 0.2199  loss_ce_4: 0.000211  loss_mask_4: 0.1632  loss_dice_4: 0.2199    time: 0.8916  last_time: 0.9521  data_time: 0.0570  last_data_time: 0.0641   lr: 1.5068e-05  max_mem: 11485M
[05/29 19:44:11] d2.utils.events INFO:  eta: 0:17:29  iter: 8799  total_loss: 2.303  loss_ce: 0.0002293  loss_mask: 0.163  loss_dice: 0.2198  loss_ce_0: 0.0002627  loss_mask_0: 0.163  loss_dice_0: 0.2201  loss_ce_1: 0.0002585  loss_mask_1: 0.163  loss_dice_1: 0.2196  loss_ce_2: 0.0002283  loss_mask_2: 0.1629  loss_dice_2: 0.2196  loss_ce_3: 0.0002188  loss_mask_3: 0.1639  loss_dice_3: 0.2197  loss_ce_4: 0.0002092  loss_mask_4: 0.1629  loss_dice_4: 0.2197    time: 0.8917  last_time: 0.9152  data_time: 0.0570  last_data_time: 0.0595   lr: 1.4845e-05  max_mem: 11485M
[05/29 19:44:30] d2.utils.events INFO:  eta: 0:17:12  iter: 8819  total_loss: 2.3  loss_ce: 0.000228  loss_mask: 0.1628  loss_dice: 0.2195  loss_ce_0: 0.000261  loss_mask_0: 0.1628  loss_dice_0: 0.2199  loss_ce_1: 0.0002573  loss_mask_1: 0.1628  loss_dice_1: 0.2193  loss_ce_2: 0.0002268  loss_mask_2: 0.1628  loss_dice_2: 0.2194  loss_ce_3: 0.0002172  loss_mask_3: 0.1637  loss_dice_3: 0.2195  loss_ce_4: 0.0002084  loss_mask_4: 0.1627  loss_dice_4: 0.2195    time: 0.8918  last_time: 0.9276  data_time: 0.0571  last_data_time: 0.0830   lr: 1.4623e-05  max_mem: 11485M
[05/29 19:44:50] d2.utils.events INFO:  eta: 0:16:56  iter: 8839  total_loss: 2.297  loss_ce: 0.0002273  loss_mask: 0.1626  loss_dice: 0.2193  loss_ce_0: 0.0002586  loss_mask_0: 0.1626  loss_dice_0: 0.2196  loss_ce_1: 0.0002564  loss_mask_1: 0.1625  loss_dice_1: 0.2191  loss_ce_2: 0.0002235  loss_mask_2: 0.1627  loss_dice_2: 0.2193  loss_ce_3: 0.0002154  loss_mask_3: 0.1634  loss_dice_3: 0.2194  loss_ce_4: 0.0002072  loss_mask_4: 0.1626  loss_dice_4: 0.2193    time: 0.8920  last_time: 0.9533  data_time: 0.0572  last_data_time: 0.1009   lr: 1.44e-05  max_mem: 11485M
[05/29 19:45:09] d2.utils.events INFO:  eta: 0:16:39  iter: 8859  total_loss: 2.295  loss_ce: 0.0002264  loss_mask: 0.1624  loss_dice: 0.219  loss_ce_0: 0.0002571  loss_mask_0: 0.1624  loss_dice_0: 0.2193  loss_ce_1: 0.0002552  loss_mask_1: 0.1623  loss_dice_1: 0.2189  loss_ce_2: 0.0002222  loss_mask_2: 0.1624  loss_dice_2: 0.2191  loss_ce_3: 0.0002141  loss_mask_3: 0.1632  loss_dice_3: 0.2191  loss_ce_4: 0.0002063  loss_mask_4: 0.1623  loss_dice_4: 0.219    time: 0.8921  last_time: 0.9138  data_time: 0.0572  last_data_time: 0.0575   lr: 1.4176e-05  max_mem: 11485M
[05/29 19:45:27] d2.utils.events INFO:  eta: 0:16:23  iter: 8879  total_loss: 2.293  loss_ce: 0.0002259  loss_mask: 0.1622  loss_dice: 0.2187  loss_ce_0: 0.0002558  loss_mask_0: 0.1623  loss_dice_0: 0.219  loss_ce_1: 0.0002544  loss_mask_1: 0.1621  loss_dice_1: 0.2186  loss_ce_2: 0.0002211  loss_mask_2: 0.1622  loss_dice_2: 0.2189  loss_ce_3: 0.0002133  loss_mask_3: 0.163  loss_dice_3: 0.219  loss_ce_4: 0.0002052  loss_mask_4: 0.162  loss_dice_4: 0.2188    time: 0.8921  last_time: 0.9246  data_time: 0.0572  last_data_time: 0.0673   lr: 1.3952e-05  max_mem: 11485M
[05/29 19:45:46] d2.utils.events INFO:  eta: 0:16:07  iter: 8899  total_loss: 2.29  loss_ce: 0.0002246  loss_mask: 0.1621  loss_dice: 0.2185  loss_ce_0: 0.0002551  loss_mask_0: 0.162  loss_dice_0: 0.2188  loss_ce_1: 0.0002533  loss_mask_1: 0.1619  loss_dice_1: 0.2185  loss_ce_2: 0.0002193  loss_mask_2: 0.162  loss_dice_2: 0.2187  loss_ce_3: 0.000212  loss_mask_3: 0.1628  loss_dice_3: 0.2186  loss_ce_4: 0.0002039  loss_mask_4: 0.1618  loss_dice_4: 0.2186    time: 0.8922  last_time: 0.9310  data_time: 0.0573  last_data_time: 0.0771   lr: 1.3728e-05  max_mem: 11485M
[05/29 19:46:05] d2.utils.events INFO:  eta: 0:15:51  iter: 8919  total_loss: 2.286  loss_ce: 0.0002239  loss_mask: 0.1618  loss_dice: 0.2183  loss_ce_0: 0.000254  loss_mask_0: 0.1617  loss_dice_0: 0.2184  loss_ce_1: 0.000251  loss_mask_1: 0.1617  loss_dice_1: 0.2182  loss_ce_2: 0.0002169  loss_mask_2: 0.1619  loss_dice_2: 0.2186  loss_ce_3: 0.0002107  loss_mask_3: 0.1626  loss_dice_3: 0.2183  loss_ce_4: 0.0002029  loss_mask_4: 0.1616  loss_dice_4: 0.2184    time: 0.8923  last_time: 0.8922  data_time: 0.0574  last_data_time: 0.0501   lr: 1.3503e-05  max_mem: 11485M
[05/29 19:46:24] d2.utils.events INFO:  eta: 0:15:35  iter: 8939  total_loss: 2.284  loss_ce: 0.0002231  loss_mask: 0.1616  loss_dice: 0.2181  loss_ce_0: 0.0002532  loss_mask_0: 0.1615  loss_dice_0: 0.2182  loss_ce_1: 0.0002497  loss_mask_1: 0.1615  loss_dice_1: 0.2181  loss_ce_2: 0.0002147  loss_mask_2: 0.1617  loss_dice_2: 0.2183  loss_ce_3: 0.0002094  loss_mask_3: 0.1624  loss_dice_3: 0.2181  loss_ce_4: 0.0002014  loss_mask_4: 0.1615  loss_dice_4: 0.2182    time: 0.8924  last_time: 0.9396  data_time: 0.0574  last_data_time: 0.1009   lr: 1.3278e-05  max_mem: 11485M
[05/29 19:46:43] d2.utils.events INFO:  eta: 0:15:20  iter: 8959  total_loss: 2.281  loss_ce: 0.0002222  loss_mask: 0.1614  loss_dice: 0.218  loss_ce_0: 0.0002521  loss_mask_0: 0.1613  loss_dice_0: 0.2179  loss_ce_1: 0.0002484  loss_mask_1: 0.1611  loss_dice_1: 0.2179  loss_ce_2: 0.0002136  loss_mask_2: 0.1615  loss_dice_2: 0.218  loss_ce_3: 0.0002088  loss_mask_3: 0.1622  loss_dice_3: 0.2179  loss_ce_4: 0.0001999  loss_mask_4: 0.1613  loss_dice_4: 0.2181    time: 0.8925  last_time: 0.9612  data_time: 0.0575  last_data_time: 0.1063   lr: 1.3053e-05  max_mem: 11485M
[05/29 19:47:02] d2.utils.events INFO:  eta: 0:15:05  iter: 8979  total_loss: 2.279  loss_ce: 0.0002206  loss_mask: 0.1611  loss_dice: 0.2177  loss_ce_0: 0.0002502  loss_mask_0: 0.1611  loss_dice_0: 0.2176  loss_ce_1: 0.0002468  loss_mask_1: 0.1609  loss_dice_1: 0.2177  loss_ce_2: 0.000213  loss_mask_2: 0.1612  loss_dice_2: 0.2178  loss_ce_3: 0.0002067  loss_mask_3: 0.1621  loss_dice_3: 0.2176  loss_ce_4: 0.0001986  loss_mask_4: 0.1611  loss_dice_4: 0.2179    time: 0.8926  last_time: 0.9690  data_time: 0.0575  last_data_time: 0.0993   lr: 1.2827e-05  max_mem: 11485M
[05/29 19:47:21] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/climatenet_v2/model_0008999.pth
[05/29 19:47:22] d2.utils.events INFO:  eta: 0:14:49  iter: 8999  total_loss: 2.276  loss_ce: 0.0002197  loss_mask: 0.161  loss_dice: 0.2176  loss_ce_0: 0.0002484  loss_mask_0: 0.1609  loss_dice_0: 0.2174  loss_ce_1: 0.0002457  loss_mask_1: 0.1607  loss_dice_1: 0.2175  loss_ce_2: 0.0002119  loss_mask_2: 0.1609  loss_dice_2: 0.2175  loss_ce_3: 0.0002061  loss_mask_3: 0.1619  loss_dice_3: 0.2172  loss_ce_4: 0.0001979  loss_mask_4: 0.1609  loss_dice_4: 0.2176    time: 0.8927  last_time: 0.9325  data_time: 0.0576  last_data_time: 0.0803   lr: 1.2601e-05  max_mem: 11485M
[05/29 19:47:41] d2.utils.events INFO:  eta: 0:14:33  iter: 9019  total_loss: 2.273  loss_ce: 0.0002177  loss_mask: 0.1607  loss_dice: 0.2174  loss_ce_0: 0.0002471  loss_mask_0: 0.1607  loss_dice_0: 0.2171  loss_ce_1: 0.0002438  loss_mask_1: 0.1605  loss_dice_1: 0.2173  loss_ce_2: 0.000211  loss_mask_2: 0.1607  loss_dice_2: 0.2174  loss_ce_3: 0.0002039  loss_mask_3: 0.1618  loss_dice_3: 0.2171  loss_ce_4: 0.0001962  loss_mask_4: 0.1607  loss_dice_4: 0.2173    time: 0.8928  last_time: 0.9561  data_time: 0.0576  last_data_time: 0.0896   lr: 1.2374e-05  max_mem: 11485M
[05/29 19:48:00] d2.utils.events INFO:  eta: 0:14:17  iter: 9039  total_loss: 2.271  loss_ce: 0.0002164  loss_mask: 0.1606  loss_dice: 0.2172  loss_ce_0: 0.000246  loss_mask_0: 0.1605  loss_dice_0: 0.217  loss_ce_1: 0.0002421  loss_mask_1: 0.1603  loss_dice_1: 0.217  loss_ce_2: 0.0002097  loss_mask_2: 0.1605  loss_dice_2: 0.2172  loss_ce_3: 0.0002031  loss_mask_3: 0.1615  loss_dice_3: 0.2169  loss_ce_4: 0.0001952  loss_mask_4: 0.1604  loss_dice_4: 0.2171    time: 0.8928  last_time: 0.9484  data_time: 0.0577  last_data_time: 0.1054   lr: 1.2146e-05  max_mem: 11485M
[05/29 19:48:19] d2.utils.events INFO:  eta: 0:14:02  iter: 9059  total_loss: 2.268  loss_ce: 0.0002153  loss_mask: 0.1605  loss_dice: 0.217  loss_ce_0: 0.0002447  loss_mask_0: 0.1604  loss_dice_0: 0.2168  loss_ce_1: 0.000241  loss_mask_1: 0.1602  loss_dice_1: 0.2168  loss_ce_2: 0.0002071  loss_mask_2: 0.1603  loss_dice_2: 0.217  loss_ce_3: 0.0002022  loss_mask_3: 0.1613  loss_dice_3: 0.2167  loss_ce_4: 0.000194  loss_mask_4: 0.1602  loss_dice_4: 0.2169    time: 0.8930  last_time: 0.9349  data_time: 0.0577  last_data_time: 0.0866   lr: 1.1919e-05  max_mem: 11485M
[05/29 19:48:38] d2.utils.events INFO:  eta: 0:13:45  iter: 9079  total_loss: 2.266  loss_ce: 0.000215  loss_mask: 0.1603  loss_dice: 0.2167  loss_ce_0: 0.0002432  loss_mask_0: 0.1602  loss_dice_0: 0.2167  loss_ce_1: 0.0002392  loss_mask_1: 0.16  loss_dice_1: 0.2167  loss_ce_2: 0.0002054  loss_mask_2: 0.1601  loss_dice_2: 0.2168  loss_ce_3: 0.000201  loss_mask_3: 0.161  loss_dice_3: 0.2166  loss_ce_4: 0.0001924  loss_mask_4: 0.16  loss_dice_4: 0.2168    time: 0.8931  last_time: 0.9432  data_time: 0.0578  last_data_time: 0.0795   lr: 1.1691e-05  max_mem: 11485M
[05/29 19:48:58] d2.utils.events INFO:  eta: 0:13:29  iter: 9099  total_loss: 2.263  loss_ce: 0.000214  loss_mask: 0.1602  loss_dice: 0.2165  loss_ce_0: 0.0002419  loss_mask_0: 0.16  loss_dice_0: 0.2166  loss_ce_1: 0.0002386  loss_mask_1: 0.1598  loss_dice_1: 0.2165  loss_ce_2: 0.0002041  loss_mask_2: 0.1599  loss_dice_2: 0.2165  loss_ce_3: 0.0002002  loss_mask_3: 0.1608  loss_dice_3: 0.2164  loss_ce_4: 0.0001913  loss_mask_4: 0.1598  loss_dice_4: 0.2166    time: 0.8932  last_time: 0.9403  data_time: 0.0578  last_data_time: 0.0936   lr: 1.1462e-05  max_mem: 11485M
[05/29 19:49:16] d2.utils.events INFO:  eta: 0:13:14  iter: 9119  total_loss: 2.261  loss_ce: 0.0002132  loss_mask: 0.1599  loss_dice: 0.2164  loss_ce_0: 0.000241  loss_mask_0: 0.1598  loss_dice_0: 0.2164  loss_ce_1: 0.0002373  loss_mask_1: 0.1596  loss_dice_1: 0.2163  loss_ce_2: 0.0002022  loss_mask_2: 0.1597  loss_dice_2: 0.2163  loss_ce_3: 0.0001992  loss_mask_3: 0.1605  loss_dice_3: 0.2161  loss_ce_4: 0.0001903  loss_mask_4: 0.1596  loss_dice_4: 0.2164    time: 0.8933  last_time: 0.9350  data_time: 0.0579  last_data_time: 0.0802   lr: 1.1233e-05  max_mem: 11485M
[05/29 19:49:35] d2.utils.events INFO:  eta: 0:12:57  iter: 9139  total_loss: 2.259  loss_ce: 0.0002123  loss_mask: 0.1597  loss_dice: 0.2162  loss_ce_0: 0.0002404  loss_mask_0: 0.1597  loss_dice_0: 0.2161  loss_ce_1: 0.0002358  loss_mask_1: 0.1594  loss_dice_1: 0.2159  loss_ce_2: 0.0002006  loss_mask_2: 0.1595  loss_dice_2: 0.2162  loss_ce_3: 0.0001978  loss_mask_3: 0.1604  loss_dice_3: 0.216  loss_ce_4: 0.0001894  loss_mask_4: 0.1594  loss_dice_4: 0.2163    time: 0.8933  last_time: 0.9107  data_time: 0.0579  last_data_time: 0.0742   lr: 1.1003e-05  max_mem: 11485M
[05/29 19:49:54] d2.utils.events INFO:  eta: 0:12:41  iter: 9159  total_loss: 2.257  loss_ce: 0.0002115  loss_mask: 0.1595  loss_dice: 0.216  loss_ce_0: 0.0002396  loss_mask_0: 0.1595  loss_dice_0: 0.2158  loss_ce_1: 0.0002342  loss_mask_1: 0.1592  loss_dice_1: 0.2157  loss_ce_2: 0.0001992  loss_mask_2: 0.1594  loss_dice_2: 0.216  loss_ce_3: 0.0001966  loss_mask_3: 0.1602  loss_dice_3: 0.2159  loss_ce_4: 0.0001884  loss_mask_4: 0.1592  loss_dice_4: 0.2161    time: 0.8934  last_time: 0.9144  data_time: 0.0580  last_data_time: 0.0861   lr: 1.0772e-05  max_mem: 11485M
[05/29 19:50:13] d2.utils.events INFO:  eta: 0:12:24  iter: 9179  total_loss: 2.255  loss_ce: 0.0002107  loss_mask: 0.1594  loss_dice: 0.2157  loss_ce_0: 0.000238  loss_mask_0: 0.1594  loss_dice_0: 0.2157  loss_ce_1: 0.0002317  loss_mask_1: 0.1589  loss_dice_1: 0.2155  loss_ce_2: 0.0001973  loss_mask_2: 0.1592  loss_dice_2: 0.2157  loss_ce_3: 0.0001944  loss_mask_3: 0.1598  loss_dice_3: 0.2158  loss_ce_4: 0.0001869  loss_mask_4: 0.159  loss_dice_4: 0.216    time: 0.8935  last_time: 0.9317  data_time: 0.0581  last_data_time: 0.0900   lr: 1.0542e-05  max_mem: 11485M
[05/29 19:50:31] d2.utils.events INFO:  eta: 0:12:07  iter: 9199  total_loss: 2.252  loss_ce: 0.0002092  loss_mask: 0.1592  loss_dice: 0.2155  loss_ce_0: 0.0002366  loss_mask_0: 0.1592  loss_dice_0: 0.2155  loss_ce_1: 0.0002303  loss_mask_1: 0.1587  loss_dice_1: 0.2154  loss_ce_2: 0.0001957  loss_mask_2: 0.1589  loss_dice_2: 0.2155  loss_ce_3: 0.0001934  loss_mask_3: 0.1596  loss_dice_3: 0.2155  loss_ce_4: 0.0001859  loss_mask_4: 0.1587  loss_dice_4: 0.2159    time: 0.8935  last_time: 0.9032  data_time: 0.0581  last_data_time: 0.0715   lr: 1.031e-05  max_mem: 11485M
[05/29 19:50:49] d2.utils.events INFO:  eta: 0:11:48  iter: 9219  total_loss: 2.25  loss_ce: 0.0002085  loss_mask: 0.1587  loss_dice: 0.2153  loss_ce_0: 0.0002361  loss_mask_0: 0.1589  loss_dice_0: 0.2153  loss_ce_1: 0.0002291  loss_mask_1: 0.1584  loss_dice_1: 0.2152  loss_ce_2: 0.0001943  loss_mask_2: 0.1587  loss_dice_2: 0.2152  loss_ce_3: 0.0001916  loss_mask_3: 0.1595  loss_dice_3: 0.2154  loss_ce_4: 0.0001853  loss_mask_4: 0.1585  loss_dice_4: 0.2157    time: 0.8935  last_time: 0.8537  data_time: 0.0581  last_data_time: 0.0347   lr: 1.0078e-05  max_mem: 11485M
[05/29 19:51:06] d2.utils.events INFO:  eta: 0:11:30  iter: 9239  total_loss: 2.247  loss_ce: 0.0002077  loss_mask: 0.1585  loss_dice: 0.2152  loss_ce_0: 0.0002355  loss_mask_0: 0.1587  loss_dice_0: 0.2151  loss_ce_1: 0.0002271  loss_mask_1: 0.1583  loss_dice_1: 0.215  loss_ce_2: 0.0001935  loss_mask_2: 0.1586  loss_dice_2: 0.2151  loss_ce_3: 0.0001909  loss_mask_3: 0.1593  loss_dice_3: 0.2152  loss_ce_4: 0.0001846  loss_mask_4: 0.1583  loss_dice_4: 0.2155    time: 0.8934  last_time: 0.8682  data_time: 0.0580  last_data_time: 0.0395   lr: 9.8457e-06  max_mem: 11485M
[05/29 19:51:24] d2.utils.events INFO:  eta: 0:11:11  iter: 9259  total_loss: 2.243  loss_ce: 0.0002058  loss_mask: 0.1583  loss_dice: 0.2151  loss_ce_0: 0.0002346  loss_mask_0: 0.1585  loss_dice_0: 0.2149  loss_ce_1: 0.0002262  loss_mask_1: 0.158  loss_dice_1: 0.2148  loss_ce_2: 0.0001924  loss_mask_2: 0.1584  loss_dice_2: 0.2149  loss_ce_3: 0.0001897  loss_mask_3: 0.1591  loss_dice_3: 0.2149  loss_ce_4: 0.0001837  loss_mask_4: 0.1581  loss_dice_4: 0.2153    time: 0.8934  last_time: 0.8709  data_time: 0.0580  last_data_time: 0.0402   lr: 9.6125e-06  max_mem: 11485M
[05/29 19:51:42] d2.utils.events INFO:  eta: 0:10:53  iter: 9279  total_loss: 2.241  loss_ce: 0.0002049  loss_mask: 0.1581  loss_dice: 0.2148  loss_ce_0: 0.0002328  loss_mask_0: 0.1582  loss_dice_0: 0.2147  loss_ce_1: 0.0002244  loss_mask_1: 0.1578  loss_dice_1: 0.2146  loss_ce_2: 0.0001918  loss_mask_2: 0.1582  loss_dice_2: 0.2148  loss_ce_3: 0.0001878  loss_mask_3: 0.159  loss_dice_3: 0.2148  loss_ce_4: 0.0001824  loss_mask_4: 0.1579  loss_dice_4: 0.2151    time: 0.8933  last_time: 0.8638  data_time: 0.0580  last_data_time: 0.0344   lr: 9.3787e-06  max_mem: 11485M
[05/29 19:51:59] d2.utils.events INFO:  eta: 0:10:35  iter: 9299  total_loss: 2.239  loss_ce: 0.000204  loss_mask: 0.1579  loss_dice: 0.2146  loss_ce_0: 0.0002318  loss_mask_0: 0.158  loss_dice_0: 0.2146  loss_ce_1: 0.0002235  loss_mask_1: 0.1575  loss_dice_1: 0.2145  loss_ce_2: 0.00019  loss_mask_2: 0.158  loss_dice_2: 0.2147  loss_ce_3: 0.0001865  loss_mask_3: 0.1589  loss_dice_3: 0.2146  loss_ce_4: 0.0001808  loss_mask_4: 0.1577  loss_dice_4: 0.2147    time: 0.8933  last_time: 0.8573  data_time: 0.0579  last_data_time: 0.0401   lr: 9.1442e-06  max_mem: 11485M
[05/29 19:52:17] d2.utils.events INFO:  eta: 0:10:17  iter: 9319  total_loss: 2.236  loss_ce: 0.0002033  loss_mask: 0.1577  loss_dice: 0.2144  loss_ce_0: 0.0002293  loss_mask_0: 0.1578  loss_dice_0: 0.2145  loss_ce_1: 0.0002227  loss_mask_1: 0.1572  loss_dice_1: 0.2143  loss_ce_2: 0.0001888  loss_mask_2: 0.1576  loss_dice_2: 0.2145  loss_ce_3: 0.0001853  loss_mask_3: 0.1587  loss_dice_3: 0.2145  loss_ce_4: 0.0001803  loss_mask_4: 0.1574  loss_dice_4: 0.2146    time: 0.8932  last_time: 0.9170  data_time: 0.0579  last_data_time: 0.0593   lr: 8.9091e-06  max_mem: 11485M
[05/29 19:52:35] d2.utils.events INFO:  eta: 0:09:58  iter: 9339  total_loss: 2.235  loss_ce: 0.0002027  loss_mask: 0.1576  loss_dice: 0.2142  loss_ce_0: 0.0002271  loss_mask_0: 0.1576  loss_dice_0: 0.2143  loss_ce_1: 0.0002207  loss_mask_1: 0.1571  loss_dice_1: 0.2142  loss_ce_2: 0.000188  loss_mask_2: 0.1575  loss_dice_2: 0.2143  loss_ce_3: 0.0001832  loss_mask_3: 0.1586  loss_dice_3: 0.2143  loss_ce_4: 0.0001789  loss_mask_4: 0.1574  loss_dice_4: 0.2144    time: 0.8932  last_time: 0.8990  data_time: 0.0579  last_data_time: 0.0657   lr: 8.6732e-06  max_mem: 11485M
[05/29 19:52:52] d2.utils.events INFO:  eta: 0:09:40  iter: 9359  total_loss: 2.233  loss_ce: 0.0002019  loss_mask: 0.1573  loss_dice: 0.2141  loss_ce_0: 0.0002263  loss_mask_0: 0.1574  loss_dice_0: 0.214  loss_ce_1: 0.0002185  loss_mask_1: 0.1569  loss_dice_1: 0.2139  loss_ce_2: 0.0001868  loss_mask_2: 0.1574  loss_dice_2: 0.2142  loss_ce_3: 0.0001824  loss_mask_3: 0.1585  loss_dice_3: 0.2141  loss_ce_4: 0.0001776  loss_mask_4: 0.1573  loss_dice_4: 0.2142    time: 0.8931  last_time: 0.8762  data_time: 0.0579  last_data_time: 0.0517   lr: 8.4367e-06  max_mem: 11485M
[05/29 19:53:10] d2.utils.events INFO:  eta: 0:09:22  iter: 9379  total_loss: 2.228  loss_ce: 0.0002011  loss_mask: 0.1571  loss_dice: 0.2139  loss_ce_0: 0.0002249  loss_mask_0: 0.1572  loss_dice_0: 0.2139  loss_ce_1: 0.0002176  loss_mask_1: 0.1568  loss_dice_1: 0.2138  loss_ce_2: 0.0001859  loss_mask_2: 0.1572  loss_dice_2: 0.2139  loss_ce_3: 0.0001813  loss_mask_3: 0.1583  loss_dice_3: 0.2139  loss_ce_4: 0.0001762  loss_mask_4: 0.1571  loss_dice_4: 0.2139    time: 0.8930  last_time: 0.8747  data_time: 0.0578  last_data_time: 0.0461   lr: 8.1994e-06  max_mem: 11485M
[05/29 19:53:27] d2.utils.events INFO:  eta: 0:09:04  iter: 9399  total_loss: 2.227  loss_ce: 0.0002002  loss_mask: 0.157  loss_dice: 0.2137  loss_ce_0: 0.0002233  loss_mask_0: 0.157  loss_dice_0: 0.2137  loss_ce_1: 0.0002163  loss_mask_1: 0.1565  loss_dice_1: 0.2136  loss_ce_2: 0.0001847  loss_mask_2: 0.157  loss_dice_2: 0.2137  loss_ce_3: 0.0001802  loss_mask_3: 0.1581  loss_dice_3: 0.2137  loss_ce_4: 0.0001752  loss_mask_4: 0.1569  loss_dice_4: 0.2138    time: 0.8930  last_time: 0.8802  data_time: 0.0578  last_data_time: 0.0574   lr: 7.9614e-06  max_mem: 11485M
[05/29 19:53:45] d2.utils.events INFO:  eta: 0:08:45  iter: 9419  total_loss: 2.224  loss_ce: 0.0001998  loss_mask: 0.1567  loss_dice: 0.2136  loss_ce_0: 0.0002223  loss_mask_0: 0.1567  loss_dice_0: 0.2136  loss_ce_1: 0.0002142  loss_mask_1: 0.1564  loss_dice_1: 0.2135  loss_ce_2: 0.0001837  loss_mask_2: 0.1568  loss_dice_2: 0.2136  loss_ce_3: 0.0001788  loss_mask_3: 0.1579  loss_dice_3: 0.2136  loss_ce_4: 0.0001742  loss_mask_4: 0.1566  loss_dice_4: 0.2135    time: 0.8929  last_time: 0.8355  data_time: 0.0578  last_data_time: 0.0361   lr: 7.7225e-06  max_mem: 11485M
[05/29 19:54:02] d2.utils.events INFO:  eta: 0:08:27  iter: 9439  total_loss: 2.221  loss_ce: 0.0001984  loss_mask: 0.1566  loss_dice: 0.2133  loss_ce_0: 0.0002214  loss_mask_0: 0.1566  loss_dice_0: 0.2135  loss_ce_1: 0.0002119  loss_mask_1: 0.1561  loss_dice_1: 0.2133  loss_ce_2: 0.0001824  loss_mask_2: 0.1566  loss_dice_2: 0.2135  loss_ce_3: 0.0001785  loss_mask_3: 0.1577  loss_dice_3: 0.2134  loss_ce_4: 0.0001735  loss_mask_4: 0.1564  loss_dice_4: 0.2134    time: 0.8929  last_time: 0.8681  data_time: 0.0577  last_data_time: 0.0428   lr: 7.4828e-06  max_mem: 11485M
[05/29 19:54:20] d2.utils.events INFO:  eta: 0:08:09  iter: 9459  total_loss: 2.219  loss_ce: 0.0001972  loss_mask: 0.1564  loss_dice: 0.2131  loss_ce_0: 0.0002201  loss_mask_0: 0.1563  loss_dice_0: 0.2134  loss_ce_1: 0.0002091  loss_mask_1: 0.156  loss_dice_1: 0.2132  loss_ce_2: 0.0001809  loss_mask_2: 0.1564  loss_dice_2: 0.2133  loss_ce_3: 0.0001775  loss_mask_3: 0.1574  loss_dice_3: 0.2133  loss_ce_4: 0.0001727  loss_mask_4: 0.1561  loss_dice_4: 0.2133    time: 0.8928  last_time: 0.8749  data_time: 0.0577  last_data_time: 0.0433   lr: 7.2423e-06  max_mem: 11485M
[05/29 19:54:37] d2.utils.events INFO:  eta: 0:07:51  iter: 9479  total_loss: 2.217  loss_ce: 0.0001961  loss_mask: 0.1561  loss_dice: 0.2129  loss_ce_0: 0.0002189  loss_mask_0: 0.1562  loss_dice_0: 0.2131  loss_ce_1: 0.0002077  loss_mask_1: 0.1559  loss_dice_1: 0.2129  loss_ce_2: 0.00018  loss_mask_2: 0.1563  loss_dice_2: 0.2131  loss_ce_3: 0.0001761  loss_mask_3: 0.1572  loss_dice_3: 0.213  loss_ce_4: 0.000172  loss_mask_4: 0.1561  loss_dice_4: 0.213    time: 0.8928  last_time: 0.9017  data_time: 0.0577  last_data_time: 0.0600   lr: 7.0009e-06  max_mem: 11485M
[05/29 19:54:55] d2.utils.events INFO:  eta: 0:07:33  iter: 9499  total_loss: 2.215  loss_ce: 0.0001948  loss_mask: 0.1559  loss_dice: 0.2128  loss_ce_0: 0.0002178  loss_mask_0: 0.156  loss_dice_0: 0.2129  loss_ce_1: 0.0002046  loss_mask_1: 0.1557  loss_dice_1: 0.2127  loss_ce_2: 0.0001795  loss_mask_2: 0.1561  loss_dice_2: 0.2129  loss_ce_3: 0.0001756  loss_mask_3: 0.157  loss_dice_3: 0.2129  loss_ce_4: 0.0001711  loss_mask_4: 0.1559  loss_dice_4: 0.2128    time: 0.8927  last_time: 0.8784  data_time: 0.0576  last_data_time: 0.0568   lr: 6.7586e-06  max_mem: 11485M
[05/29 19:55:12] d2.utils.events INFO:  eta: 0:07:15  iter: 9519  total_loss: 2.213  loss_ce: 0.0001941  loss_mask: 0.1557  loss_dice: 0.2126  loss_ce_0: 0.0002166  loss_mask_0: 0.1559  loss_dice_0: 0.2127  loss_ce_1: 0.0002029  loss_mask_1: 0.1556  loss_dice_1: 0.2124  loss_ce_2: 0.0001789  loss_mask_2: 0.156  loss_dice_2: 0.2126  loss_ce_3: 0.0001751  loss_mask_3: 0.1568  loss_dice_3: 0.2127  loss_ce_4: 0.0001703  loss_mask_4: 0.1557  loss_dice_4: 0.2126    time: 0.8926  last_time: 0.8719  data_time: 0.0576  last_data_time: 0.0379   lr: 6.5152e-06  max_mem: 11485M
[05/29 19:55:30] d2.utils.events INFO:  eta: 0:06:56  iter: 9539  total_loss: 2.211  loss_ce: 0.0001934  loss_mask: 0.1556  loss_dice: 0.2125  loss_ce_0: 0.0002155  loss_mask_0: 0.1558  loss_dice_0: 0.2125  loss_ce_1: 0.0002019  loss_mask_1: 0.1554  loss_dice_1: 0.2124  loss_ce_2: 0.0001776  loss_mask_2: 0.1558  loss_dice_2: 0.2124  loss_ce_3: 0.0001746  loss_mask_3: 0.1567  loss_dice_3: 0.2125  loss_ce_4: 0.0001692  loss_mask_4: 0.1555  loss_dice_4: 0.2124    time: 0.8926  last_time: 0.8911  data_time: 0.0576  last_data_time: 0.0673   lr: 6.2709e-06  max_mem: 11485M
[05/29 19:55:48] d2.utils.events INFO:  eta: 0:06:39  iter: 9559  total_loss: 2.208  loss_ce: 0.000192  loss_mask: 0.1554  loss_dice: 0.2123  loss_ce_0: 0.0002146  loss_mask_0: 0.1556  loss_dice_0: 0.2123  loss_ce_1: 0.0002011  loss_mask_1: 0.1553  loss_dice_1: 0.2122  loss_ce_2: 0.0001764  loss_mask_2: 0.1556  loss_dice_2: 0.2122  loss_ce_3: 0.0001739  loss_mask_3: 0.1565  loss_dice_3: 0.2122  loss_ce_4: 0.0001683  loss_mask_4: 0.1553  loss_dice_4: 0.2122    time: 0.8926  last_time: 0.9023  data_time: 0.0576  last_data_time: 0.0699   lr: 6.0255e-06  max_mem: 11485M
[05/29 19:56:06] d2.utils.events INFO:  eta: 0:06:21  iter: 9579  total_loss: 2.206  loss_ce: 0.0001909  loss_mask: 0.1553  loss_dice: 0.212  loss_ce_0: 0.0002131  loss_mask_0: 0.1555  loss_dice_0: 0.2121  loss_ce_1: 0.000199  loss_mask_1: 0.1551  loss_dice_1: 0.2121  loss_ce_2: 0.0001758  loss_mask_2: 0.1554  loss_dice_2: 0.2121  loss_ce_3: 0.0001731  loss_mask_3: 0.1563  loss_dice_3: 0.2121  loss_ce_4: 0.0001673  loss_mask_4: 0.1551  loss_dice_4: 0.2121    time: 0.8926  last_time: 0.9009  data_time: 0.0576  last_data_time: 0.0788   lr: 5.779e-06  max_mem: 11485M
[05/29 19:56:24] d2.utils.events INFO:  eta: 0:06:03  iter: 9599  total_loss: 2.204  loss_ce: 0.0001904  loss_mask: 0.1551  loss_dice: 0.2119  loss_ce_0: 0.0002125  loss_mask_0: 0.1553  loss_dice_0: 0.2119  loss_ce_1: 0.0001975  loss_mask_1: 0.1549  loss_dice_1: 0.2119  loss_ce_2: 0.0001736  loss_mask_2: 0.1552  loss_dice_2: 0.2119  loss_ce_3: 0.0001719  loss_mask_3: 0.1561  loss_dice_3: 0.2119  loss_ce_4: 0.0001666  loss_mask_4: 0.155  loss_dice_4: 0.2118    time: 0.8926  last_time: 0.9009  data_time: 0.0576  last_data_time: 0.0736   lr: 5.5313e-06  max_mem: 11485M
[05/29 19:56:43] d2.utils.events INFO:  eta: 0:05:45  iter: 9619  total_loss: 2.201  loss_ce: 0.000189  loss_mask: 0.1549  loss_dice: 0.2117  loss_ce_0: 0.0002108  loss_mask_0: 0.1551  loss_dice_0: 0.2118  loss_ce_1: 0.0001962  loss_mask_1: 0.1547  loss_dice_1: 0.2117  loss_ce_2: 0.0001729  loss_mask_2: 0.1549  loss_dice_2: 0.2118  loss_ce_3: 0.000171  loss_mask_3: 0.156  loss_dice_3: 0.2117  loss_ce_4: 0.0001656  loss_mask_4: 0.1548  loss_dice_4: 0.2117    time: 0.8926  last_time: 0.8756  data_time: 0.0576  last_data_time: 0.0478   lr: 5.2824e-06  max_mem: 11485M
[05/29 19:57:00] d2.utils.events INFO:  eta: 0:05:26  iter: 9639  total_loss: 2.2  loss_ce: 0.0001876  loss_mask: 0.1549  loss_dice: 0.2116  loss_ce_0: 0.0002097  loss_mask_0: 0.155  loss_dice_0: 0.2116  loss_ce_1: 0.000195  loss_mask_1: 0.1547  loss_dice_1: 0.2116  loss_ce_2: 0.0001723  loss_mask_2: 0.1548  loss_dice_2: 0.2116  loss_ce_3: 0.0001703  loss_mask_3: 0.1559  loss_dice_3: 0.2116  loss_ce_4: 0.0001643  loss_mask_4: 0.1547  loss_dice_4: 0.2116    time: 0.8926  last_time: 0.8573  data_time: 0.0576  last_data_time: 0.0357   lr: 5.0322e-06  max_mem: 11485M
[05/29 19:57:18] d2.utils.events INFO:  eta: 0:05:08  iter: 9659  total_loss: 2.198  loss_ce: 0.0001868  loss_mask: 0.1546  loss_dice: 0.2115  loss_ce_0: 0.0002091  loss_mask_0: 0.1548  loss_dice_0: 0.2114  loss_ce_1: 0.0001942  loss_mask_1: 0.1545  loss_dice_1: 0.2114  loss_ce_2: 0.0001712  loss_mask_2: 0.1546  loss_dice_2: 0.2115  loss_ce_3: 0.0001697  loss_mask_3: 0.1557  loss_dice_3: 0.2115  loss_ce_4: 0.0001639  loss_mask_4: 0.1545  loss_dice_4: 0.2115    time: 0.8925  last_time: 0.8913  data_time: 0.0576  last_data_time: 0.0463   lr: 4.7806e-06  max_mem: 11485M
[05/29 19:57:35] d2.utils.events INFO:  eta: 0:04:49  iter: 9679  total_loss: 2.195  loss_ce: 0.000186  loss_mask: 0.1544  loss_dice: 0.2114  loss_ce_0: 0.0002083  loss_mask_0: 0.1547  loss_dice_0: 0.2112  loss_ce_1: 0.0001934  loss_mask_1: 0.1543  loss_dice_1: 0.2113  loss_ce_2: 0.0001706  loss_mask_2: 0.1544  loss_dice_2: 0.2113  loss_ce_3: 0.0001691  loss_mask_3: 0.1554  loss_dice_3: 0.2113  loss_ce_4: 0.0001632  loss_mask_4: 0.1543  loss_dice_4: 0.2113    time: 0.8925  last_time: 0.8314  data_time: 0.0575  last_data_time: 0.0347   lr: 4.5275e-06  max_mem: 11485M
[05/29 19:57:53] d2.utils.events INFO:  eta: 0:04:30  iter: 9699  total_loss: 2.193  loss_ce: 0.0001848  loss_mask: 0.1542  loss_dice: 0.2112  loss_ce_0: 0.0002072  loss_mask_0: 0.1544  loss_dice_0: 0.211  loss_ce_1: 0.0001921  loss_mask_1: 0.1541  loss_dice_1: 0.2112  loss_ce_2: 0.0001698  loss_mask_2: 0.1541  loss_dice_2: 0.2112  loss_ce_3: 0.0001681  loss_mask_3: 0.1553  loss_dice_3: 0.2111  loss_ce_4: 0.0001619  loss_mask_4: 0.1541  loss_dice_4: 0.2113    time: 0.8924  last_time: 0.8926  data_time: 0.0575  last_data_time: 0.0622   lr: 4.2728e-06  max_mem: 11485M
[05/29 19:58:11] d2.utils.events INFO:  eta: 0:04:12  iter: 9719  total_loss: 2.19  loss_ce: 0.0001839  loss_mask: 0.154  loss_dice: 0.211  loss_ce_0: 0.0002066  loss_mask_0: 0.1542  loss_dice_0: 0.2109  loss_ce_1: 0.0001913  loss_mask_1: 0.1539  loss_dice_1: 0.211  loss_ce_2: 0.0001695  loss_mask_2: 0.154  loss_dice_2: 0.2111  loss_ce_3: 0.0001674  loss_mask_3: 0.155  loss_dice_3: 0.2109  loss_ce_4: 0.0001607  loss_mask_4: 0.1539  loss_dice_4: 0.2111    time: 0.8925  last_time: 0.8720  data_time: 0.0575  last_data_time: 0.0463   lr: 4.0164e-06  max_mem: 11485M
[05/29 19:58:29] d2.utils.events INFO:  eta: 0:03:53  iter: 9739  total_loss: 2.188  loss_ce: 0.0001832  loss_mask: 0.1539  loss_dice: 0.2109  loss_ce_0: 0.0002059  loss_mask_0: 0.1541  loss_dice_0: 0.2108  loss_ce_1: 0.0001904  loss_mask_1: 0.1538  loss_dice_1: 0.2108  loss_ce_2: 0.0001682  loss_mask_2: 0.1538  loss_dice_2: 0.2109  loss_ce_3: 0.0001667  loss_mask_3: 0.1549  loss_dice_3: 0.2107  loss_ce_4: 0.0001591  loss_mask_4: 0.1537  loss_dice_4: 0.2109    time: 0.8924  last_time: 0.8819  data_time: 0.0575  last_data_time: 0.0489   lr: 3.7582e-06  max_mem: 11485M
[05/29 19:58:46] d2.utils.events INFO:  eta: 0:03:34  iter: 9759  total_loss: 2.187  loss_ce: 0.0001824  loss_mask: 0.1537  loss_dice: 0.2107  loss_ce_0: 0.0002052  loss_mask_0: 0.154  loss_dice_0: 0.2106  loss_ce_1: 0.0001895  loss_mask_1: 0.1536  loss_dice_1: 0.2106  loss_ce_2: 0.0001676  loss_mask_2: 0.1537  loss_dice_2: 0.2107  loss_ce_3: 0.0001656  loss_mask_3: 0.1547  loss_dice_3: 0.2106  loss_ce_4: 0.0001585  loss_mask_4: 0.1536  loss_dice_4: 0.2107    time: 0.8924  last_time: 0.8430  data_time: 0.0575  last_data_time: 0.0294   lr: 3.498e-06  max_mem: 11485M
[05/29 19:59:04] d2.utils.events INFO:  eta: 0:03:16  iter: 9779  total_loss: 2.185  loss_ce: 0.0001816  loss_mask: 0.1535  loss_dice: 0.2106  loss_ce_0: 0.0002041  loss_mask_0: 0.1538  loss_dice_0: 0.2104  loss_ce_1: 0.0001889  loss_mask_1: 0.1534  loss_dice_1: 0.2105  loss_ce_2: 0.0001669  loss_mask_2: 0.1536  loss_dice_2: 0.2106  loss_ce_3: 0.000165  loss_mask_3: 0.1545  loss_dice_3: 0.2105  loss_ce_4: 0.0001578  loss_mask_4: 0.1534  loss_dice_4: 0.2105    time: 0.8923  last_time: 0.8634  data_time: 0.0574  last_data_time: 0.0378   lr: 3.2356e-06  max_mem: 11485M
[05/29 19:59:21] d2.utils.events INFO:  eta: 0:02:57  iter: 9799  total_loss: 2.183  loss_ce: 0.0001801  loss_mask: 0.1533  loss_dice: 0.2105  loss_ce_0: 0.000203  loss_mask_0: 0.1536  loss_dice_0: 0.2102  loss_ce_1: 0.0001879  loss_mask_1: 0.1531  loss_dice_1: 0.2103  loss_ce_2: 0.0001663  loss_mask_2: 0.1534  loss_dice_2: 0.2104  loss_ce_3: 0.0001645  loss_mask_3: 0.1544  loss_dice_3: 0.2102  loss_ce_4: 0.0001567  loss_mask_4: 0.1532  loss_dice_4: 0.2104    time: 0.8922  last_time: 0.8481  data_time: 0.0574  last_data_time: 0.0288   lr: 2.9708e-06  max_mem: 11485M
[05/29 19:59:39] d2.utils.events INFO:  eta: 0:02:39  iter: 9819  total_loss: 2.182  loss_ce: 0.000179  loss_mask: 0.1532  loss_dice: 0.2103  loss_ce_0: 0.000201  loss_mask_0: 0.1535  loss_dice_0: 0.2101  loss_ce_1: 0.0001865  loss_mask_1: 0.1531  loss_dice_1: 0.2102  loss_ce_2: 0.0001655  loss_mask_2: 0.1533  loss_dice_2: 0.2104  loss_ce_3: 0.0001636  loss_mask_3: 0.1543  loss_dice_3: 0.2101  loss_ce_4: 0.0001558  loss_mask_4: 0.153  loss_dice_4: 0.2102    time: 0.8922  last_time: 0.8738  data_time: 0.0574  last_data_time: 0.0404   lr: 2.7034e-06  max_mem: 11485M
[05/29 19:59:56] d2.utils.events INFO:  eta: 0:02:21  iter: 9839  total_loss: 2.18  loss_ce: 0.0001784  loss_mask: 0.1531  loss_dice: 0.2099  loss_ce_0: 0.0001997  loss_mask_0: 0.1534  loss_dice_0: 0.2099  loss_ce_1: 0.0001843  loss_mask_1: 0.1528  loss_dice_1: 0.2099  loss_ce_2: 0.0001646  loss_mask_2: 0.1532  loss_dice_2: 0.2101  loss_ce_3: 0.0001627  loss_mask_3: 0.1541  loss_dice_3: 0.21  loss_ce_4: 0.0001546  loss_mask_4: 0.1529  loss_dice_4: 0.2101    time: 0.8921  last_time: 0.8661  data_time: 0.0573  last_data_time: 0.0475   lr: 2.433e-06  max_mem: 11485M
[05/29 20:00:14] d2.utils.events INFO:  eta: 0:02:03  iter: 9859  total_loss: 2.179  loss_ce: 0.0001776  loss_mask: 0.153  loss_dice: 0.2098  loss_ce_0: 0.0001989  loss_mask_0: 0.1532  loss_dice_0: 0.2097  loss_ce_1: 0.0001829  loss_mask_1: 0.1528  loss_dice_1: 0.2098  loss_ce_2: 0.0001641  loss_mask_2: 0.153  loss_dice_2: 0.2099  loss_ce_3: 0.0001615  loss_mask_3: 0.1539  loss_dice_3: 0.2099  loss_ce_4: 0.0001542  loss_mask_4: 0.1527  loss_dice_4: 0.21    time: 0.8920  last_time: 0.8642  data_time: 0.0573  last_data_time: 0.0411   lr: 2.1592e-06  max_mem: 11485M
[05/29 20:00:31] d2.utils.events INFO:  eta: 0:01:45  iter: 9879  total_loss: 2.175  loss_ce: 0.0001765  loss_mask: 0.1529  loss_dice: 0.2096  loss_ce_0: 0.0001975  loss_mask_0: 0.153  loss_dice_0: 0.2095  loss_ce_1: 0.0001819  loss_mask_1: 0.1526  loss_dice_1: 0.2096  loss_ce_2: 0.0001631  loss_mask_2: 0.1528  loss_dice_2: 0.2097  loss_ce_3: 0.0001599  loss_mask_3: 0.1538  loss_dice_3: 0.2097  loss_ce_4: 0.0001533  loss_mask_4: 0.1526  loss_dice_4: 0.2098    time: 0.8920  last_time: 0.8700  data_time: 0.0573  last_data_time: 0.0461   lr: 1.8815e-06  max_mem: 11485M
[05/29 20:00:49] d2.utils.events INFO:  eta: 0:01:27  iter: 9899  total_loss: 2.173  loss_ce: 0.0001752  loss_mask: 0.1528  loss_dice: 0.2094  loss_ce_0: 0.0001965  loss_mask_0: 0.1529  loss_dice_0: 0.2093  loss_ce_1: 0.0001805  loss_mask_1: 0.1524  loss_dice_1: 0.2094  loss_ce_2: 0.0001626  loss_mask_2: 0.1526  loss_dice_2: 0.2095  loss_ce_3: 0.000159  loss_mask_3: 0.1537  loss_dice_3: 0.2095  loss_ce_4: 0.0001527  loss_mask_4: 0.1525  loss_dice_4: 0.2095    time: 0.8919  last_time: 0.8713  data_time: 0.0572  last_data_time: 0.0403   lr: 1.5992e-06  max_mem: 11485M
[05/29 20:01:06] d2.utils.events INFO:  eta: 0:01:10  iter: 9919  total_loss: 2.171  loss_ce: 0.0001746  loss_mask: 0.1526  loss_dice: 0.2092  loss_ce_0: 0.0001954  loss_mask_0: 0.1528  loss_dice_0: 0.2091  loss_ce_1: 0.0001786  loss_mask_1: 0.1523  loss_dice_1: 0.2091  loss_ce_2: 0.0001618  loss_mask_2: 0.1524  loss_dice_2: 0.2094  loss_ce_3: 0.0001584  loss_mask_3: 0.1536  loss_dice_3: 0.2093  loss_ce_4: 0.0001518  loss_mask_4: 0.1523  loss_dice_4: 0.2093    time: 0.8918  last_time: 0.8630  data_time: 0.0572  last_data_time: 0.0387   lr: 1.3111e-06  max_mem: 11485M
[05/29 20:01:23] d2.utils.events INFO:  eta: 0:00:52  iter: 9939  total_loss: 2.169  loss_ce: 0.0001738  loss_mask: 0.1524  loss_dice: 0.2089  loss_ce_0: 0.0001945  loss_mask_0: 0.1527  loss_dice_0: 0.2089  loss_ce_1: 0.000178  loss_mask_1: 0.1522  loss_dice_1: 0.209  loss_ce_2: 0.0001612  loss_mask_2: 0.1523  loss_dice_2: 0.2092  loss_ce_3: 0.0001577  loss_mask_3: 0.1534  loss_dice_3: 0.2092  loss_ce_4: 0.0001505  loss_mask_4: 0.1522  loss_dice_4: 0.2091    time: 0.8918  last_time: 0.8512  data_time: 0.0571  last_data_time: 0.0306   lr: 1.0158e-06  max_mem: 11485M
[05/29 20:01:41] d2.utils.events INFO:  eta: 0:00:34  iter: 9959  total_loss: 2.166  loss_ce: 0.0001726  loss_mask: 0.1523  loss_dice: 0.2088  loss_ce_0: 0.0001938  loss_mask_0: 0.1525  loss_dice_0: 0.2088  loss_ce_1: 0.0001767  loss_mask_1: 0.152  loss_dice_1: 0.2088  loss_ce_2: 0.0001604  loss_mask_2: 0.1522  loss_dice_2: 0.209  loss_ce_3: 0.0001568  loss_mask_3: 0.1532  loss_dice_3: 0.209  loss_ce_4: 0.0001494  loss_mask_4: 0.1521  loss_dice_4: 0.209    time: 0.8917  last_time: 0.8326  data_time: 0.0571  last_data_time: 0.0375   lr: 7.104e-07  max_mem: 11485M
[05/29 20:01:58] d2.utils.events INFO:  eta: 0:00:17  iter: 9979  total_loss: 2.164  loss_ce: 0.000172  loss_mask: 0.1522  loss_dice: 0.2086  loss_ce_0: 0.0001933  loss_mask_0: 0.1524  loss_dice_0: 0.2085  loss_ce_1: 0.0001755  loss_mask_1: 0.1519  loss_dice_1: 0.2087  loss_ce_2: 0.0001597  loss_mask_2: 0.1521  loss_dice_2: 0.2088  loss_ce_3: 0.000156  loss_mask_3: 0.1531  loss_dice_3: 0.2088  loss_ce_4: 0.0001486  loss_mask_4: 0.152  loss_dice_4: 0.2089    time: 0.8917  last_time: 0.8560  data_time: 0.0571  last_data_time: 0.0318   lr: 3.8904e-07  max_mem: 11485M
[05/29 20:02:16] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/climatenet_v2/model_0009999.pth
[05/29 20:02:16] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/climatenet_v2/model_final.pth
[05/29 20:02:17] d2.utils.events INFO:  eta: 0:00:00  iter: 9999  total_loss: 2.163  loss_ce: 0.000171  loss_mask: 0.1521  loss_dice: 0.2085  loss_ce_0: 0.0001927  loss_mask_0: 0.1522  loss_dice_0: 0.2084  loss_ce_1: 0.0001751  loss_mask_1: 0.1518  loss_dice_1: 0.2085  loss_ce_2: 0.0001593  loss_mask_2: 0.152  loss_dice_2: 0.2086  loss_ce_3: 0.0001552  loss_mask_3: 0.153  loss_dice_3: 0.2087  loss_ce_4: 0.0001477  loss_mask_4: 0.1519  loss_dice_4: 0.2087    time: 0.8916  last_time: 0.8402  data_time: 0.0570  last_data_time: 0.0391   lr: 2.5119e-08  max_mem: 11485M
[05/29 20:02:17] d2.engine.hooks INFO: Overall training speed: 9998 iterations in 2:28:34 (0.8916 s / it)
[05/29 20:02:17] d2.engine.hooks INFO: Total training time: 2:30:13 (0:01:39 on hooks)
[05/29 20:02:23] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/29 20:02:23] d2.data.common INFO: Serializing 61 elements to byte tensors and concatenating them all ...
[05/29 20:02:32] d2.data.common INFO: Serialized dataset takes 1235.27 MiB
[05/29 20:02:37] d2.evaluation.evaluator INFO: Start inference on 61 batches
[05/29 20:02:39] d2.evaluation.evaluator INFO: Inference done 11/61. Dataloading: 0.0035 s/iter. Inference: 0.0390 s/iter. Eval: 0.0015 s/iter. Total: 0.0440 s/iter. ETA=0:00:02
[05/29 20:02:41] d2.evaluation.evaluator INFO: Total inference time: 0:00:02.676540 (0.047795 s / iter per device, on 1 devices)
[05/29 20:02:41] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.038205 s / iter per device, on 1 devices)
[05/29 20:02:41] d2.engine.defaults INFO: Evaluation results for climatenet_test in csv format:
[05/29 20:02:41] d2.evaluation.testing INFO: copypaste: Mean IoU=0.34885755873424135
[05/30 14:53:24] detectron2 INFO: Rank of current process: 0. World size: 1
[05/30 14:53:25] detectron2 INFO: Environment info:
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.17 | packaged by conda-forge | (main, Apr 10 2025, 22:19:12) [GCC 13.3.0]
numpy                            1.26.4
detectron2                       0.6 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2
detectron2._C                    not built correctly: /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/_C.cpython-310-x86_64-linux-gnu.so: undefined symbol: _ZNK3c105Error4whatEv
Compiler ($CXX)                  c++ (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
CUDA compiler                    Not found
detectron2 arch flags            /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/_C.cpython-310-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.1.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA RTX A6000 (arch=8.6)
Driver version                   535.183.01
CUDA_HOME                        /usr/local/cuda - invalid!
Pillow                           11.1.0
torchvision                      0.16.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torchvision
torchvision arch flags           /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.11.0
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.9.2
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=8.9.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[05/30 14:53:25] detectron2 INFO: Command line arguments: Namespace(config_file='configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50158', opts=[])
[05/30 14:53:25] detectron2 INFO: Contents of args.config_file=configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml:
[38;5;245m# MaskFormer config for Climatenet-based AR semantic segmentation[39m

[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormer[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m1.5530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m0.2541[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m100814.0726[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m19.2185[39m[38;5;15m][39m[38;5;15m   [39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m8.2976[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m6.2316[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m1461.2256[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m15.8173[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_resnet_backbone[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;245m# âœ… ì¶”ê°€[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormerHead[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m[38;5;15m  [39m[38;5;245m# 0=background, 1=AR[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGN[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mnetcdf_semantic[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(768,)[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_train",)[39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_test",)[39m

[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m

[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mWarmupPolyLR[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mADAMW[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mfull_model[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m

[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/climatenet_v2[39m[38;5;186m"[39m

[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[05/30 14:53:25] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mREPEAT_SQRT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_test[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_train[39m
[38;5;204mFLOAT32_PRECISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCOLOR_AUG_SSD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSINGLE_CATEGORY_MAX_AREA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnetcdf_semantic[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRGB[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_resnet_backbone[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mENFORCE_INPUT_PROJ[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mOBJECT_MASK_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mPANOPTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m      [39m[38;5;204mSEM_SEG_POSTPROCESSING_BEFORE_INFERENCE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormer[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.553[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.2541[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100814.0726[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m19.2185[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m8.2976[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6.2316[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1461.2256[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.8173[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_MULTI_GRID[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdeeplab[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m18[39m
[38;5;15m    [39m[38;5;204mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mLOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhard_pixel_mining[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormerHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mPIXEL_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBasePixelDecoder[39m
[38;5;15m    [39m[38;5;204mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m    [39m[38;5;204mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_ENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSWIN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mAPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mATTN_DROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mDEPTHS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mDROP_PATH_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;204mDROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m96[39m
[38;5;15m    [39m[38;5;204mMLP_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4.0[39m
[38;5;15m    [39m[38;5;204mNUM_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m24[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mPATCH_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mPATCH_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRETRAIN_IMG_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m224[39m
[38;5;15m    [39m[38;5;204mQKV_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mQK_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mWINDOW_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/climatenet_v2[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfull_model[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupPolyLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mADAMW[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_CONSTANT_ENDING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30000[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[05/30 14:53:25] detectron2 INFO: Full config saved to ./output/climatenet_v2/config.yaml
[05/30 14:53:25] d2.utils.env INFO: Using a generated random seed 29627184
[05/30 14:53:26] d2.engine.defaults INFO: Model:
MaskFormer(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        4, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
  )
  (sem_seg_head): MaskFormerHead(
    (pixel_decoder): BasePixelDecoder(
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_2): Conv2d(
        512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_3): Conv2d(
        1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_4): Conv2d(
        2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (mask_features): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (predictor): TransformerPredictor(
      (pe_layer): PositionEmbeddingSine()
      (transformer): Transformer(
        (encoder): TransformerEncoder(
          (layers): ModuleList()
        )
        (decoder): TransformerDecoder(
          (layers): ModuleList(
            (0-5): 6 x TransformerDecoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (linear1): Linear(in_features=256, out_features=2048, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
              (linear2): Linear(in_features=2048, out_features=256, bias=True)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.1, inplace=False)
              (dropout2): Dropout(p=0.1, inplace=False)
              (dropout3): Dropout(p=0.1, inplace=False)
            )
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (query_embed): Embedding(100, 256)
      (input_proj): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
      (class_embed): Linear(in_features=256, out_features=3, bias=True)
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
    )
  )
  (criterion): SetCriterion(
    (matcher): Matcher HungarianMatcher
        cost_class: 1
        cost_mask: 20.0
        cost_dice: 1.0
  )
)
[05/30 14:53:26] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[05/30 14:53:26] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/aix23606/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[05/30 14:53:27] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[05/30 14:53:27] d2.checkpoint.c2_model_loading WARNING: Shape of stem.conv1.weight in checkpoint is torch.Size([64, 3, 7, 7]), while shape of backbone.stem.conv1.weight in model is torch.Size([64, 4, 7, 7]).
[05/30 14:53:27] d2.checkpoint.c2_model_loading WARNING: stem.conv1.weight will not be loaded. Please double check and see if this is desired.
[05/30 14:53:27] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone - Total num: 53
[05/30 14:53:27] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.stem.conv1.weight[0m
[34mcriterion.empty_weight[0m
[34msem_seg_head.pixel_decoder.adapter_1.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_1.weight[0m
[34msem_seg_head.pixel_decoder.adapter_2.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_2.weight[0m
[34msem_seg_head.pixel_decoder.adapter_3.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_3.weight[0m
[34msem_seg_head.pixel_decoder.layer_1.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_1.weight[0m
[34msem_seg_head.pixel_decoder.layer_2.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_2.weight[0m
[34msem_seg_head.pixel_decoder.layer_3.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_3.weight[0m
[34msem_seg_head.pixel_decoder.layer_4.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_4.weight[0m
[34msem_seg_head.pixel_decoder.mask_features.{bias, weight}[0m
[34msem_seg_head.predictor.class_embed.{bias, weight}[0m
[34msem_seg_head.predictor.input_proj.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.0.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.1.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.2.{bias, weight}[0m
[34msem_seg_head.predictor.query_embed.weight[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.norm.{bias, weight}[0m
[05/30 14:53:27] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.{bias, weight}[0m
[05/30 14:53:31] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/30 14:53:31] d2.data.common INFO: Serializing 61 elements to byte tensors and concatenating them all ...
[05/30 14:53:32] d2.data.common INFO: Serialized dataset takes 1235.27 MiB
[05/30 14:53:35] d2.evaluation.evaluator INFO: Start inference on 61 batches
[05/30 14:53:37] d2.evaluation.evaluator INFO: Inference done 11/61. Dataloading: 0.0046 s/iter. Inference: 0.0391 s/iter. Eval: 0.0027 s/iter. Total: 0.0463 s/iter. ETA=0:00:02
[05/30 14:53:39] d2.evaluation.evaluator INFO: Total inference time: 0:00:02.367226 (0.042272 s / iter per device, on 1 devices)
[05/30 14:53:39] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:01 (0.032849 s / iter per device, on 1 devices)
[05/30 14:53:39] d2.engine.defaults INFO: Evaluation results for climatenet_test in csv format:
[05/30 14:53:39] d2.evaluation.testing INFO: copypaste: Mean IoU=0.05592109944210438
[05/30 14:53:48] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/30 14:53:48] d2.data.common INFO: Serializing 61 elements to byte tensors and concatenating them all ...
[05/30 14:53:49] d2.data.common INFO: Serialized dataset takes 1235.27 MiB
[05/30 15:07:16] detectron2 INFO: Rank of current process: 0. World size: 1
[05/30 15:07:17] detectron2 INFO: Environment info:
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.17 | packaged by conda-forge | (main, Apr 10 2025, 22:19:12) [GCC 13.3.0]
numpy                            1.26.4
detectron2                       0.6 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2
detectron2._C                    not built correctly: /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/_C.cpython-310-x86_64-linux-gnu.so: undefined symbol: _ZNK3c105Error4whatEv
Compiler ($CXX)                  c++ (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
CUDA compiler                    Not found
detectron2 arch flags            /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/_C.cpython-310-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.1.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA RTX A6000 (arch=8.6)
Driver version                   535.183.01
CUDA_HOME                        /usr/local/cuda - invalid!
Pillow                           11.1.0
torchvision                      0.16.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torchvision
torchvision arch flags           /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.11.0
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.9.2
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=8.9.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[05/30 15:07:17] detectron2 INFO: Command line arguments: Namespace(config_file='configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50158', opts=[])
[05/30 15:07:17] detectron2 INFO: Contents of args.config_file=configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml:
[38;5;245m# MaskFormer config for Climatenet-based AR semantic segmentation[39m

[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormer[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m1.5530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m0.2541[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m100814.0726[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m19.2185[39m[38;5;15m][39m[38;5;15m   [39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m8.2976[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m6.2316[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m1461.2256[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m15.8173[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_resnet_backbone[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;245m# âœ… ì¶”ê°€[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormerHead[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m[38;5;15m  [39m[38;5;245m# 0=background, 1=AR[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGN[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mnetcdf_semantic[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(768,)[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_train",)[39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_test",)[39m

[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m

[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mWarmupPolyLR[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mADAMW[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mfull_model[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m

[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/climatenet_v2[39m[38;5;186m"[39m

[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[05/30 15:07:18] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mREPEAT_SQRT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_test[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_train[39m
[38;5;204mFLOAT32_PRECISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCOLOR_AUG_SSD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSINGLE_CATEGORY_MAX_AREA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnetcdf_semantic[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRGB[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_resnet_backbone[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mENFORCE_INPUT_PROJ[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mOBJECT_MASK_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mPANOPTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m      [39m[38;5;204mSEM_SEG_POSTPROCESSING_BEFORE_INFERENCE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormer[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.553[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.2541[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100814.0726[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m19.2185[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m8.2976[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6.2316[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1461.2256[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.8173[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_MULTI_GRID[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdeeplab[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m18[39m
[38;5;15m    [39m[38;5;204mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mLOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhard_pixel_mining[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormerHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mPIXEL_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBasePixelDecoder[39m
[38;5;15m    [39m[38;5;204mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m    [39m[38;5;204mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_ENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSWIN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mAPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mATTN_DROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mDEPTHS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mDROP_PATH_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;204mDROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m96[39m
[38;5;15m    [39m[38;5;204mMLP_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4.0[39m
[38;5;15m    [39m[38;5;204mNUM_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m24[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mPATCH_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mPATCH_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRETRAIN_IMG_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m224[39m
[38;5;15m    [39m[38;5;204mQKV_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mQK_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mWINDOW_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/climatenet_v2[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfull_model[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupPolyLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mADAMW[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_CONSTANT_ENDING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30000[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[05/30 15:07:18] detectron2 INFO: Full config saved to ./output/climatenet_v2/config.yaml
[05/30 15:07:18] d2.utils.env INFO: Using a generated random seed 21946789
[05/30 15:07:19] d2.engine.defaults INFO: Model:
MaskFormer(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        4, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
  )
  (sem_seg_head): MaskFormerHead(
    (pixel_decoder): BasePixelDecoder(
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_2): Conv2d(
        512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_3): Conv2d(
        1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_4): Conv2d(
        2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (mask_features): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (predictor): TransformerPredictor(
      (pe_layer): PositionEmbeddingSine()
      (transformer): Transformer(
        (encoder): TransformerEncoder(
          (layers): ModuleList()
        )
        (decoder): TransformerDecoder(
          (layers): ModuleList(
            (0-5): 6 x TransformerDecoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (linear1): Linear(in_features=256, out_features=2048, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
              (linear2): Linear(in_features=2048, out_features=256, bias=True)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.1, inplace=False)
              (dropout2): Dropout(p=0.1, inplace=False)
              (dropout3): Dropout(p=0.1, inplace=False)
            )
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (query_embed): Embedding(100, 256)
      (input_proj): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
      (class_embed): Linear(in_features=256, out_features=3, bias=True)
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
    )
  )
  (criterion): SetCriterion(
    (matcher): Matcher HungarianMatcher
        cost_class: 1
        cost_mask: 20.0
        cost_dice: 1.0
  )
)
[05/30 15:07:19] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[05/30 15:07:19] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/aix23606/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[05/30 15:07:19] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[05/30 15:07:19] d2.checkpoint.c2_model_loading WARNING: Shape of stem.conv1.weight in checkpoint is torch.Size([64, 3, 7, 7]), while shape of backbone.stem.conv1.weight in model is torch.Size([64, 4, 7, 7]).
[05/30 15:07:19] d2.checkpoint.c2_model_loading WARNING: stem.conv1.weight will not be loaded. Please double check and see if this is desired.
[05/30 15:07:19] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone - Total num: 53
[05/30 15:07:19] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.stem.conv1.weight[0m
[34mcriterion.empty_weight[0m
[34msem_seg_head.pixel_decoder.adapter_1.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_1.weight[0m
[34msem_seg_head.pixel_decoder.adapter_2.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_2.weight[0m
[34msem_seg_head.pixel_decoder.adapter_3.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_3.weight[0m
[34msem_seg_head.pixel_decoder.layer_1.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_1.weight[0m
[34msem_seg_head.pixel_decoder.layer_2.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_2.weight[0m
[34msem_seg_head.pixel_decoder.layer_3.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_3.weight[0m
[34msem_seg_head.pixel_decoder.layer_4.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_4.weight[0m
[34msem_seg_head.pixel_decoder.mask_features.{bias, weight}[0m
[34msem_seg_head.predictor.class_embed.{bias, weight}[0m
[34msem_seg_head.predictor.input_proj.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.0.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.1.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.2.{bias, weight}[0m
[34msem_seg_head.predictor.query_embed.weight[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.norm.{bias, weight}[0m
[05/30 15:07:19] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.{bias, weight}[0m
[05/30 15:07:23] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/30 15:07:23] d2.data.common INFO: Serializing 61 elements to byte tensors and concatenating them all ...
[05/30 15:07:24] d2.data.common INFO: Serialized dataset takes 1235.27 MiB
[05/30 15:07:28] d2.evaluation.evaluator INFO: Start inference on 61 batches
[05/30 15:07:30] d2.evaluation.evaluator INFO: Inference done 11/61. Dataloading: 0.0033 s/iter. Inference: 0.0345 s/iter. Eval: 0.0023 s/iter. Total: 0.0401 s/iter. ETA=0:00:02
[05/30 15:07:32] d2.evaluation.evaluator INFO: Total inference time: 0:00:02.323700 (0.041495 s / iter per device, on 1 devices)
[05/30 15:07:32] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:01 (0.033288 s / iter per device, on 1 devices)
[05/30 15:07:32] d2.engine.defaults INFO: Evaluation results for climatenet_test in csv format:
[05/30 15:07:32] d2.evaluation.testing INFO: copypaste: Mean IoU=0.05592109944210438
[05/30 15:07:40] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/30 15:07:40] d2.data.common INFO: Serializing 61 elements to byte tensors and concatenating them all ...
[05/30 15:07:42] d2.data.common INFO: Serialized dataset takes 1235.27 MiB
[05/30 15:23:25] detectron2 INFO: Rank of current process: 0. World size: 1
[05/30 15:23:27] detectron2 INFO: Environment info:
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.17 | packaged by conda-forge | (main, Apr 10 2025, 22:19:12) [GCC 13.3.0]
numpy                            1.26.4
detectron2                       0.6 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2
detectron2._C                    not built correctly: /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/_C.cpython-310-x86_64-linux-gnu.so: undefined symbol: _ZNK3c105Error4whatEv
Compiler ($CXX)                  c++ (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
CUDA compiler                    Not found
detectron2 arch flags            /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/_C.cpython-310-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.1.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA RTX A6000 (arch=8.6)
Driver version                   535.183.01
CUDA_HOME                        /usr/local/cuda - invalid!
Pillow                           11.1.0
torchvision                      0.16.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torchvision
torchvision arch flags           /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.11.0
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.9.2
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=8.9.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[05/30 15:23:27] detectron2 INFO: Command line arguments: Namespace(config_file='configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50158', opts=[])
[05/30 15:23:27] detectron2 INFO: Contents of args.config_file=configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml:
[38;5;245m# MaskFormer config for Climatenet-based AR semantic segmentation[39m

[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormer[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m1.5530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m0.2541[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m100814.0726[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m19.2185[39m[38;5;15m][39m[38;5;15m   [39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m8.2976[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m6.2316[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m1461.2256[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m15.8173[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_resnet_backbone[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;245m# âœ… ì¶”ê°€[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormerHead[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m[38;5;15m  [39m[38;5;245m# 0=background, 1=AR[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGN[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mnetcdf_semantic[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(768,)[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_train",)[39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_test",)[39m

[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m

[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mWarmupPolyLR[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mADAMW[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mfull_model[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m

[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/climatenet_v2[39m[38;5;186m"[39m

[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[05/30 15:23:27] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mREPEAT_SQRT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_test[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_train[39m
[38;5;204mFLOAT32_PRECISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCOLOR_AUG_SSD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSINGLE_CATEGORY_MAX_AREA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnetcdf_semantic[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRGB[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_resnet_backbone[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mENFORCE_INPUT_PROJ[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mOBJECT_MASK_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mPANOPTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m      [39m[38;5;204mSEM_SEG_POSTPROCESSING_BEFORE_INFERENCE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormer[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.553[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.2541[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100814.0726[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m19.2185[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m8.2976[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6.2316[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1461.2256[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.8173[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_MULTI_GRID[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdeeplab[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m18[39m
[38;5;15m    [39m[38;5;204mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mLOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhard_pixel_mining[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormerHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mPIXEL_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBasePixelDecoder[39m
[38;5;15m    [39m[38;5;204mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m    [39m[38;5;204mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_ENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSWIN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mAPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mATTN_DROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mDEPTHS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mDROP_PATH_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;204mDROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m96[39m
[38;5;15m    [39m[38;5;204mMLP_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4.0[39m
[38;5;15m    [39m[38;5;204mNUM_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m24[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mPATCH_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mPATCH_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRETRAIN_IMG_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m224[39m
[38;5;15m    [39m[38;5;204mQKV_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mQK_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mWINDOW_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/climatenet_v2[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfull_model[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupPolyLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mADAMW[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_CONSTANT_ENDING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30000[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[05/30 15:23:27] detectron2 INFO: Full config saved to ./output/climatenet_v2/config.yaml
[05/30 15:23:27] d2.utils.env INFO: Using a generated random seed 31365975
[05/30 15:23:29] d2.engine.defaults INFO: Model:
MaskFormer(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        4, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
  )
  (sem_seg_head): MaskFormerHead(
    (pixel_decoder): BasePixelDecoder(
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_2): Conv2d(
        512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_3): Conv2d(
        1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_4): Conv2d(
        2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (mask_features): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (predictor): TransformerPredictor(
      (pe_layer): PositionEmbeddingSine()
      (transformer): Transformer(
        (encoder): TransformerEncoder(
          (layers): ModuleList()
        )
        (decoder): TransformerDecoder(
          (layers): ModuleList(
            (0-5): 6 x TransformerDecoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (linear1): Linear(in_features=256, out_features=2048, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
              (linear2): Linear(in_features=2048, out_features=256, bias=True)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.1, inplace=False)
              (dropout2): Dropout(p=0.1, inplace=False)
              (dropout3): Dropout(p=0.1, inplace=False)
            )
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (query_embed): Embedding(100, 256)
      (input_proj): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
      (class_embed): Linear(in_features=256, out_features=3, bias=True)
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
    )
  )
  (criterion): SetCriterion(
    (matcher): Matcher HungarianMatcher
        cost_class: 1
        cost_mask: 20.0
        cost_dice: 1.0
  )
)
[05/30 15:23:29] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[05/30 15:23:29] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/aix23606/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[05/30 15:23:29] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[05/30 15:23:29] d2.checkpoint.c2_model_loading WARNING: Shape of stem.conv1.weight in checkpoint is torch.Size([64, 3, 7, 7]), while shape of backbone.stem.conv1.weight in model is torch.Size([64, 4, 7, 7]).
[05/30 15:23:29] d2.checkpoint.c2_model_loading WARNING: stem.conv1.weight will not be loaded. Please double check and see if this is desired.
[05/30 15:23:29] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone - Total num: 53
[05/30 15:23:29] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.stem.conv1.weight[0m
[34mcriterion.empty_weight[0m
[34msem_seg_head.pixel_decoder.adapter_1.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_1.weight[0m
[34msem_seg_head.pixel_decoder.adapter_2.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_2.weight[0m
[34msem_seg_head.pixel_decoder.adapter_3.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_3.weight[0m
[34msem_seg_head.pixel_decoder.layer_1.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_1.weight[0m
[34msem_seg_head.pixel_decoder.layer_2.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_2.weight[0m
[34msem_seg_head.pixel_decoder.layer_3.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_3.weight[0m
[34msem_seg_head.pixel_decoder.layer_4.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_4.weight[0m
[34msem_seg_head.pixel_decoder.mask_features.{bias, weight}[0m
[34msem_seg_head.predictor.class_embed.{bias, weight}[0m
[34msem_seg_head.predictor.input_proj.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.0.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.1.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.2.{bias, weight}[0m
[34msem_seg_head.predictor.query_embed.weight[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.norm.{bias, weight}[0m
[05/30 15:23:29] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.{bias, weight}[0m
[05/30 15:23:36] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/30 15:23:36] d2.data.common INFO: Serializing 61 elements to byte tensors and concatenating them all ...
[05/30 15:23:37] d2.data.common INFO: Serialized dataset takes 1235.27 MiB
[05/30 15:23:44] d2.evaluation.evaluator INFO: Start inference on 61 batches
[05/30 15:23:46] d2.evaluation.evaluator INFO: Inference done 11/61. Dataloading: 0.0040 s/iter. Inference: 0.0440 s/iter. Eval: 0.0026 s/iter. Total: 0.0507 s/iter. ETA=0:00:02
[05/30 15:23:49] d2.evaluation.evaluator INFO: Total inference time: 0:00:02.909531 (0.051956 s / iter per device, on 1 devices)
[05/30 15:23:49] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.042180 s / iter per device, on 1 devices)
[05/30 15:23:49] d2.engine.defaults INFO: Evaluation results for climatenet_test in csv format:
[05/30 15:23:49] d2.evaluation.testing INFO: copypaste: Mean IoU=0.05592109944210438
[05/30 15:24:04] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/30 15:24:04] d2.data.common INFO: Serializing 61 elements to byte tensors and concatenating them all ...
[05/30 15:24:05] d2.data.common INFO: Serialized dataset takes 1235.27 MiB
[05/30 16:06:16] detectron2 INFO: Rank of current process: 0. World size: 1
[05/30 16:06:18] detectron2 INFO: Environment info:
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.17 | packaged by conda-forge | (main, Apr 10 2025, 22:19:12) [GCC 13.3.0]
numpy                            1.26.4
detectron2                       0.6 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2
detectron2._C                    not built correctly: /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/_C.cpython-310-x86_64-linux-gnu.so: undefined symbol: _ZNK3c105Error4whatEv
Compiler ($CXX)                  c++ (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
CUDA compiler                    Not found
detectron2 arch flags            /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/_C.cpython-310-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.1.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA RTX A6000 (arch=8.6)
Driver version                   535.183.01
CUDA_HOME                        /usr/local/cuda - invalid!
Pillow                           11.1.0
torchvision                      0.16.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torchvision
torchvision arch flags           /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.11.0
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.9.2
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=8.9.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[05/30 16:06:18] detectron2 INFO: Command line arguments: Namespace(config_file='configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50158', opts=[])
[05/30 16:06:18] detectron2 INFO: Contents of args.config_file=configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml:
[38;5;245m# MaskFormer config for Climatenet-based AR semantic segmentation[39m

[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormer[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m1.5530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m0.2541[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m100814.0726[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m19.2185[39m[38;5;15m][39m[38;5;15m   [39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m8.2976[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m6.2316[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m1461.2256[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m15.8173[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_resnet_backbone[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;245m# âœ… ì¶”ê°€[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormerHead[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m[38;5;15m  [39m[38;5;245m# 0=background, 1=AR[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGN[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mnetcdf_semantic[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(768,)[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_train",)[39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_test",)[39m

[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m

[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mWarmupPolyLR[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mADAMW[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mfull_model[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m

[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/climatenet_v2[39m[38;5;186m"[39m

[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[05/30 16:06:18] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mREPEAT_SQRT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_test[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_train[39m
[38;5;204mFLOAT32_PRECISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCOLOR_AUG_SSD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSINGLE_CATEGORY_MAX_AREA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnetcdf_semantic[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRGB[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_resnet_backbone[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mENFORCE_INPUT_PROJ[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mOBJECT_MASK_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mPANOPTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m      [39m[38;5;204mSEM_SEG_POSTPROCESSING_BEFORE_INFERENCE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormer[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.553[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.2541[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100814.0726[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m19.2185[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m8.2976[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6.2316[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1461.2256[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.8173[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_MULTI_GRID[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdeeplab[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m18[39m
[38;5;15m    [39m[38;5;204mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mLOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhard_pixel_mining[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormerHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mPIXEL_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBasePixelDecoder[39m
[38;5;15m    [39m[38;5;204mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m    [39m[38;5;204mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_ENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSWIN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mAPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mATTN_DROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mDEPTHS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mDROP_PATH_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;204mDROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m96[39m
[38;5;15m    [39m[38;5;204mMLP_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4.0[39m
[38;5;15m    [39m[38;5;204mNUM_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m24[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mPATCH_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mPATCH_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRETRAIN_IMG_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m224[39m
[38;5;15m    [39m[38;5;204mQKV_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mQK_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mWINDOW_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/climatenet_v2[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfull_model[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupPolyLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mADAMW[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_CONSTANT_ENDING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30000[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[05/30 16:06:18] detectron2 INFO: Full config saved to ./output/climatenet_v2/config.yaml
[05/30 16:06:18] d2.utils.env INFO: Using a generated random seed 22488690
[05/30 16:06:20] d2.engine.defaults INFO: Model:
MaskFormer(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        4, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
  )
  (sem_seg_head): MaskFormerHead(
    (pixel_decoder): BasePixelDecoder(
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_2): Conv2d(
        512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_3): Conv2d(
        1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_4): Conv2d(
        2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (mask_features): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (predictor): TransformerPredictor(
      (pe_layer): PositionEmbeddingSine()
      (transformer): Transformer(
        (encoder): TransformerEncoder(
          (layers): ModuleList()
        )
        (decoder): TransformerDecoder(
          (layers): ModuleList(
            (0-5): 6 x TransformerDecoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (linear1): Linear(in_features=256, out_features=2048, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
              (linear2): Linear(in_features=2048, out_features=256, bias=True)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.1, inplace=False)
              (dropout2): Dropout(p=0.1, inplace=False)
              (dropout3): Dropout(p=0.1, inplace=False)
            )
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (query_embed): Embedding(100, 256)
      (input_proj): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
      (class_embed): Linear(in_features=256, out_features=3, bias=True)
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
    )
  )
  (criterion): SetCriterion(
    (matcher): Matcher HungarianMatcher
        cost_class: 1
        cost_mask: 20.0
        cost_dice: 1.0
  )
)
[05/30 16:06:20] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[05/30 16:06:20] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/aix23606/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[05/30 16:06:20] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[05/30 16:06:20] d2.checkpoint.c2_model_loading WARNING: Shape of stem.conv1.weight in checkpoint is torch.Size([64, 3, 7, 7]), while shape of backbone.stem.conv1.weight in model is torch.Size([64, 4, 7, 7]).
[05/30 16:06:20] d2.checkpoint.c2_model_loading WARNING: stem.conv1.weight will not be loaded. Please double check and see if this is desired.
[05/30 16:06:20] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone - Total num: 53
[05/30 16:06:20] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.stem.conv1.weight[0m
[34mcriterion.empty_weight[0m
[34msem_seg_head.pixel_decoder.adapter_1.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_1.weight[0m
[34msem_seg_head.pixel_decoder.adapter_2.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_2.weight[0m
[34msem_seg_head.pixel_decoder.adapter_3.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_3.weight[0m
[34msem_seg_head.pixel_decoder.layer_1.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_1.weight[0m
[34msem_seg_head.pixel_decoder.layer_2.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_2.weight[0m
[34msem_seg_head.pixel_decoder.layer_3.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_3.weight[0m
[34msem_seg_head.pixel_decoder.layer_4.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_4.weight[0m
[34msem_seg_head.pixel_decoder.mask_features.{bias, weight}[0m
[34msem_seg_head.predictor.class_embed.{bias, weight}[0m
[34msem_seg_head.predictor.input_proj.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.0.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.1.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.2.{bias, weight}[0m
[34msem_seg_head.predictor.query_embed.weight[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.norm.{bias, weight}[0m
[05/30 16:06:20] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.{bias, weight}[0m
[05/30 16:06:27] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/30 16:06:27] d2.data.common INFO: Serializing 61 elements to byte tensors and concatenating them all ...
[05/30 16:06:29] d2.data.common INFO: Serialized dataset takes 1235.27 MiB
[05/30 16:06:36] d2.evaluation.evaluator INFO: Start inference on 61 batches
[05/30 16:06:37] d2.evaluation.evaluator INFO: Inference done 11/61. Dataloading: 0.0042 s/iter. Inference: 0.0545 s/iter. Eval: 0.0025 s/iter. Total: 0.0612 s/iter. ETA=0:00:03
[05/30 16:06:40] d2.evaluation.evaluator INFO: Total inference time: 0:00:03.319807 (0.059282 s / iter per device, on 1 devices)
[05/30 16:06:40] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.048985 s / iter per device, on 1 devices)
[05/30 16:06:41] d2.engine.defaults INFO: Evaluation results for climatenet_test in csv format:
[05/30 16:06:41] d2.evaluation.testing INFO: copypaste: Mean IoU=0.0
[05/30 16:06:56] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/30 16:06:56] d2.data.common INFO: Serializing 61 elements to byte tensors and concatenating them all ...
[05/30 16:06:57] d2.data.common INFO: Serialized dataset takes 1235.27 MiB
[05/30 16:13:22] detectron2 INFO: Rank of current process: 0. World size: 1
[05/30 16:13:24] detectron2 INFO: Environment info:
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.17 | packaged by conda-forge | (main, Apr 10 2025, 22:19:12) [GCC 13.3.0]
numpy                            1.26.4
detectron2                       0.6 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2
detectron2._C                    not built correctly: /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/_C.cpython-310-x86_64-linux-gnu.so: undefined symbol: _ZNK3c105Error4whatEv
Compiler ($CXX)                  c++ (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
CUDA compiler                    Not found
detectron2 arch flags            /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/_C.cpython-310-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.1.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA RTX A6000 (arch=8.6)
Driver version                   535.183.01
CUDA_HOME                        /usr/local/cuda - invalid!
Pillow                           11.1.0
torchvision                      0.16.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torchvision
torchvision arch flags           /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.11.0
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.9.2
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=8.9.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[05/30 16:13:24] detectron2 INFO: Command line arguments: Namespace(config_file='configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50158', opts=[])
[05/30 16:13:24] detectron2 INFO: Contents of args.config_file=configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml:
[38;5;245m# MaskFormer config for Climatenet-based AR semantic segmentation[39m

[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormer[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m1.5530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m0.2541[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m100814.0726[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m19.2185[39m[38;5;15m][39m[38;5;15m   [39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m8.2976[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m6.2316[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m1461.2256[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m15.8173[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_resnet_backbone[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;245m# âœ… ì¶”ê°€[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormerHead[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m[38;5;15m  [39m[38;5;245m# 0=background, 1=AR[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGN[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mnetcdf_semantic[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(768,)[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_train",)[39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_test",)[39m

[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m

[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mWarmupPolyLR[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mADAMW[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mfull_model[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m

[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/climatenet_v2[39m[38;5;186m"[39m

[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[05/30 16:13:24] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mREPEAT_SQRT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_test[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_train[39m
[38;5;204mFLOAT32_PRECISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCOLOR_AUG_SSD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSINGLE_CATEGORY_MAX_AREA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnetcdf_semantic[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRGB[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_resnet_backbone[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mENFORCE_INPUT_PROJ[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mOBJECT_MASK_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mPANOPTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m      [39m[38;5;204mSEM_SEG_POSTPROCESSING_BEFORE_INFERENCE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormer[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.553[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.2541[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100814.0726[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m19.2185[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m8.2976[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6.2316[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1461.2256[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.8173[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_MULTI_GRID[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdeeplab[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m18[39m
[38;5;15m    [39m[38;5;204mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mLOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhard_pixel_mining[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormerHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mPIXEL_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBasePixelDecoder[39m
[38;5;15m    [39m[38;5;204mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m    [39m[38;5;204mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_ENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSWIN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mAPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mATTN_DROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mDEPTHS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mDROP_PATH_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;204mDROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m96[39m
[38;5;15m    [39m[38;5;204mMLP_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4.0[39m
[38;5;15m    [39m[38;5;204mNUM_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m24[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mPATCH_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mPATCH_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRETRAIN_IMG_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m224[39m
[38;5;15m    [39m[38;5;204mQKV_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mQK_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mWINDOW_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/climatenet_v2[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfull_model[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupPolyLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mADAMW[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_CONSTANT_ENDING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30000[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[05/30 16:13:24] detectron2 INFO: Full config saved to ./output/climatenet_v2/config.yaml
[05/30 16:13:24] d2.utils.env INFO: Using a generated random seed 28430820
[05/30 16:13:25] d2.engine.defaults INFO: Model:
MaskFormer(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        4, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
  )
  (sem_seg_head): MaskFormerHead(
    (pixel_decoder): BasePixelDecoder(
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_2): Conv2d(
        512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_3): Conv2d(
        1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_4): Conv2d(
        2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (mask_features): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (predictor): TransformerPredictor(
      (pe_layer): PositionEmbeddingSine()
      (transformer): Transformer(
        (encoder): TransformerEncoder(
          (layers): ModuleList()
        )
        (decoder): TransformerDecoder(
          (layers): ModuleList(
            (0-5): 6 x TransformerDecoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (linear1): Linear(in_features=256, out_features=2048, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
              (linear2): Linear(in_features=2048, out_features=256, bias=True)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.1, inplace=False)
              (dropout2): Dropout(p=0.1, inplace=False)
              (dropout3): Dropout(p=0.1, inplace=False)
            )
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (query_embed): Embedding(100, 256)
      (input_proj): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
      (class_embed): Linear(in_features=256, out_features=3, bias=True)
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
    )
  )
  (criterion): SetCriterion(
    (matcher): Matcher HungarianMatcher
        cost_class: 1
        cost_mask: 20.0
        cost_dice: 1.0
  )
)
[05/30 16:13:25] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[05/30 16:13:25] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/aix23606/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[05/30 16:13:25] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[05/30 16:13:25] d2.checkpoint.c2_model_loading WARNING: Shape of stem.conv1.weight in checkpoint is torch.Size([64, 3, 7, 7]), while shape of backbone.stem.conv1.weight in model is torch.Size([64, 4, 7, 7]).
[05/30 16:13:25] d2.checkpoint.c2_model_loading WARNING: stem.conv1.weight will not be loaded. Please double check and see if this is desired.
[05/30 16:13:25] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone - Total num: 53
[05/30 16:13:25] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.stem.conv1.weight[0m
[34mcriterion.empty_weight[0m
[34msem_seg_head.pixel_decoder.adapter_1.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_1.weight[0m
[34msem_seg_head.pixel_decoder.adapter_2.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_2.weight[0m
[34msem_seg_head.pixel_decoder.adapter_3.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_3.weight[0m
[34msem_seg_head.pixel_decoder.layer_1.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_1.weight[0m
[34msem_seg_head.pixel_decoder.layer_2.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_2.weight[0m
[34msem_seg_head.pixel_decoder.layer_3.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_3.weight[0m
[34msem_seg_head.pixel_decoder.layer_4.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_4.weight[0m
[34msem_seg_head.pixel_decoder.mask_features.{bias, weight}[0m
[34msem_seg_head.predictor.class_embed.{bias, weight}[0m
[34msem_seg_head.predictor.input_proj.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.0.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.1.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.2.{bias, weight}[0m
[34msem_seg_head.predictor.query_embed.weight[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.norm.{bias, weight}[0m
[05/30 16:13:25] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.{bias, weight}[0m
[05/30 16:13:31] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/30 16:13:31] d2.data.common INFO: Serializing 61 elements to byte tensors and concatenating them all ...
[05/30 16:13:32] d2.data.common INFO: Serialized dataset takes 1235.27 MiB
[05/30 16:13:37] d2.evaluation.evaluator INFO: Start inference on 61 batches
[05/30 16:13:38] d2.evaluation.evaluator INFO: Inference done 11/61. Dataloading: 0.0053 s/iter. Inference: 0.0363 s/iter. Eval: 0.0029 s/iter. Total: 0.0445 s/iter. ETA=0:00:02
[05/30 16:13:41] d2.evaluation.evaluator INFO: Total inference time: 0:00:02.840657 (0.050726 s / iter per device, on 1 devices)
[05/30 16:13:41] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.037054 s / iter per device, on 1 devices)
[05/30 16:13:41] d2.engine.defaults INFO: Evaluation results for climatenet_test in csv format:
[05/30 16:13:41] d2.evaluation.testing INFO: copypaste: Mean IoU=0.0
[05/30 16:13:54] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/30 16:13:54] d2.data.common INFO: Serializing 61 elements to byte tensors and concatenating them all ...
[05/30 16:13:55] d2.data.common INFO: Serialized dataset takes 1235.27 MiB
[05/30 16:25:31] detectron2 INFO: Rank of current process: 0. World size: 1
[05/30 16:25:33] detectron2 INFO: Environment info:
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.17 | packaged by conda-forge | (main, Apr 10 2025, 22:19:12) [GCC 13.3.0]
numpy                            1.26.4
detectron2                       0.6 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2
detectron2._C                    not built correctly: /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/_C.cpython-310-x86_64-linux-gnu.so: undefined symbol: _ZNK3c105Error4whatEv
Compiler ($CXX)                  c++ (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
CUDA compiler                    Not found
detectron2 arch flags            /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/_C.cpython-310-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.1.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA RTX A6000 (arch=8.6)
Driver version                   535.183.01
CUDA_HOME                        /usr/local/cuda - invalid!
Pillow                           11.1.0
torchvision                      0.16.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torchvision
torchvision arch flags           /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.11.0
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.9.2
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=8.9.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[05/30 16:25:33] detectron2 INFO: Command line arguments: Namespace(config_file='configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50158', opts=[])
[05/30 16:25:33] detectron2 INFO: Contents of args.config_file=configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml:
[38;5;245m# MaskFormer config for Climatenet-based AR semantic segmentation[39m

[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormer[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m1.5530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m0.2541[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m100814.0726[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m19.2185[39m[38;5;15m][39m[38;5;15m   [39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m8.2976[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m6.2316[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m1461.2256[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m15.8173[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_resnet_backbone[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;245m# âœ… ì¶”ê°€[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormerHead[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m[38;5;15m  [39m[38;5;245m# 0=background, 1=AR[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGN[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mnetcdf_semantic[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(768,)[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_train",)[39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_test",)[39m

[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m

[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mWarmupPolyLR[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mADAMW[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mfull_model[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m

[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/climatenet_v2[39m[38;5;186m"[39m

[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[05/30 16:25:33] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mREPEAT_SQRT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_test[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_train[39m
[38;5;204mFLOAT32_PRECISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCOLOR_AUG_SSD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSINGLE_CATEGORY_MAX_AREA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnetcdf_semantic[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRGB[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_resnet_backbone[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mENFORCE_INPUT_PROJ[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mOBJECT_MASK_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mPANOPTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m      [39m[38;5;204mSEM_SEG_POSTPROCESSING_BEFORE_INFERENCE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormer[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.553[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.2541[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100814.0726[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m19.2185[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m8.2976[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6.2316[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1461.2256[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.8173[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_MULTI_GRID[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdeeplab[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m18[39m
[38;5;15m    [39m[38;5;204mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mLOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhard_pixel_mining[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormerHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mPIXEL_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBasePixelDecoder[39m
[38;5;15m    [39m[38;5;204mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m    [39m[38;5;204mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_ENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSWIN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mAPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mATTN_DROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mDEPTHS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mDROP_PATH_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;204mDROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m96[39m
[38;5;15m    [39m[38;5;204mMLP_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4.0[39m
[38;5;15m    [39m[38;5;204mNUM_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m24[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mPATCH_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mPATCH_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRETRAIN_IMG_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m224[39m
[38;5;15m    [39m[38;5;204mQKV_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mQK_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mWINDOW_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/climatenet_v2[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfull_model[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupPolyLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mADAMW[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_CONSTANT_ENDING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30000[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[05/30 16:25:33] detectron2 INFO: Full config saved to ./output/climatenet_v2/config.yaml
[05/30 16:25:33] d2.utils.env INFO: Using a generated random seed 37276933
[05/30 16:25:34] d2.engine.defaults INFO: Model:
MaskFormer(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        4, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
  )
  (sem_seg_head): MaskFormerHead(
    (pixel_decoder): BasePixelDecoder(
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_2): Conv2d(
        512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_3): Conv2d(
        1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_4): Conv2d(
        2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (mask_features): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (predictor): TransformerPredictor(
      (pe_layer): PositionEmbeddingSine()
      (transformer): Transformer(
        (encoder): TransformerEncoder(
          (layers): ModuleList()
        )
        (decoder): TransformerDecoder(
          (layers): ModuleList(
            (0-5): 6 x TransformerDecoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (linear1): Linear(in_features=256, out_features=2048, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
              (linear2): Linear(in_features=2048, out_features=256, bias=True)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.1, inplace=False)
              (dropout2): Dropout(p=0.1, inplace=False)
              (dropout3): Dropout(p=0.1, inplace=False)
            )
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (query_embed): Embedding(100, 256)
      (input_proj): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
      (class_embed): Linear(in_features=256, out_features=3, bias=True)
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
    )
  )
  (criterion): SetCriterion(
    (matcher): Matcher HungarianMatcher
        cost_class: 1
        cost_mask: 20.0
        cost_dice: 1.0
  )
)
[05/30 16:25:34] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[05/30 16:25:34] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/aix23606/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[05/30 16:25:34] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[05/30 16:25:34] d2.checkpoint.c2_model_loading WARNING: Shape of stem.conv1.weight in checkpoint is torch.Size([64, 3, 7, 7]), while shape of backbone.stem.conv1.weight in model is torch.Size([64, 4, 7, 7]).
[05/30 16:25:34] d2.checkpoint.c2_model_loading WARNING: stem.conv1.weight will not be loaded. Please double check and see if this is desired.
[05/30 16:25:34] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone - Total num: 53
[05/30 16:25:34] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.stem.conv1.weight[0m
[34mcriterion.empty_weight[0m
[34msem_seg_head.pixel_decoder.adapter_1.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_1.weight[0m
[34msem_seg_head.pixel_decoder.adapter_2.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_2.weight[0m
[34msem_seg_head.pixel_decoder.adapter_3.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_3.weight[0m
[34msem_seg_head.pixel_decoder.layer_1.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_1.weight[0m
[34msem_seg_head.pixel_decoder.layer_2.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_2.weight[0m
[34msem_seg_head.pixel_decoder.layer_3.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_3.weight[0m
[34msem_seg_head.pixel_decoder.layer_4.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_4.weight[0m
[34msem_seg_head.pixel_decoder.mask_features.{bias, weight}[0m
[34msem_seg_head.predictor.class_embed.{bias, weight}[0m
[34msem_seg_head.predictor.input_proj.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.0.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.1.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.2.{bias, weight}[0m
[34msem_seg_head.predictor.query_embed.weight[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.0.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.1.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.2.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.3.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.4.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.norm3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer.decoder.layers.5.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer.decoder.norm.{bias, weight}[0m
[05/30 16:25:34] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.{bias, weight}[0m
[05/30 16:25:42] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/30 16:25:42] d2.data.common INFO: Serializing 61 elements to byte tensors and concatenating them all ...
[05/30 16:25:45] d2.data.common INFO: Serialized dataset takes 1235.27 MiB
[05/30 16:25:50] d2.evaluation.evaluator INFO: Start inference on 61 batches
[05/30 16:25:52] d2.evaluation.evaluator INFO: Inference done 11/61. Dataloading: 0.0051 s/iter. Inference: 0.0309 s/iter. Eval: 0.0030 s/iter. Total: 0.0391 s/iter. ETA=0:00:01
[05/30 16:25:54] d2.evaluation.evaluator INFO: Total inference time: 0:00:02.346519 (0.041902 s / iter per device, on 1 devices)
[05/30 16:25:54] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:01 (0.029729 s / iter per device, on 1 devices)
[05/30 16:25:54] d2.engine.defaults INFO: Evaluation results for climatenet_test in csv format:
[05/30 16:25:54] d2.evaluation.testing INFO: copypaste: Mean IoU=0.0
[05/30 16:26:09] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/30 16:26:09] d2.data.common INFO: Serializing 61 elements to byte tensors and concatenating them all ...
[05/30 16:26:10] d2.data.common INFO: Serialized dataset takes 1235.27 MiB
[05/30 16:33:58] detectron2 INFO: Rank of current process: 0. World size: 1
[05/30 16:33:59] detectron2 INFO: Environment info:
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.17 | packaged by conda-forge | (main, Apr 10 2025, 22:19:12) [GCC 13.3.0]
numpy                            1.26.4
detectron2                       0.6 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2
detectron2._C                    not built correctly: /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/_C.cpython-310-x86_64-linux-gnu.so: undefined symbol: _ZNK3c105Error4whatEv
Compiler ($CXX)                  c++ (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
CUDA compiler                    Not found
detectron2 arch flags            /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/_C.cpython-310-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.1.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1,2,3,4,5,6,7              NVIDIA RTX A6000 (arch=8.6)
Driver version                   535.183.01
CUDA_HOME                        /usr/local/cuda - invalid!
Pillow                           11.1.0
torchvision                      0.16.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torchvision
torchvision arch flags           /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.11.0
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.9.2
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=8.9.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[05/30 16:33:59] detectron2 INFO: Command line arguments: Namespace(config_file='configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50158', opts=['MODEL.WEIGHTS', './output/climatenet_v2/model_final.pth'])
[05/30 16:33:59] detectron2 INFO: Contents of args.config_file=configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml:
[38;5;245m# MaskFormer config for Climatenet-based AR semantic segmentation[39m

[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormer[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m1.5530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m0.2541[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m100814.0726[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m19.2185[39m[38;5;15m][39m[38;5;15m   [39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m8.2976[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m6.2316[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m1461.2256[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m15.8173[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_resnet_backbone[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;245m# âœ… ì¶”ê°€[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormerHead[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m[38;5;15m  [39m[38;5;245m# 0=background, 1=AR[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGN[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mnetcdf_semantic[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(768,)[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_train",)[39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_test",)[39m

[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m

[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mWarmupPolyLR[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mADAMW[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mfull_model[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m

[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/climatenet_v2[39m[38;5;186m"[39m

[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[05/30 16:33:59] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mREPEAT_SQRT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_test[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_train[39m
[38;5;204mFLOAT32_PRECISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCOLOR_AUG_SSD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSINGLE_CATEGORY_MAX_AREA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnetcdf_semantic[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRGB[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_resnet_backbone[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mENFORCE_INPUT_PROJ[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mOBJECT_MASK_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mPANOPTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m      [39m[38;5;204mSEM_SEG_POSTPROCESSING_BEFORE_INFERENCE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormer[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.553[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.2541[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100814.0726[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m19.2185[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m8.2976[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6.2316[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1461.2256[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.8173[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_MULTI_GRID[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdeeplab[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m18[39m
[38;5;15m    [39m[38;5;204mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mLOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhard_pixel_mining[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormerHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mPIXEL_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBasePixelDecoder[39m
[38;5;15m    [39m[38;5;204mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m    [39m[38;5;204mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_ENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSWIN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mAPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mATTN_DROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mDEPTHS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mDROP_PATH_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;204mDROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m96[39m
[38;5;15m    [39m[38;5;204mMLP_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4.0[39m
[38;5;15m    [39m[38;5;204mNUM_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m24[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mPATCH_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mPATCH_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRETRAIN_IMG_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m224[39m
[38;5;15m    [39m[38;5;204mQKV_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mQK_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mWINDOW_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/climatenet_v2/model_final.pth[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/climatenet_v2[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfull_model[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupPolyLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mADAMW[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_CONSTANT_ENDING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30000[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[05/30 16:33:59] detectron2 INFO: Full config saved to ./output/climatenet_v2/config.yaml
[05/30 16:33:59] d2.utils.env INFO: Using a generated random seed 63932749
[05/30 16:34:01] d2.engine.defaults INFO: Model:
MaskFormer(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        4, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
  )
  (sem_seg_head): MaskFormerHead(
    (pixel_decoder): BasePixelDecoder(
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_2): Conv2d(
        512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_3): Conv2d(
        1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_4): Conv2d(
        2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (mask_features): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (predictor): TransformerPredictor(
      (pe_layer): PositionEmbeddingSine()
      (transformer): Transformer(
        (encoder): TransformerEncoder(
          (layers): ModuleList()
        )
        (decoder): TransformerDecoder(
          (layers): ModuleList(
            (0-5): 6 x TransformerDecoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (linear1): Linear(in_features=256, out_features=2048, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
              (linear2): Linear(in_features=2048, out_features=256, bias=True)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.1, inplace=False)
              (dropout2): Dropout(p=0.1, inplace=False)
              (dropout3): Dropout(p=0.1, inplace=False)
            )
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (query_embed): Embedding(100, 256)
      (input_proj): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
      (class_embed): Linear(in_features=256, out_features=3, bias=True)
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
    )
  )
  (criterion): SetCriterion(
    (matcher): Matcher HungarianMatcher
        cost_class: 1
        cost_mask: 20.0
        cost_dice: 1.0
  )
)
[05/30 16:34:01] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from ./output/climatenet_v2/model_final.pth ...
[05/30 16:34:01] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./output/climatenet_v2/model_final.pth ...
[05/30 16:34:08] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/30 16:34:08] d2.data.common INFO: Serializing 61 elements to byte tensors and concatenating them all ...
[05/30 16:34:09] d2.data.common INFO: Serialized dataset takes 1235.27 MiB
[05/30 16:34:15] d2.evaluation.evaluator INFO: Start inference on 61 batches
[05/30 16:34:17] d2.evaluation.evaluator INFO: Inference done 11/61. Dataloading: 0.0049 s/iter. Inference: 0.0654 s/iter. Eval: 0.0050 s/iter. Total: 0.0754 s/iter. ETA=0:00:03
[05/30 16:34:20] d2.evaluation.evaluator INFO: Total inference time: 0:00:04.343837 (0.077569 s / iter per device, on 1 devices)
[05/30 16:34:20] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:03 (0.065038 s / iter per device, on 1 devices)
[05/30 16:34:21] d2.engine.defaults INFO: Evaluation results for climatenet_test in csv format:
[05/30 16:34:21] d2.evaluation.testing INFO: copypaste: Mean IoU=0.34885755873424135
[05/30 16:34:34] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/30 16:34:34] d2.data.common INFO: Serializing 61 elements to byte tensors and concatenating them all ...
[05/30 16:34:36] d2.data.common INFO: Serialized dataset takes 1235.27 MiB
[05/30 17:16:09] detectron2 INFO: Rank of current process: 0. World size: 1
[05/30 17:16:10] detectron2 INFO: Environment info:
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.17 | packaged by conda-forge | (main, Apr 10 2025, 22:19:12) [GCC 13.3.0]
numpy                            1.26.4
detectron2                       0.6 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2
detectron2._C                    not built correctly: /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/_C.cpython-310-x86_64-linux-gnu.so: undefined symbol: _ZNK3c105Error4whatEv
Compiler ($CXX)                  c++ (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
CUDA compiler                    Not found
detectron2 arch flags            /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/detectron2/_C.cpython-310-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.1.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA RTX A6000 (arch=8.6)
Driver version                   535.183.01
CUDA_HOME                        /usr/local/cuda - invalid!
Pillow                           11.1.0
torchvision                      0.16.0+cu121 @/home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torchvision
torchvision arch flags           /home/aix23606/anaconda3/envs/maskformer/lib/python3.10/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.11.0
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.9.2
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=8.9.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[05/30 17:16:10] detectron2 INFO: Command line arguments: Namespace(config_file='configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml', resume=False, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50158', opts=[])
[05/30 17:16:10] detectron2 INFO: Contents of args.config_file=configs/climatenet/semantic/maskformer_R50_bs8_50ep.yaml:
[38;5;245m# MaskFormer config for Climatenet-based AR semantic segmentation[39m

[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormer[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m1.5530[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m0.2541[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m100814.0726[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m19.2185[39m[38;5;15m][39m[38;5;15m   [39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m8.2976[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m6.2316[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m1461.2256[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m15.8173[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_resnet_backbone[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m[38;5;15m  [39m[38;5;245m# âœ… ì¶”ê°€[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m

[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormerHead[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m[38;5;15m  [39m[38;5;245m# 0=background, 1=AR[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGN[39m[38;5;186m"[39m

[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mnetcdf_semantic[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(768,)[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_train",)[39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("climatenet_test",)[39m

[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m

[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mWarmupPolyLR[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mADAMW[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mfull_model[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m

[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/climatenet_v2[39m[38;5;186m"[39m

[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m

[05/30 17:16:10] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mREPEAT_SQRT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_test[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mclimatenet_train[39m
[38;5;204mFLOAT32_PRECISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCOLOR_AUG_SSD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSINGLE_CATEGORY_MAX_AREA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnetcdf_semantic[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRGB[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1152[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_resnet_backbone[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mENFORCE_INPUT_PROJ[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mOBJECT_MASK_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mPANOPTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m      [39m[38;5;204mSEM_SEG_POSTPROCESSING_BEFORE_INFERENCE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormer[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.553[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.2541[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100814.0726[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m19.2185[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m8.2976[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6.2316[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1461.2256[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.8173[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_MULTI_GRID[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdeeplab[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m18[39m
[38;5;15m    [39m[38;5;204mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mLOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhard_pixel_mining[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormerHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mPIXEL_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBasePixelDecoder[39m
[38;5;15m    [39m[38;5;204mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m    [39m[38;5;204mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_ENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSWIN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mAPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mATTN_DROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mDEPTHS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mDROP_PATH_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;204mDROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m96[39m
[38;5;15m    [39m[38;5;204mMLP_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4.0[39m
[38;5;15m    [39m[38;5;204mNUM_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m24[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mPATCH_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mPATCH_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRETRAIN_IMG_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m224[39m
[38;5;15m    [39m[38;5;204mQKV_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mQK_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mWINDOW_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output/climatenet_v2[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfull_model[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupPolyLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mADAMW[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_CONSTANT_ENDING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30000[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[05/30 17:16:10] detectron2 INFO: Full config saved to ./output/climatenet_v2/config.yaml
[05/30 17:16:10] d2.utils.env INFO: Using a generated random seed 14806060
[05/30 17:16:11] d2.engine.defaults INFO: Model:
MaskFormer(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        4, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
  )
  (sem_seg_head): MaskFormerHead(
    (pixel_decoder): BasePixelDecoder(
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_2): Conv2d(
        512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (adapter_3): Conv2d(
        1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_4): Conv2d(
        2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (mask_features): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (predictor): TransformerPredictor(
      (pe_layer): PositionEmbeddingSine()
      (transformer): Transformer(
        (encoder): TransformerEncoder(
          (layers): ModuleList()
        )
        (decoder): TransformerDecoder(
          (layers): ModuleList(
            (0-5): 6 x TransformerDecoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (linear1): Linear(in_features=256, out_features=2048, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
              (linear2): Linear(in_features=2048, out_features=256, bias=True)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.1, inplace=False)
              (dropout2): Dropout(p=0.1, inplace=False)
              (dropout3): Dropout(p=0.1, inplace=False)
            )
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (query_embed): Embedding(100, 256)
      (input_proj): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
      (class_embed): Linear(in_features=256, out_features=3, bias=True)
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
    )
  )
  (criterion): SetCriterion(
    (matcher): Matcher HungarianMatcher
        cost_class: 1
        cost_mask: 20.0
        cost_dice: 1.0
  )
)
[05/30 17:16:48] d2.data.build INFO: Using training sampler TrainingSampler
[05/30 17:16:48] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/30 17:16:48] d2.data.common INFO: Serializing 397 elements to byte tensors and concatenating them all ...
[05/30 17:17:17] d2.data.common INFO: Serialized dataset takes 8039.39 MiB
[05/30 17:17:17] d2.data.build INFO: Making batched data loader with batch_size=8
[05/30 17:17:17] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from ./output/climatenet_v2/model_final.pth ...
[05/30 17:17:17] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ./output/climatenet_v2/model_final.pth ...
[05/30 17:17:17] fvcore.common.checkpoint INFO: Loading trainer from ./output/climatenet_v2/model_final.pth ...
[05/30 17:17:17] d2.engine.hooks INFO: Loading scheduler from state_dict ...
[05/30 17:17:17] d2.engine.train_loop INFO: Starting training from iteration 10000
[05/30 17:17:17] d2.engine.hooks INFO: Total training time: 0:00:00 (0:00:00 on hooks)
[05/30 17:17:27] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/30 17:17:27] d2.data.common INFO: Serializing 61 elements to byte tensors and concatenating them all ...
[05/30 17:17:28] d2.data.common INFO: Serialized dataset takes 1235.27 MiB
[05/30 17:17:33] d2.evaluation.evaluator INFO: Start inference on 61 batches
[05/30 17:17:35] d2.evaluation.evaluator INFO: Inference done 11/61. Dataloading: 0.0042 s/iter. Inference: 0.0332 s/iter. Eval: 0.0027 s/iter. Total: 0.0402 s/iter. ETA=0:00:02
[05/30 17:17:37] d2.evaluation.evaluator INFO: Total inference time: 0:00:02.349813 (0.041961 s / iter per device, on 1 devices)
[05/30 17:17:37] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:01 (0.031963 s / iter per device, on 1 devices)
[05/30 17:17:37] d2.engine.defaults INFO: Evaluation results for climatenet_test in csv format:
[05/30 17:17:37] d2.evaluation.testing INFO: copypaste: Mean IoU=0.34885755873424135
[05/30 17:17:37] d2.utils.events INFO:  iter: 10001       lr: N/A  max_mem: 1417M
